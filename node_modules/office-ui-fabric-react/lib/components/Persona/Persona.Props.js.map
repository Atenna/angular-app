{"version":3,"sources":["components/Persona/Persona.Props.ts"],"names":[],"mappings":";AAoEA,WAAY,WAAW;IACrB,6CAAI,CAAA;IACJ,yDAAU,CAAA;IACV,+CAAK,CAAA;IACL,mDAAO,CAAA;IACP,+CAAK,CAAA;IACL,yDAAU,CAAA;AACZ,CAAC,EAPW,mBAAW,KAAX,mBAAW,QAOtB;AAPD,IAAY,WAAW,GAAX,mBAOX,CAAA;AAED,WAAY,eAAe;IACzB,qDAAI,CAAA;IACJ,2DAAO,CAAA;IACP,yDAAM,CAAA;IACN,qDAAI,CAAA;IACJ,mDAAG,CAAA;IACH,2DAAO,CAAA;IACP,qDAAI,CAAA;AACN,CAAC,EARW,uBAAe,KAAf,uBAAe,QAQ1B;AARD,IAAY,eAAe,GAAf,uBAQX,CAAA;AAED,WAAY,oBAAoB;IAC9B,yEAAS,CAAA;IACT,+DAAI,CAAA;IACJ,uEAAQ,CAAA;IACR,+DAAI,CAAA;IACJ,2EAAU,CAAA;IACV,iEAAK,CAAA;IACL,yEAAS,CAAA;IACT,yEAAS,CAAA;IACT,+DAAI,CAAA;IACJ,qEAAO,CAAA;IACP,oEAAM,CAAA;IACN,kEAAK,CAAA;IACL,oEAAM,CAAA;IACN,8DAAG,CAAA;IACH,sEAAO,CAAA;AACT,CAAC,EAhBW,4BAAoB,KAApB,4BAAoB,QAgB/B;AAhBD,IAAY,oBAAoB,GAApB,4BAgBX,CAAA","file":"components/Persona/Persona.Props.js","sourcesContent":["import * as React from 'react';\r\nimport { Persona } from './Persona';\r\n\r\nexport interface IPersonaProps extends React.HTMLProps<Persona> {\r\n  /**\r\n   * Primary text to display, usually the name of the person.\r\n   */\r\n  primaryText?: string;\r\n\r\n  /**\r\n   * Decides the size of the control.\r\n   * @defaultvalue PersonaSize.regular\r\n   */\r\n  size?: PersonaSize;\r\n\r\n  /**\r\n   * If true, adds the css class 'is-fadeIn' to the image.\r\n   */\r\n  imageShouldFadeIn?: boolean;\r\n\r\n  /**\r\n   * Url to the image to use, should be a square aspect ratio and big enough to fit in the image area.\r\n   */\r\n  imageUrl?: string;\r\n\r\n  /**\r\n   * The user's initials to display in the image area when there is no image.\r\n   */\r\n  imageInitials?: string;\r\n\r\n  /**\r\n   * The background color when the user's initials are displayed.\r\n   * @defaultvalue PersonaInitialsColor.blue\r\n   */\r\n  initialsColor?: PersonaInitialsColor;\r\n\r\n  /**\r\n   * Presence of the person to display - will not display presence if undefined.\r\n   * @defaultvalue PersonaPresence.none\r\n   */\r\n  presence?: PersonaPresence;\r\n\r\n  /**\r\n   * Secondary text to display, usually the role of the user.\r\n   */\r\n  secondaryText?: string;\r\n\r\n  /**\r\n   * Tertiary text to display, usually the status of the user.\r\n   */\r\n  tertiaryText?: string;\r\n\r\n  /**\r\n   * Optional text to display, usually a custom message set.\r\n   */\r\n  optionalText?: string;\r\n\r\n  /**\r\n   * Whether to not render persona details, and just render the persona image/initials.\r\n   */\r\n  hidePersonaDetails?: boolean;\r\n\r\n  /**\r\n   * Additional CSS class(es) to apply to the Persona\r\n   */\r\n  className?: string;\r\n}\r\n\r\nexport enum PersonaSize {\r\n  tiny,\r\n  extraSmall,\r\n  small,\r\n  regular,\r\n  large,\r\n  extraLarge\r\n}\r\n\r\nexport enum PersonaPresence {\r\n  none,\r\n  offline,\r\n  online,\r\n  away,\r\n  dnd,\r\n  blocked,\r\n  busy\r\n}\r\n\r\nexport enum PersonaInitialsColor {\r\n  lightBlue,\r\n  blue,\r\n  darkBlue,\r\n  teal,\r\n  lightGreen,\r\n  green,\r\n  darkGreen,\r\n  lightPink,\r\n  pink,\r\n  magenta,\r\n  purple,\r\n  black,\r\n  orange,\r\n  red,\r\n  darkRed\r\n}"],"sourceRoot":"..\\..\\..\\src"}