{"version":3,"sources":["components/Tooltip/TooltipHost.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,uCAAuC;AACvC,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sCAAsC;AACtC,8BAA8B,4BAA4B,CAAC,CAAA;AAE3D,2BAA8C,4BAA4B,CAAC,CAAA;AAC3E,yBAAyB,0BAA0B,CAAC,CAAA;AACpD,wBAAwB,WAAW,CAAC,CAAA;AACpC,8BAA6B,iBAAiB,CAAC,CAAA;AAE/C;IAAiC,+BAAqC;IASpE,cAAc;IACd,qBAAY,KAAwB;QAClC,kBAAM,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,KAAK,GAAG;YACX,gBAAgB,EAAE,KAAK;SACxB,CAAC;IACJ,CAAC;IAED,SAAS;IACF,4BAAM,GAAb;QACE,IAAA,eAA8D,EAAxD,oBAAO,EAAE,sBAAQ,EAAE,oCAAe,EAAE,gBAAK,CAAgB;QACzD,kDAAgB,CAAgB;QAEtC,MAAM,CAAC,CACL,qBAAC,GAAG,aACF,SAAS,EAAC,gBAAgB,EAC1B,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAG,GACnC,EAAE,cAAc,EAAE,IAAI,CAAC,oBAAoB,EAAE,EAC7C,EAAE,aAAa,EAAE,IAAI,CAAC,oBAAoB,EAAE,GACjD,YAAY,EAAG,IAAI,CAAC,oBAAsB,EAC1C,YAAY,EAAG,IAAI,CAAC,oBAAsB;YAExC,QAAU;YACV,gBAAgB,GAAG,CACnB,oBAAC,iBAAO,YACN,KAAK,EAAG,KAAO,EACf,OAAO,EAAG,OAAS,EACnB,aAAa,EAAG,IAAI,CAAC,YAAc,EACnC,eAAe,EAAG,eAAiB,GAC9B,2BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,0BAAa,CAAC,EAEtC,CACX,GAAG,CAAC,IAAI,CAAG,CACR,CACP,CAAC;IACJ,CAAC;IAED,eAAe;IAEP,0CAAoB,GAA5B,UAA6B,EAAO;QAClC,IAAI,CAAC,QAAQ,CAAC;YACZ,gBAAgB,EAAE,IAAI;SACvB,CAAC,CAAC;IACL,CAAC;IAED,eAAe;IAEP,0CAAoB,GAA5B,UAA6B,EAAO;QAClC,IAAI,CAAC,QAAQ,CAAC;YACZ,gBAAgB,EAAE,KAAK;SACxB,CAAC,CAAC;IACL,CAAC;IA3Da,wBAAY,GAAG;QAC3B,KAAK,EAAE,4BAAY,CAAC,MAAM;KAC3B,CAAC;IA4CF;QAAC,mBAAQ;2DAAA;IAQT;QAAC,mBAAQ;2DAAA;IAMX,kBAAC;AAAD,CA9DA,AA8DC,CA9DgC,6BAAa,GA8D7C;AA9DY,mBAAW,cA8DvB,CAAA","file":"components/Tooltip/TooltipHost.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport { BaseComponent } from '../../common/BaseComponent';\r\nimport { ITooltipHostProps } from './TooltipHost.Props';\r\nimport { getNativeProps, divProperties } from '../../utilities/properties';\r\nimport { autobind } from '../../utilities/autobind';\r\nimport { Tooltip } from './Tooltip';\r\nimport { TooltipDelay } from './Tooltip.Props';\r\n\r\nexport class TooltipHost extends BaseComponent<ITooltipHostProps, any> {\r\n\r\n  public static defaultProps = {\r\n    delay: TooltipDelay.medium\r\n  };\r\n\r\n  // The wrapping div that gets the hover events\r\n  private _tooltipHost: HTMLElement;\r\n\r\n  // Constructor\r\n  constructor(props: ITooltipHostProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isTooltipVisible: false,\r\n    };\r\n  }\r\n\r\n  // Render\r\n  public render() {\r\n    let { content, children, directionalHint, delay } = this.props;\r\n    let { isTooltipVisible } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className='ms-TooltipHost'\r\n        ref={ this._resolveRef('_tooltipHost') }\r\n        { ...{ onFocusCapture: this._onTooltipMouseEnter } }\r\n        { ...{ onBlurCapture: this._onTooltipMouseLeave } }\r\n        onMouseEnter={ this._onTooltipMouseEnter }\r\n        onMouseLeave={ this._onTooltipMouseLeave }\r\n        >\r\n        { children }\r\n        { isTooltipVisible ? (\r\n          <Tooltip\r\n            delay={ delay }\r\n            content={ content }\r\n            targetElement={ this._tooltipHost }\r\n            directionalHint={ directionalHint }\r\n            { ...getNativeProps(this.props, divProperties) }\r\n            >\r\n          </Tooltip>\r\n        ) : (null) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show Tooltip\r\n  @autobind\r\n  private _onTooltipMouseEnter(ev: any) {\r\n    this.setState({\r\n      isTooltipVisible: true\r\n    });\r\n  }\r\n\r\n  // Hide Tooltip\r\n  @autobind\r\n  private _onTooltipMouseLeave(ev: any) {\r\n    this.setState({\r\n      isTooltipVisible: false\r\n    });\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\src"}