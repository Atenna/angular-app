{"version":3,"sources":["components/FocusZone/FocusZone.test.tsx"],"names":[],"mappings":"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","file":"components/FocusZone/FocusZone.test.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\n\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as ReactTestUtils from 'react-addons-test-utils';\r\nimport { KeyCodes } from '../../utilities/KeyCodes';\r\nimport { FocusZone, FocusZoneDirection } from './index';\r\n\r\nlet { assert } = chai;\r\nlet _lastFocusedElement;\r\n\r\nfunction _onFocus(ev) {\r\n  _lastFocusedElement = ev.target;\r\n}\r\n\r\ndescribe('FocusZone', () => {\r\n\r\n  it('can use arrows vertically', () => {\r\n    let component = ReactTestUtils.renderIntoDocument(\r\n      <div { ...{ onFocusCapture: _onFocus } }>\r\n        <FocusZone direction={ FocusZoneDirection.vertical }>\r\n          <button className='a'>a</button>\r\n          <button className='b'>b</button>\r\n          <button className='c'>c</button>\r\n        </FocusZone>\r\n      </div>\r\n    );\r\n    let focusZone = ReactDOM.findDOMNode(component as React.ReactInstance).firstChild as Element;\r\n    let buttonA = focusZone.querySelector('.a') as HTMLElement;\r\n    let buttonB = focusZone.querySelector('.b') as HTMLElement;\r\n    let buttonC = focusZone.querySelector('.c') as HTMLElement;\r\n\r\n    // Assign bounding locations to buttons.\r\n    buttonA.getBoundingClientRect = () => ({\r\n      top: 0, bottom: 30,\r\n      left: 0, right: 100,\r\n      width: 100,\r\n      height: 30\r\n    } as ClientRect);\r\n    (buttonA as any).isVisible = true;\r\n    buttonA.focus = () => ReactTestUtils.Simulate.focus(buttonA);\r\n\r\n    buttonB.getBoundingClientRect = () => ({\r\n      top: 30, bottom: 60,\r\n      left: 0, right: 100,\r\n      width: 100,\r\n      height: 30\r\n    } as ClientRect);\r\n    (buttonB as any).isVisible = true;\r\n    buttonB.focus = () => ReactTestUtils.Simulate.focus(buttonB);\r\n\r\n    buttonC.getBoundingClientRect = () => ({\r\n      top: 60, bottom: 90,\r\n      left: 0, right: 100,\r\n      width: 100,\r\n      height: 30\r\n    } as ClientRect);\r\n    (buttonC as any).isVisible = true;\r\n    buttonC.focus = () => ReactTestUtils.Simulate.focus(buttonC);\r\n\r\n    // Focus the first button.\r\n    ReactTestUtils.Simulate.focus(buttonA);\r\n    assert(_lastFocusedElement === buttonA, 'buttonA was not focused');\r\n\r\n    // Pressing down should go to b.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.down });\r\n    assert(_lastFocusedElement === buttonB, 'pressing down did not focus b');\r\n\r\n    // Pressing down should go to c.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.down });\r\n    assert(_lastFocusedElement === buttonC, 'pressing down did not focus c');\r\n\r\n    // Pressing down should stay on c.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.down });\r\n    assert(_lastFocusedElement === buttonC, 'pressing down again did not stay on c');\r\n\r\n    // Pressing up should go to b.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.up });\r\n    assert(_lastFocusedElement === buttonB, 'pressing up did not focus b');\r\n\r\n    // Pressing up should go to a.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.up });\r\n    assert(_lastFocusedElement === buttonA, 'pressing up did not focus a');\r\n\r\n    // Pressing up should stay on a.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.up });\r\n    assert(_lastFocusedElement === buttonA, 'pressing up again did not stay on a');\r\n\r\n    // Click on c to focus it.\r\n    ReactTestUtils.Simulate.focus(buttonC);\r\n    assert(_lastFocusedElement === buttonC, 'buttonC was not focused');\r\n\r\n    // Pressing up should move to b.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.up });\r\n    assert(_lastFocusedElement === buttonB, 'pressing up after clicking on c did not focus b');\r\n\r\n    // Test that pressing horizontal buttons don't move focus.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.left });\r\n    assert(_lastFocusedElement === buttonB, 'pressing left did not keep focus on b');\r\n\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.right });\r\n    assert(_lastFocusedElement === buttonB, 'pressing right did not keep focus on b');\r\n\r\n    // Press home should go to the first target.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.home });\r\n    assert(_lastFocusedElement === buttonA, 'pressing home did not move focus to a');\r\n\r\n    // // Press end should go to the last target.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.end });\r\n    assert(_lastFocusedElement === buttonC, 'pressing end did not move focus to c');\r\n  });\r\n\r\n  it('can use arrows horizontally', () => {\r\n    let component = ReactTestUtils.renderIntoDocument(\r\n      <div { ...{ onFocusCapture: _onFocus } }>\r\n        <FocusZone direction={ FocusZoneDirection.horizontal }>\r\n          <button className='a'>a</button>\r\n          <button className='b'>b</button>\r\n          <button className='c'>c</button>\r\n        </FocusZone>\r\n      </div>\r\n    );\r\n    let focusZone = ReactDOM.findDOMNode(component as React.ReactInstance).firstChild as Element;\r\n    let buttonA = focusZone.querySelector('.a') as HTMLElement;\r\n    let buttonB = focusZone.querySelector('.b') as HTMLElement;\r\n    let buttonC = focusZone.querySelector('.c') as HTMLElement;\r\n\r\n    // Assign bounding locations to buttons.\r\n    buttonA.getBoundingClientRect = () => ({\r\n      left: 0, right: 30,\r\n      top: 0, bottom: 100,\r\n      width: 30,\r\n      height: 100\r\n    } as ClientRect);\r\n    (buttonA as any).isVisible = true;\r\n    buttonA.focus = () => ReactTestUtils.Simulate.focus(buttonA);\r\n\r\n    buttonB.getBoundingClientRect = () => ({\r\n      left: 30, right: 60,\r\n      top: 0, bottom: 100,\r\n      width: 30,\r\n      height: 100\r\n    } as ClientRect);\r\n    (buttonB as any).isVisible = true;\r\n    buttonB.focus = () => ReactTestUtils.Simulate.focus(buttonB);\r\n\r\n    buttonC.getBoundingClientRect = () => ({\r\n      left: 60, right: 90,\r\n      top: 0, bottom: 100,\r\n      width: 30,\r\n      height: 100\r\n    } as ClientRect);\r\n    (buttonC as any).isVisible = true;\r\n    buttonC.focus = () => ReactTestUtils.Simulate.focus(buttonC);\r\n\r\n    // Focus the first button.\r\n    ReactTestUtils.Simulate.focus(buttonA);\r\n    assert(_lastFocusedElement === buttonA, 'buttonA was not focused');\r\n\r\n    // Pressing right should go to b.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.right });\r\n    assert(_lastFocusedElement === buttonB, 'pressing right did not focus b');\r\n\r\n    // Pressing right should go to c.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.right });\r\n    assert(_lastFocusedElement === buttonC, 'pressing right did not focus c');\r\n\r\n    // Pressing right should stay on c.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.right });\r\n    assert(_lastFocusedElement === buttonC, 'pressing right again did not stay on c');\r\n\r\n    // Pressing left should go to b.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.left });\r\n    assert(_lastFocusedElement === buttonB, 'pressing left did not focus b');\r\n\r\n    // Pressing left should go to a.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.left });\r\n    assert(_lastFocusedElement === buttonA, 'pressing left did not focus a');\r\n\r\n    // Pressing left should stay on a.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.left });\r\n    assert(_lastFocusedElement === buttonA, 'pressing left again did not stay on a');\r\n\r\n    // Click on c to focus it.\r\n    ReactTestUtils.Simulate.focus(buttonC);\r\n    assert(_lastFocusedElement === buttonC, 'buttonC was not focused');\r\n\r\n    // Pressing left should move to b.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.left });\r\n    assert(_lastFocusedElement === buttonB, 'pressing left after clicking on c did not focus b');\r\n\r\n    // Test that pressing vertical buttons don't move focus.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.up });\r\n    assert(_lastFocusedElement === buttonB, 'pressing up did not keep focus on b');\r\n\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.down });\r\n    assert(_lastFocusedElement === buttonB, 'pressing down did not keep focus on b');\r\n\r\n    // Press home should go to the first target.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.home });\r\n    assert(_lastFocusedElement === buttonA, 'pressing home did not move focus to a');\r\n\r\n    // // Press end should go to the last target.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.end });\r\n    assert(_lastFocusedElement === buttonC, 'pressing end did not move focus to c');\r\n  });\r\n\r\n  it('can use arrows bidirectionally', () => {\r\n    let component = ReactTestUtils.renderIntoDocument(\r\n      <div { ...{ onFocusCapture: _onFocus } }>\r\n        <FocusZone>\r\n          <button className='a'>a</button>\r\n          <button className='b'>b</button>\r\n          <button className='c'>c</button>\r\n          <button className='hidden'>hidden</button>\r\n          <button className='d'>d</button>\r\n          <button className='e'>e</button>\r\n        </FocusZone>\r\n      </div>\r\n    );\r\n    let focusZone = ReactDOM.findDOMNode(component as React.ReactInstance).firstChild as Element;\r\n    let buttonA = focusZone.querySelector('.a') as HTMLElement;\r\n    let buttonB = focusZone.querySelector('.b') as HTMLElement;\r\n    let buttonC = focusZone.querySelector('.c') as HTMLElement;\r\n    let hiddenButton = focusZone.querySelector('.hidden') as HTMLElement;\r\n    let buttonD = focusZone.querySelector('.d') as HTMLElement;\r\n    let buttonE = focusZone.querySelector('.e') as HTMLElement;\r\n\r\n    // Set up a grid like so:\r\n    // A B\r\n    // C hiddenButton\r\n    // D E\r\n    //\r\n    // We will iterate from A to B, press down to skip hidden and go to C,\r\n    // down again to E, left to D, then back up to A.\r\n    buttonA.getBoundingClientRect = () => ({\r\n      left: 0, right: 20,\r\n      top: 0, bottom: 20,\r\n      width: 20,\r\n      height: 20\r\n    } as ClientRect);\r\n    (buttonA as any).isVisible = true;\r\n    buttonA.focus = () => ReactTestUtils.Simulate.focus(buttonA);\r\n\r\n    buttonB.getBoundingClientRect = () => ({\r\n      left: 20, right: 40,\r\n      top: 0, bottom: 20,\r\n      width: 20,\r\n      height: 20\r\n    } as ClientRect);\r\n    (buttonB as any).isVisible = true;\r\n    buttonB.focus = () => ReactTestUtils.Simulate.focus(buttonB);\r\n\r\n    buttonC.getBoundingClientRect = () => ({\r\n      left: 0, right: 20,\r\n      top: 20, bottom: 40,\r\n      width: 20,\r\n      height: 20\r\n    } as ClientRect);\r\n    (buttonC as any).isVisible = true;\r\n    buttonC.focus = () => ReactTestUtils.Simulate.focus(buttonC);\r\n\r\n    // hidden button should be ignored.\r\n    hiddenButton.getBoundingClientRect = () => ({\r\n      left: 2, right: 40,\r\n      top: 20, bottom: 40,\r\n      width: 20,\r\n      height: 20\r\n    } as ClientRect);\r\n    hiddenButton.hidden = true;\r\n    hiddenButton.focus = () => ReactTestUtils.Simulate.focus(hiddenButton);\r\n\r\n    buttonD.getBoundingClientRect = () => ({\r\n      left: 0, right: 20,\r\n      top: 40, bottom: 60,\r\n      width: 20,\r\n      height: 20\r\n    } as ClientRect);\r\n    (buttonD as any).isVisible = true;\r\n    buttonD.focus = () => ReactTestUtils.Simulate.focus(buttonD);\r\n\r\n    buttonE.getBoundingClientRect = () => ({\r\n      left: 20, right: 40,\r\n      top: 40, bottom: 60,\r\n      width: 20,\r\n      height: 20\r\n    } as ClientRect);\r\n    (buttonE as any).isVisible = true;\r\n    buttonE.focus = () => ReactTestUtils.Simulate.focus(buttonE);\r\n\r\n    // Focus the first button.\r\n    ReactTestUtils.Simulate.focus(buttonA);\r\n    assert(_lastFocusedElement === buttonA, 'buttonA was not focused');\r\n\r\n    // Pressing right should go to b.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.right });\r\n    assert(_lastFocusedElement === buttonB, 'pressing right did not focus b');\r\n\r\n    // Pressing down should go to c.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.down });\r\n    assert(_lastFocusedElement === buttonC, 'pressing down did not focus c');\r\n\r\n    // Pressing down should go to e.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.down });\r\n    assert(_lastFocusedElement === buttonE, 'pressing down did not focus e');\r\n\r\n    // Pressing left should go to d.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.left });\r\n    assert(_lastFocusedElement === buttonD, 'pressing left did not focus d');\r\n\r\n    // Pressing up should go to c.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.up });\r\n    assert(_lastFocusedElement === buttonC, 'pressing up did not focus c');\r\n\r\n    // Pressing up should go to a.\r\n    ReactTestUtils.Simulate.keyDown(focusZone, { which: KeyCodes.up });\r\n    assert(_lastFocusedElement === buttonA, 'pressing up did not focus a');\r\n  });\r\n});\r\n"],"sourceRoot":"..\\..\\..\\src"}