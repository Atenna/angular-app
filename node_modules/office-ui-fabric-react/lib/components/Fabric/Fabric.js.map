{"version":3,"sources":["components/Fabric/Fabric.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,oBAAoB,qBAAqB,CAAC,CAAA;AAC1C,2BAA2B,uCAAuC,CAAC,CAAA;AACnE,yBAAyB,0BAA0B,CAAC,CAAA;AAEpD,IAAM,qBAAqB,GAAG;IAC5B,mBAAQ,CAAC,EAAE;IACX,mBAAQ,CAAC,IAAI;IACb,mBAAQ,CAAC,IAAI;IACb,mBAAQ,CAAC,KAAK;IACd,mBAAQ,CAAC,IAAI;IACb,mBAAQ,CAAC,GAAG;IACZ,mBAAQ,CAAC,GAAG;IACZ,mBAAQ,CAAC,MAAM;IACf,mBAAQ,CAAC,QAAQ;CAClB,CAAC;AAMF,qFAAqF;AACrF,yEAAyE;AACzE,IAAI,mBAAmB,GAAY,KAAK,CAAC;AAEzC,6HAA6H;AAC7H,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,QAAQ,IAAI,QAAQ,CAAC,eAAe,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACtD,CAAC;AAED;IAA4B,0BAA8D;IAQxF;QACE,iBAAO,CAAC;QAER,IAAI,CAAC,KAAK,GAAG;YACX,cAAc,EAAE,mBAAmB;SACpC,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,IAAI,uBAAU,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAEM,kCAAiB,GAAxB;QACE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACrE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACnE,CAAC;IAEM,qCAAoB,GAA3B;QACE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAEM,uBAAM,GAAb;QACU,8CAAc,CAAgB;QACtC,IAAM,SAAS,GAAG,SAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACjE,iBAAiB,EAAE,cAAc;SAClC,CAAC,CAAC;QAEH,MAAM,CAAC,CACL,qBAAC,GAAG,gBAAM,IAAI,CAAC,KAAK,GAAG,SAAS,EAAG,SAAW,EAAC,GAAG,EAAC,MAAM,GAAG,CAC7D,CAAC;IACJ,CAAC;IAEO,6BAAY,GAApB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC;gBACZ,cAAc,EAAE,KAAK;aACtB,CAAC,CAAC;YAEH,mBAAmB,GAAG,KAAK,CAAC;QAC9B,CAAC;IACH,CAAC;IAEO,2BAAU,GAAlB,UAAmB,EAAiB;QAClC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,qBAAqB,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/E,IAAI,CAAC,QAAQ,CAAC;gBACZ,cAAc,EAAE,IAAI;aACrB,CAAC,CAAC;YAEH,mBAAmB,GAAG,IAAI,CAAC;QAC7B,CAAC;IACH,CAAC;IACH,aAAC;AAAD,CAzDA,AAyDC,CAzD2B,KAAK,CAAC,SAAS,GAyD1C;AAzDY,cAAM,SAyDlB,CAAA","file":"components/Fabric/Fabric.js","sourcesContent":["import * as React from 'react';\r\nimport { css } from '../../utilities/css';\r\nimport { EventGroup } from '../../utilities/eventGroup/EventGroup';\r\nimport { KeyCodes } from '../../utilities/KeyCodes';\r\n\r\nconst DIRECTIONAL_KEY_CODES = [\r\n  KeyCodes.up,\r\n  KeyCodes.down,\r\n  KeyCodes.left,\r\n  KeyCodes.right,\r\n  KeyCodes.home,\r\n  KeyCodes.end,\r\n  KeyCodes.tab,\r\n  KeyCodes.pageUp,\r\n  KeyCodes.pageDown\r\n];\r\n\r\nexport interface IFabricState {\r\n  isFocusVisible?: boolean;\r\n}\r\n\r\n// We will track the last focus visibility state so that if we tear down and recreate\r\n// the Fabric component, we will use the last known value as the default.\r\nlet _lastIsFocusVisible: boolean = false;\r\n\r\n// Ensure that the HTML element has a dir specified. This helps to ensure RTL/LTR macros in css for all components will work.\r\nif (typeof (document) === 'object' && document.documentElement && !document.documentElement.getAttribute('dir')) {\r\n  document.documentElement.setAttribute('dir', 'ltr');\r\n}\r\n\r\nexport class Fabric extends React.Component<React.HTMLProps<HTMLDivElement>, IFabricState> {\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    root: HTMLElement;\r\n  };\r\n\r\n  private _events: EventGroup;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isFocusVisible: _lastIsFocusVisible\r\n    };\r\n\r\n    this._events = new EventGroup(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this._events.on(document.body, 'mousedown', this._onMouseDown, true);\r\n    this._events.on(document.body, 'keydown', this._onKeyDown, true);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this._events.dispose();\r\n  }\r\n\r\n  public render() {\r\n    const { isFocusVisible } = this.state;\r\n    const rootClass = css('ms-Fabric ms-font-m', this.props.className, {\r\n      'is-focusVisible': isFocusVisible\r\n    });\r\n\r\n    return (\r\n      <div { ...this.props } className={ rootClass } ref='root' />\r\n    );\r\n  }\r\n\r\n  private _onMouseDown() {\r\n    if (this.state.isFocusVisible) {\r\n      this.setState({\r\n        isFocusVisible: false\r\n      });\r\n\r\n      _lastIsFocusVisible = false;\r\n    }\r\n  }\r\n\r\n  private _onKeyDown(ev: KeyboardEvent) {\r\n    if (!this.state.isFocusVisible && DIRECTIONAL_KEY_CODES.indexOf(ev.which) > -1) {\r\n      this.setState({\r\n        isFocusVisible: true\r\n      });\r\n\r\n      _lastIsFocusVisible = true;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}