{"version":3,"sources":["components/pickers/AutoFill/BaseAutoFill.test.tsx"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sCAAsC;AAEtC,IAAY,QAAQ,WAAM,WAAW,CAAC,CAAA;AACtC,IAAY,cAAc,WAAM,yBAAyB,CAAC,CAAA;AAC1D,6BAA6B,gBAAgB,CAAC,CAAA;AAC9C,yBAAyB,6BAA6B,CAAC,CAAA;AAEjD,wBAAM,CAAU;AACtB,QAAQ,CAAC,cAAc,EAAE;IACvB,IAAI,QAAsB,CAAC;IAC3B,IAAI,aAA+B,CAAC;IACpC,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC7C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACpC,UAAU,CAAC;QAET,IAAI,SAAS,GAAG,QAAQ,CAAC,MAAM,CAC7B,oBAAC,2BAAY,GACX,GAAG,EAAG,UAAC,CAAC,IAAK,OAAA,QAAQ,GAAG,CAAC,EAAZ,CAAc,EAC3B,qBAAqB,EAAC,OAAO,EAAG,EAClC,QAAQ,CACT,CAAC;QACF,aAAa,GAAG,QAAQ,CAAC,WAAW,CAAC,SAAgC,CAAqB,CAAC;IAC7F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kBAAkB,EAAE,UAAC,IAAI;QAC1B,QAAQ,CAAC,MAAM,CACb,oBAAC,2BAAY,GACX,GAAG,EAAG,UAAC,CAAC,IAAK,OAAA,QAAQ,GAAG,CAAC,EAAZ,CAAc,EAC3B,kBAAkB,EAChB,UAAC,IAAI;YACH,MAAM,CAAC,IAAI,KAAK,KAAK,EAAE,WAAW,GAAG,IAAI,CAAC,CAAC;YAC3C,MAAM,CAAC,QAAQ,CAAC,KAAK,KAAK,KAAK,EAAE,qBAAqB,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YACzE,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC;YAChD,IAAI,EAAE,CAAC;QACT,CACD,EACD,qBAAqB,EAAC,OAAO,EAAG,EAClC,QAAQ,CACT,CAAC;QACF,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;QAC5B,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,UAAC,IAAI;QAC3B,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;QAC5B,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC9C,QAAQ,CAAC,MAAM,CACb,oBAAC,2BAAY,GACX,GAAG,EAAG,UAAC,CAAC,IAAK,OAAA,QAAQ,GAAG,CAAC,EAAZ,CAAc,EAC3B,kBAAkB,EAChB,UAAC,IAAI;YACH,MAAM,CAAC,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAE,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC9D,MAAM,CAAC,IAAI,KAAK,IAAI,EAAE,WAAW,GAAG,IAAI,CAAC,CAAC;YAC1C,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC;YAChD,IAAI,EAAE,CAAC;QACT,CACD,EACD,qBAAqB,EAAC,OAAO,EAAG,EAClC,QAAQ,CACT,CAAC;QACF,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,OAAO,EAAE,mBAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,mBAAQ,CAAC,SAAS,EAAE,CAAC,CAAC;IAC7G,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"components/pickers/AutoFill/BaseAutoFill.test.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\n\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as ReactTestUtils from 'react-addons-test-utils';\r\nimport { BaseAutoFill } from './BaseAutoFill';\r\nimport { KeyCodes } from '../../../utilities/KeyCodes';\r\n\r\nlet { assert } = chai;\r\ndescribe('BaseAutoFill', () => {\r\n  let autoFill: BaseAutoFill;\r\n  let autoFillInput: HTMLInputElement;\r\n  let baseNode = document.createElement('div');\r\n  document.body.appendChild(baseNode);\r\n  beforeEach(() => {\r\n\r\n    let component = ReactDOM.render(\r\n      <BaseAutoFill\r\n        ref={ (c) => autoFill = c }\r\n        suggestedDisplayValue='hello' />,\r\n      baseNode\r\n    );\r\n    autoFillInput = ReactDOM.findDOMNode(component as React.ReactInstance) as HTMLInputElement;\r\n  });\r\n\r\n  it('Input Text Works', (done) => {\r\n    ReactDOM.render(\r\n      <BaseAutoFill\r\n        ref={ (c) => autoFill = c }\r\n        onInputValueChange={\r\n          (text) => {\r\n            assert(text === 'hel', 'text was ' + text);\r\n            assert(autoFill.value === 'hel', 'autoFill value was ' + autoFill.value);\r\n            assert(autoFill.inputElement.value === 'hello');\r\n            done();\r\n          }\r\n        }\r\n        suggestedDisplayValue='hello' />,\r\n      baseNode\r\n    );\r\n    autoFillInput.value = 'hel';\r\n    ReactTestUtils.Simulate.change(autoFillInput);\r\n  });\r\n\r\n  it('Delete Text Works', (done) => {\r\n    autoFillInput.value = 'hel';\r\n    ReactTestUtils.Simulate.change(autoFillInput);\r\n    ReactDOM.render(\r\n      <BaseAutoFill\r\n        ref={ (c) => autoFill = c }\r\n        onInputValueChange={\r\n          (text) => {\r\n            assert(autoFill.value === 'he', 'text was ' + autoFill.value);\r\n            assert(text === 'he', 'text was ' + text);\r\n            assert(autoFill.inputElement.value === 'hello');\r\n            done();\r\n          }\r\n        }\r\n        suggestedDisplayValue='hello' />,\r\n      baseNode\r\n    );\r\n    ReactTestUtils.Simulate.keyDown(autoFillInput, { keyCode: KeyCodes.backspace, which: KeyCodes.backspace });\r\n  });\r\n});\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}