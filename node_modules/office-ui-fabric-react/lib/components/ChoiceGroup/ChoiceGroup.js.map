{"version":3,"sources":["components/ChoiceGroup/ChoiceGroup.tsx"],"names":[],"mappings":"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","file":"components/ChoiceGroup/ChoiceGroup.js","sourcesContent":["import * as React from 'react';\r\nimport { Image } from '../../Image';\r\nimport { IChoiceGroupOption, IChoiceGroupProps } from './ChoiceGroup.Props';\r\nimport { css } from '../../utilities/css';\r\nimport { getId } from '../../utilities/object';\r\nimport './ChoiceGroup.scss';\r\n\r\nexport interface IChoiceGroupState {\r\n  keyChecked: string;\r\n\r\n  /** Is true when the control has focus. */\r\n  keyFocused?: string;\r\n}\r\n\r\nexport class ChoiceGroup extends React.Component<IChoiceGroupProps, IChoiceGroupState> {\r\n  public static defaultProps = {\r\n    options: []\r\n  };\r\n\r\n  private _id: string;\r\n  private _descriptionId: string;\r\n  private _inputElement: HTMLInputElement;\r\n\r\n  constructor(props: IChoiceGroupProps) {\r\n    super();\r\n\r\n    this.state = {\r\n      keyChecked: this._getKeyChecked(props.options),\r\n      keyFocused: undefined\r\n    };\r\n\r\n    this._id = getId('ChoiceGroup');\r\n    this._descriptionId = getId('ChoiceGroupDescription');\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IChoiceGroupProps) {\r\n    const newKeyChecked: string = this._getKeyChecked(newProps.options);\r\n    const oldKeyCheched: string = this._getKeyChecked(this.props.options);\r\n\r\n    if (newKeyChecked !== oldKeyCheched) {\r\n      this.setState({\r\n        keyChecked: newKeyChecked,\r\n      });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let { label, options, className, required } = this.props;\r\n    let { keyChecked, keyFocused } = this.state;\r\n\r\n    const titleClassName = css('ms-Label', className, {\r\n      'is-required': required\r\n    });\r\n\r\n    return (\r\n      // Need to assign role application on containing div because JAWS doesnt call OnKeyDown without this role\r\n      <div role='application' className={ className }>\r\n        <div\r\n          className='ms-ChoiceFieldGroup'\r\n          role='radiogroup'\r\n          aria-labelledby={ this.props.label ? this._id + '-label' : '' }\r\n          >\r\n          <div className='ms-ChoiceFieldGroup-title'>\r\n            { this.props.label ? <label className={ titleClassName } id={ this._id + '-label' }>{ label }</label> : null }\r\n          </div>\r\n\r\n          { options.map((option) => (\r\n            <div\r\n              key={ option.key }\r\n              className={ css('ms-ChoiceField', {\r\n                'ms-ChoiceField--image': !!option.imageSrc,\r\n                'is-inFocus': option.key === keyFocused\r\n              })\r\n              }\r\n              >\r\n              <input\r\n                ref={ (c): HTMLInputElement => this._inputElement = c }\r\n                id={ `${this._id}-${option.key}` }\r\n                className='ms-ChoiceField-input'\r\n                type='radio'\r\n                name={ this._id }\r\n                disabled={ option.isDisabled || option.disabled || this.props.disabled }\r\n                checked={ option.key === keyChecked }\r\n                onChange={ this._onChange.bind(this, option) }\r\n                onFocus={ this._onFocus.bind(this, option) }\r\n                onBlur={ this._onBlur.bind(this, option) }\r\n                aria-describedby={ `${this._descriptionId}-${option.key}` }\r\n                />\r\n              { this._renderField(option) }\r\n            </div>\r\n          )) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this._inputElement) {\r\n      this._inputElement.focus();\r\n    }\r\n  }\r\n\r\n  private _onFocus(option: IChoiceGroupOption, ev: React.FocusEvent<HTMLElement>): void {\r\n    this.setState({\r\n      keyFocused: option.key,\r\n      keyChecked: this.state.keyChecked\r\n    });\r\n  }\r\n\r\n  private _onBlur(option: IChoiceGroupOption, ev: React.FocusEvent<HTMLElement>): void {\r\n    this.setState({\r\n      keyFocused: undefined,\r\n      keyChecked: this.state.keyChecked\r\n    });\r\n  }\r\n\r\n  private _renderField(option: IChoiceGroupOption) {\r\n    const { keyChecked } = this.state;\r\n    let isDisabled = option.isDisabled || option.disabled || this.props.disabled;\r\n\r\n    return (\r\n      <label\r\n        htmlFor={ this._id + '-' + option.key }\r\n        className={ css({\r\n          'ms-ChoiceField-field--image': !!option.imageSrc,\r\n          'ms-ChoiceField-field': !option.imageSrc,\r\n          'is-checked': option.key === keyChecked,\r\n          'is-disabled': isDisabled\r\n        }) }\r\n        >\r\n        {\r\n          option.imageSrc\r\n            ? <div className='ms-ChoiceField-innerField'>\r\n              <div className={ css('ms-ChoiceField-imageWrapper', { 'is-hidden': option.key === keyChecked }) }>\r\n                <Image\r\n                  src={ option.imageSrc }\r\n                  width={ option.imageSize.width }\r\n                  height={ option.imageSize.height }\r\n                  />\r\n              </div>\r\n              <div className={ css('ms-ChoiceField-imageWrapper', { 'is-hidden': option.key !== keyChecked }) }>\r\n                <Image\r\n                  src={ option.selectedImageSrc }\r\n                  width={ option.imageSize.width }\r\n                  height={ option.imageSize.height }\r\n                  />\r\n              </div>\r\n            </div>\r\n            : null\r\n        }\r\n        {\r\n          option.imageSrc\r\n            ? <div className='ms-ChoiceField-labelWrapper'>\r\n              <i className='ms-ChoiceField-icon ms-Icon ms-Icon--CheckMark' />\r\n              <span id={ `${this._descriptionId}-${option.key}` } className='ms-Label'>{ option.text }</span>\r\n            </div>\r\n            : <span id={ `${this._descriptionId}-${option.key}` } className='ms-Label'>{ option.text }</span>\r\n        }\r\n      </label>\r\n    );\r\n  }\r\n\r\n  private _onChange(option: IChoiceGroupOption, evt: React.FormEvent<HTMLInputElement>) {\r\n    let { onChanged } = this.props;\r\n\r\n    this.setState({\r\n      keyChecked: option.key\r\n    });\r\n\r\n    if (onChanged) {\r\n      onChanged(option);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If all the isChecked property of options are falsy values, return undefined;\r\n   * Else return the key of the first option with the truthy isChecked property.\r\n   */\r\n  private _getKeyChecked(options: IChoiceGroupOption[]): string {\r\n    const optionsChecked = options.filter((option: IChoiceGroupOption) => {\r\n      return option.isChecked || option.checked;\r\n    });\r\n\r\n    if (optionsChecked.length === 0) {\r\n      return undefined;\r\n    } else {\r\n      return optionsChecked[0].key;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}