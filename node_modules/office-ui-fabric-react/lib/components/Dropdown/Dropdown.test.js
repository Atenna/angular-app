"use strict";
/* tslint:disable:no-unused-variable */
var React = require('react');
var ReactDOM = require('react-dom');
/* tslint:enable:no-unused-variable */
var expect = chai.expect;
var Dropdown_1 = require('./Dropdown');
describe('Dropdown', function () {
    it('Can flip between enabled and disabled.', function () {
        var options = [
            { key: '1', text: '1' },
            { key: '2', text: '2' },
            { key: '3', text: '3' }
        ];
        var container = document.createElement('div');
        ReactDOM.render(React.createElement(Dropdown_1.Dropdown, {label: 'testgroup', options: options}), container);
        var dropdownRoot = container.querySelector('.ms-Dropdown');
        expect(dropdownRoot.className).not.contains('is-disabled', "shouldn't be disabled");
        expect(dropdownRoot.getAttribute('data-is-focusable')).equals('true', 'data-is-focusable');
        ReactDOM.render(React.createElement(Dropdown_1.Dropdown, {disabled: true, label: 'testgroup', options: options}), container);
        expect(dropdownRoot.className).contains('is-disabled', "should be disabled");
        expect(dropdownRoot.getAttribute('data-is-focusable')).equals('false', 'data-is-focusable');
    });
});

//# sourceMappingURL=Dropdown.test.js.map
