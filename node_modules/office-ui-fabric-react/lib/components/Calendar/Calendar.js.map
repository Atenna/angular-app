{"version":3,"sources":["components/Calendar/Calendar.tsx"],"names":[],"mappings":"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","file":"components/Calendar/Calendar.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  DayOfWeek,\r\n  ICalendar,\r\n  ICalendarProps\r\n} from './Calendar.Props';\r\nimport { CalendarDay } from './CalendarDay';\r\nimport { CalendarMonth } from './CalendarMonth';\r\nimport {\r\n  autobind,\r\n  BaseComponent,\r\n  KeyCodes\r\n} from '../../Utilities';\r\nimport './Calendar.scss';\r\n\r\nexport interface ICalendarState {\r\n  /** The currently focused date in the calendar, but not necessarily selected */\r\n  navigatedDate?: Date;\r\n  /** The currently selected date in the calendar */\r\n  selectedDate?: Date;\r\n}\r\n\r\nexport class Calendar extends BaseComponent<ICalendarProps, ICalendarState> implements ICalendar {\r\n  public static defaultProps: ICalendarProps = {\r\n    onSelectDate: null,\r\n    onDismiss: null,\r\n    isMonthPickerVisible: true,\r\n    value: null,\r\n    firstDayOfWeek: DayOfWeek.Sunday,\r\n    strings: null\r\n  };\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    root: HTMLElement;\r\n    dayPicker: CalendarDay;\r\n  };\r\n\r\n  private _focusOnUpdate: boolean;\r\n\r\n  constructor(props: ICalendarProps) {\r\n    super();\r\n\r\n    let currentDate = props.value && !isNaN(props.value.getTime()) ?\r\n      props.value\r\n      : new Date();\r\n    this.state = {\r\n      selectedDate: currentDate,\r\n      navigatedDate: currentDate\r\n    };\r\n\r\n    this._focusOnUpdate = false;\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: ICalendarProps) {\r\n    let { value } = nextProps;\r\n\r\n    this.setState({\r\n      selectedDate: value || new Date()\r\n    });\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    if (this._focusOnUpdate) {\r\n      this.refs.dayPicker.focus();\r\n      this._focusOnUpdate = false;\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let rootClass = 'ms-DatePicker';\r\n    let { firstDayOfWeek, strings } = this.props;\r\n    let { selectedDate, navigatedDate } = this.state;\r\n\r\n    return (\r\n      <div className={ rootClass } ref='root'>\r\n        <div className={ 'ms-DatePicker-picker ms-DatePicker-picker--opened ms-DatePicker-picker--focused ' + (this.props.isMonthPickerVisible ? 'is-monthPickerVisible' : '') } >\r\n          <div className='ms-DatePicker-holder' onKeyDown={ this._onDatePickerPopupKeyDown }>\r\n            <div className='ms-DatePicker-frame'>\r\n              <div className='ms-DatePicker-wrap'>\r\n                <CalendarDay\r\n                  selectedDate={ selectedDate }\r\n                  navigatedDate={ navigatedDate }\r\n                  onSelectDate={ this._onSelectDate }\r\n                  onNavigateDate={ this._onNavigateDate }\r\n                  firstDayOfWeek={ firstDayOfWeek }\r\n                  strings={ strings }\r\n                  ref='dayPicker' />\r\n                <CalendarMonth\r\n                  navigatedDate={ navigatedDate }\r\n                  strings={ strings }\r\n                  onNavigateDate={ this._onNavigateDate } />\r\n                <span\r\n                  className='ms-DatePicker-goToday js-goToday'\r\n                  onClick={ this._onGotoToday }\r\n                  onKeyDown={ this._onGotoTodayKeyDown }\r\n                  tabIndex={ 0 }>\r\n                  { strings.goToToday }\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this.refs.dayPicker) {\r\n      this.refs.dayPicker.focus();\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _navigateDay(date: Date) {\r\n    this.setState({\r\n      navigatedDate: date\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  private _onNavigateDate(date: Date, focusOnNavigatedDay: boolean) {\r\n    this._navigateDay(date);\r\n    this._focusOnUpdate = focusOnNavigatedDay;\r\n  }\r\n\r\n  @autobind\r\n  private _onSelectDate(date: Date) {\r\n    let { onSelectDate } = this.props;\r\n\r\n    this.setState({\r\n      selectedDate: date\r\n    });\r\n\r\n    if (onSelectDate) {\r\n      onSelectDate(date);\r\n    }\r\n  };\r\n\r\n  @autobind\r\n  private _onGotoToday() {\r\n    this._navigateDay(new Date());\r\n    this._focusOnUpdate = true;\r\n  };\r\n\r\n  @autobind\r\n  private _onGotoTodayKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (ev.which === KeyCodes.enter) {\r\n      ev.preventDefault();\r\n      this._onGotoToday();\r\n    }\r\n  };\r\n\r\n  @autobind\r\n  private _onDatePickerPopupKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\r\n    switch (ev.which) {\r\n      case KeyCodes.enter:\r\n        ev.preventDefault();\r\n        break;\r\n\r\n      case KeyCodes.backspace:\r\n        ev.preventDefault();\r\n        break;\r\n\r\n      case KeyCodes.escape:\r\n        this._handleEscKey(ev);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _handleEscKey(ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (this.props.onDismiss() != null) {\r\n      this.props.onDismiss();\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}