{"version":3,"sources":["utilities/focus.test.tsx"],"names":[],"mappings":"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","file":"utilities/focus.test.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\n\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as ReactTestUtils from 'react-addons-test-utils';\r\nlet { expect } = chai;\r\n\r\nimport { isElementVisible, isElementTabbable } from './focus';\r\n\r\nlet _hiddenElement;\r\nlet _visibleElement;\r\nlet _element;\r\n\r\nfunction renderIntoDocument(element: React.ReactElement<any>): HTMLElement {\r\n  const component = ReactTestUtils.renderIntoDocument(element);\r\n  const renderedDOM: Element = ReactDOM.findDOMNode(component as React.ReactInstance);\r\n  return renderedDOM as HTMLElement;\r\n}\r\n\r\nfunction _initialize() {\r\n  _hiddenElement = renderIntoDocument(\r\n    <div data-is-visible={ false }>\r\n      <button></button>\r\n    </div>\r\n  ) as HTMLElement;\r\n  _visibleElement = renderIntoDocument(\r\n    <div data-is-visible={ true }>\r\n      <button></button>\r\n    </div>\r\n  ) as HTMLElement;\r\n  _element = renderIntoDocument(\r\n    <div>\r\n      <button></button>\r\n    </div>\r\n  ) as HTMLElement;\r\n  (_element as any).isVisible = true;\r\n}\r\n\r\ndescribe('isElementVisible', () => {\r\n  beforeEach(() => _initialize());\r\n  it('returns false if data-is-visible is false', () => {\r\n    expect(isElementVisible(_hiddenElement)).equals(false, 'Element is not visible');\r\n  });\r\n\r\n  it('returns true if data-is-visible is true', () => {\r\n    expect(isElementVisible(_visibleElement)).equals(true, 'Element is visible');\r\n  });\r\n\r\n  it('returns true if data-is-visible is undefined but element is visible', () => {\r\n    expect(isElementVisible(_element)).equals(true, 'Element is visible but data-is-visible is undefined');\r\n  });\r\n\r\n});\r\n\r\ndescribe('isElementTabbable', () => {\r\n\r\n  it('returns false on null', () => {\r\n    expect(isElementVisible(null)).is.false;\r\n  });\r\n\r\n  it('returns false on normal divs', () => {\r\n    let div = document.createElement('div');\r\n\r\n    expect(isElementTabbable(div)).is.false;\r\n  });\r\n\r\n  it('returns false on disabled buttons', () => {\r\n    let button = document.createElement('button');\r\n\r\n    button.setAttribute('disabled', 'true');\r\n\r\n    expect(isElementTabbable(button)).is.false;\r\n\r\n  });\r\n\r\n  it('returns true on buttons', () => {\r\n    let button = document.createElement('button');\r\n\r\n    expect(isElementTabbable(button)).is.true;\r\n  });\r\n\r\n  it('returns true on anchors', () => {\r\n    let anchor = document.createElement('a');\r\n\r\n    expect(isElementTabbable(anchor)).is.true;\r\n  });\r\n\r\n  it('returns true on input elements', () => {\r\n    let input = document.createElement('input');\r\n\r\n    expect(isElementTabbable(input)).is.true;\r\n  });\r\n\r\n  it('returns true on textarea elements', () => {\r\n    let textarea = document.createElement('textarea');\r\n\r\n    expect(isElementTabbable(textarea)).is.true;\r\n  });\r\n\r\n  it('works with tabbable divs', () => {\r\n    let div = document.createElement('div');\r\n\r\n    div.tabIndex = 0;\r\n\r\n    expect(isElementTabbable(div)).is.true;\r\n  });\r\n\r\n  it('returns true with role=button divs', () => {\r\n    let div = document.createElement('div');\r\n\r\n    div.setAttribute('role', 'button');\r\n\r\n    expect(isElementTabbable(div)).is.true;\r\n  });\r\n\r\n  it('returns false with role=button disabled buttons', () => {\r\n    let button = document.createElement('button');\r\n\r\n    button.setAttribute('role', 'button');\r\n    button.setAttribute('disabled', 'true');\r\n\r\n    expect(isElementTabbable(button)).is.false;\r\n  });\r\n\r\n});"],"sourceRoot":"..\\..\\src"}