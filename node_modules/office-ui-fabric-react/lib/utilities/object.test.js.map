{"version":3,"sources":["utilities/object.test.ts"],"names":[],"mappings":";AAAA,uBAAuC,UAAU,CAAC,CAAA;AAE5C,wBAAM,EAAE,oBAAM,CAAU;AAE9B,QAAQ,CAAC,QAAQ,EAAE;IACjB,EAAE,CAAC,oBAAoB,EAAE;QACvB,IAAI,MAAM,GAAG;YACX,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,QAAQ;YACX,CAAC,EAAE;gBACD,CAAC,EAAE,CAAC;aACL;SACF,CAAC;QAEF,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,MAAM,GAAG,eAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAE1C,MAAM,CAAC,MAAM,KAAK,MAAM,EAAE,2BAA2B,CAAC,CAAC;QACvD,MAAM,CAAC,MAAM,KAAK,YAAY,EAAE,yBAAyB,CAAC,CAAC;QAE3D,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,6BAA6B,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,gBAAgB,EAAE;IACzB,EAAE,CAAC,sDAAsD,EAAE;QACzD,IAAI,MAAM,GAAG;YACX,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,QAAQ;SACZ,CAAC;QACF,IAAI,MAAM,GAAG,uBAAc,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,KAAK,GAAG,EAAhB,CAAgB,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;QAExE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"utilities/object.test.js","sourcesContent":["import { assign, filteredAssign } from './object';\r\n\r\nlet { assert, expect } = chai;\r\n\r\ndescribe('assign', () => {\r\n  it('can copy an object', () => {\r\n    let source = {\r\n      a: 1,\r\n      b: 'string',\r\n      c: {\r\n        d: 2\r\n      }\r\n    };\r\n\r\n    let resultTarget = {};\r\n    let result = assign(resultTarget, source);\r\n\r\n    assert(result !== source, 'result was same as source');\r\n    assert(result === resultTarget, 'target was not returned');\r\n\r\n    expect(result).to.eql(source, 'result did not equal source');\r\n  });\r\n});\r\n\r\ndescribe('filteredAssign', () => {\r\n  it('can copy an object but avoid copying some parameters', () => {\r\n    let source = {\r\n      a: 1,\r\n      b: 'string'\r\n    };\r\n    let result = filteredAssign((propName) => propName !== 'b', {}, source);\r\n\r\n    expect(result.a).to.equal(1);\r\n    expect(result.b).to.equal(undefined, 'b was not excluded');\r\n  });\r\n});"],"sourceRoot":"..\\..\\src"}