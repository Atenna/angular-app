{"version":3,"sources":["utilities/decorators/BaseDecorator.ts"],"names":[],"mappings":";;;;;;AACA,sBAA6C,UAAU,CAAC,CAAA;AACxD,8BAA8B,4BAA4B,CAAC,CAAA;AAE3D;IAAyC,iCAAmB;IAI1D;QACE,iBAAO,CAAC;QACR,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjF,CAAC;IAED;;;;;OAKG;IACO,mDAA2B,GAArC,UAAsC,yBAAgD;QACpF,IAAI,CAAC,0BAA0B,GAAG,yBAAyB,CAAC;QAC5D,EAAE,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,oBAAY,CAAC,IAAI,EAAE,yBAAyB,CAAC,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzB,sBAAc,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC;IACH,CAAC;IACH,oBAAC;AAAD,CAvBA,AAuBC,CAvBwC,6BAAa,GAuBrD;AAvBY,qBAAa,gBAuBzB,CAAA","file":"utilities/decorators/BaseDecorator.js","sourcesContent":["import * as React from 'react';\r\nimport { hoistMethods, unhoistMethods } from '../hoist';\r\nimport { BaseComponent } from '../../common/BaseComponent';\r\n\r\nexport class BaseDecorator<P, S> extends BaseComponent<P, S> {\r\n  protected _composedComponentInstance: React.Component<P, S>;\r\n  private _hoisted: string[];\r\n\r\n  constructor() {\r\n    super();\r\n    this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Updates the ref to the component composed by the decorator, which will also take care of hoisting\r\n   * (and unhoisting as appropriate) methods from said component.\r\n   *\r\n   * Pass this method as the argument to the 'ref' property of the composed component.\r\n   */\r\n  protected _updateComposedComponentRef(composedComponentInstance: React.Component<P, S>) {\r\n    this._composedComponentInstance = composedComponentInstance;\r\n    if (composedComponentInstance) {\r\n      this._hoisted = hoistMethods(this, composedComponentInstance);\r\n    } else if (this._hoisted) {\r\n      unhoistMethods(this, this._hoisted);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}