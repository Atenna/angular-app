{"version":3,"sources":["demo/utilities/pageroute.ts"],"names":[],"mappings":";AACA;;EAEE;AACF,+BAAsC,QAAmB,EAAE,SAAiB,EAAE,QAAgB;IAC5F,IAAI,KAAK,GAAW,EAAE,CAAC;IACvB,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,SAAS;QAClC,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACjC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,SAAS;gBAC5B,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAChC,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC;gBACxB,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,KAAK,CAAC;AACf,CAAC;AAbe,6BAAqB,wBAapC,CAAA","file":"demo/utilities/pageroute.js","sourcesContent":["import { IAppState } from '../components/App/AppState';\r\n/*\r\n  Retreive the route URL for a page in a group from the the AppState\r\n*/\r\nexport function getPageRouteFromState(appstate: IAppState, groupName: string, pageName: string): string {\r\n  let route: string = '';\r\n  appstate.examplePages.map((pageValue) => {\r\n    if (groupName === pageValue.name) {\r\n      pageValue.links.map((linkValue) => {\r\n        if (linkValue.name === pageName) {\r\n          route = linkValue.url;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return route;\r\n}"],"sourceRoot":"..\\..\\..\\src"}