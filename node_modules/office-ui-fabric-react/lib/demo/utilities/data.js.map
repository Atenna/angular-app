{"version":3,"sources":["demo/utilities/data.ts"],"names":[],"mappings":"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","file":"demo/utilities/data.js","sourcesContent":["const LOREM_IPSUM = ('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut ' +\r\n  'labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut ' +\r\n  'aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore ' +\r\n  'eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt ' +\r\n  'mollit anim id est laborum').split(' ');\r\n\r\nconst DATA = {\r\n  'color' : [ 'red', 'blue', 'green', 'yellow' ],\r\n  'shape' : [ 'circle', 'square', 'triangle' ],\r\n  'location' : [ 'Seattle', 'New York', 'Chicago', 'Los Angeles', 'Portland' ]\r\n};\r\n\r\nexport function createListItems(count: number, startIndex = 0): any {\r\n  return Array.apply(null, Array(count)).map((item, index) => {\r\n    let size = 150 + Math.round(Math.random() * 100);\r\n\r\n    return {\r\n      thumbnail: `//placehold.it/${ size }x${ size }`,\r\n      key: 'item-' + (index + startIndex) + ' ' + lorem(4),\r\n      name: lorem(5),\r\n      description: lorem(10 + Math.round(Math.random() * 50)),\r\n      color: _randWord(DATA.color),\r\n      shape: _randWord(DATA.shape),\r\n      location: _randWord(DATA.location),\r\n      width: size,\r\n      height: size\r\n    };\r\n  });\r\n}\r\n\r\nexport function createGroups(\r\n  groupCount: number, groupDepth: number, startIndex: number,\r\n  itemsPerGroup: number, level?: number, key?: string) {\r\n  key = key ? key + '-' : '';\r\n  level = level ? level : 0;\r\n  let count = Math.pow(itemsPerGroup, groupDepth);\r\n  return Array.apply(null, Array(groupCount)).map((value, index) => {\r\n    return {\r\n      count: count,\r\n      key: 'group' + key + index,\r\n      name: 'group ' + key + index,\r\n      startIndex: index * count + startIndex,\r\n      level: level,\r\n      children: groupDepth > 1 ?\r\n        createGroups(groupCount, groupDepth - 1, index * count + startIndex, itemsPerGroup, level + 1, key + index) :\r\n        []\r\n    };\r\n  });\r\n}\r\n\r\nexport function lorem(wordCount: number): string {\r\n  return Array.apply(null, Array(wordCount))\r\n    .map(item => _randWord(LOREM_IPSUM))\r\n    .join(' ');\r\n}\r\n\r\nexport function isGroupable(key: string): boolean {\r\n  return key === 'color' ||\r\n    key === 'shape' ||\r\n    key === 'location';\r\n}\r\n\r\nfunction _randWord(array: string[]) {\r\n  let index = Math.floor(Math.random() * array.length);\r\n  return array[index];\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}