{"version":3,"sources":["demo/pages/DatePickerPage/DatePickerPage.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sBAIO,wBAAwB,CAAC,CAAA;AAEhC,yCAAuC,qCAAqC,CAAC,CAAA;AAC7E,4CAA0C,wCAAwC,CAAC,CAAA;AACnF,yCAAuC,qCAAqC,CAAC,CAAA;AAC7E,0BAAsC,2BAA2B,CAAC,CAAA;AAClE,yBAAyB,+BAA+B,CAAC,CAAA;AAGzD,IAAM,0BAA0B,GAAG,OAAO,CAAC,yCAAyC,CAAC,CAAC;AACtF,IAAM,6BAA6B,GAAG,OAAO,CAAC,4CAA4C,CAAC,CAAC;AAC5F,IAAM,0BAA0B,GAAG,OAAO,CAAC,yCAAyC,CAAC,CAAC;AAEtF;IAAoC,kCAA6C;IAG/E;QACE,iBAAO,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,YAAY,CAAC,CAAC;IAChF,CAAC;IACM,+BAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,qBAAa,GACZ,KAAK,EAAC,YAAY,EAClB,aAAa,EAAC,mBAAmB,EACjC,YAAY,EACV,qBAAC,GAAG;YACF,oBAAC,mBAAW,GAAC,KAAK,EAAC,YAAY,EAAC,IAAI,EAAG,0BAA4B;gBACjE,oBAAC,iDAAsB,OAAG;aACd;YACd,oBAAC,mBAAW,GAAC,KAAK,EAAC,8BAA8B,EAAC,IAAI,EAAG,6BAA+B;gBACtF,oBAAC,uDAAyB,OAAG;aACjB;YACd,oBAAC,mBAAW,GAAC,KAAK,EAAC,qCAAqC,EAAC,IAAI,EAAG,0BAA4B;gBAC1F,oBAAC,iDAAsB,OAAG;aACd,CAEjB,EACD,gBAAgB,EACd,oBAAC,0BAAkB,GAAC,aAAa,EAAC,YAAY,EAC/C,EACD,QAAQ,EACN,qBAAC,GAAG;YACF,qBAAC,CAAC,SACA,+DACF,CAAI;SAEP,EACD,aAAa,EACX,qBAAC,GAAG,QACL,EACD,GAAG,EACD,qBAAC,GAAG;YACF,qBAAC,EAAE;gBACD,qBAAC,EAAE,SAAC,qCAAmC,CAAK;gBAC5C,qBAAC,EAAE,SAAC,4HAA0H,CAAK;gBACnI,qBAAC,EAAE,SAAC,mIAAiI,CAAK;gBAC1I,qBAAC,EAAE,SAAC,mKAAiK,CAAK;gBAC1K,qBAAC,EAAE,SAAC,qIAAmI,CAAK,CACzI;SAER,EACD,KAAK,EACH,qBAAC,GAAG;YACF,qBAAC,EAAE;gBACD,qBAAC,EAAE,SAAC,wIAAsI,CAAK;gBAC/I,qBAAC,EAAE,SAAC,uDAAqD,CAAK;gBAC9D,qBAAC,EAAE,SAAC,8EAA4E,CAAK;gBACrF,qBAAC,EAAE,SAAC,wFAAsF,CAAK,CAC5F;SAER,EACD,OAAO,EACL,qBAAC,CAAC,IAAC,IAAI,EAAC,8FAA8F,GAAC,WAAS,CACjH,EACD,KAAK,EAAG,IAAI,CAAC,IAAM,EACnB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAiB,EAChC,CACjB,CAAC;IACJ,CAAC;IAEH,qBAAC;AAAD,CApEA,AAoEC,CApEmC,KAAK,CAAC,SAAS,GAoElD;AApEY,sBAAc,iBAoE1B,CAAA","file":"demo/pages/DatePickerPage/DatePickerPage.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  PropertiesTableSet,\r\n  ComponentPage\r\n} from '../../components/index';\r\n\r\nimport { DatePickerBasicExample } from './examples/DatePicker.Basic.Example';\r\nimport { DatePickerRequiredExample } from './examples/DatePicker.Required.Example';\r\nimport { DatePickerInputExample } from './examples/DatePicker.Input.Example';\r\nimport { getPageRouteFromState } from '../../utilities/pageroute';\r\nimport { AppState } from '../../components/App/AppState';\r\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\r\n\r\nconst DatePickerBasicExampleCode = require('./examples/DatePicker.Basic.Example.tsx');\r\nconst DatePickerRequiredExampleCode = require('./examples/DatePicker.Required.Example.tsx');\r\nconst DatePickerInputExampleCode = require('./examples/DatePicker.Input.Example.tsx');\r\n\r\nexport class DatePickerPage extends React.Component<IComponentDemoPageProps, any> {\r\n  private _url: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'DatePicker');\r\n  }\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='DatePicker'\r\n        componentName='DatePickerExample'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='DatePicker' code={ DatePickerBasicExampleCode }>\r\n              <DatePickerBasicExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='DatePicker as required field' code={ DatePickerRequiredExampleCode }>\r\n              <DatePickerRequiredExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='DatePicker allows input date string' code={ DatePickerInputExampleCode }>\r\n              <DatePickerInputExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet componentName='DatePicker' />\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              The DatePicker component enables a user to pick a date value.\r\n            </p>\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div></div>\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Use the control as a single entity.</li>\r\n              <li>Set the default date to the current date unless a specific date is required for context (e.g. the date of the conference).</li>\r\n              <li>The control is designed to resize relative to available screen width. Allow it to render in either wide or narrow as appropriate.</li>\r\n              <li>When the control is engaged, the DatePicker renders as a flyout and has defined widths (300px -narrow and 440px â€“ wide). Plan your UI implementation accordingly.</li>\r\n              <li>The control renders date in a specific format. If allowing for manual entry of date, provide helper text in the appropriate format.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div>\r\n            <ul>\r\n              <li>Don't attempt to break apart year from month/day selectors. If granularity is required, use the Dropdown control or something similar.</li>\r\n              <li>Don't attempt to force resize the control in any way.</li>\r\n              <li>Don't force the control to render one mode vs. the other (year or month/day)</li>\r\n              <li>The flyout selector is a light dismiss control. Don't modify this behavior in any way.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        related={\r\n          <a href='https://github.com/OfficeDev/office-ui-fabric-js/blob/master/ghdocs/components/DatePicker.md'>Fabric JS</a>\r\n        }\r\n        route={ this._url }\r\n        isHeaderVisible={ this.props.isHeaderVisible }>\r\n      </ComponentPage>\r\n    );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}