{"version":3,"sources":["demo/pages/Facepile/FacepilePage.tsx"],"names":[],"mappings":"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","file":"demo/pages/Facepile/FacepilePage.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  PropertiesTableSet,\r\n  ComponentPage\r\n} from '../../components/index';\r\n\r\nimport { FacepileAddFaceExample } from './examples/Facepile.AddFace.Example';\r\nimport { FacepileBasicExample } from './examples/Facepile.Basic.Example';\r\nimport { FacepileOverflowExample } from './examples/Facepile.Overflow.Example';\r\nimport { getPageRouteFromState } from '../../utilities/pageroute';\r\nimport { AppState } from '../../components/App/AppState';\r\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\r\n\r\nconst FacepileAddFaceExampleCode = require('./examples/Facepile.AddFace.Example.tsx');\r\nconst FacepileBasicExampleCode = require('./examples/Facepile.Basic.Example.tsx');\r\nconst FacepileOverflowExampleCode = require('./examples/Facepile.Overflow.Example.tsx');\r\n\r\nexport class FacepilePage extends React.Component<IComponentDemoPageProps, any> {\r\n  private _url: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'Facepile');\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='Facepile'\r\n        componentName='FacepileExample'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='Facepile with Extras' code={ FacepileBasicExampleCode }>\r\n              <FacepileBasicExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='Facepile with Overflow' code={ FacepileOverflowExampleCode }>\r\n              <FacepileOverflowExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='Facepile with Add Face' code={ FacepileAddFaceExampleCode }>\r\n              <FacepileAddFaceExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet componentName='Facepile' />\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              The Facepile shows a list of faces or initials in a horizontal lockup. Each circle represents a person. Many times this component is used when sharing who has access to a specific view or file or when assigning a user to a task within a workflow.\r\n            </p>\r\n\r\n            <h2 className='ms-font-xl'>Adding people</h2>\r\n            <p>\r\n              The component can include an add button which can be used for quickly adding a person to the list.\r\n            </p>\r\n\r\n            <h2 className='ms-font-xl'>Empty state</h2>\r\n            <p>\r\n              The empty state of the Facepile should include only an add button. Another variant is to use an input field with placeholder text instructing the user to add a person. See the PeoplePicker component for the menu used to add people to the Facepile list.\r\n            </p>\r\n\r\n            <h2 className='ms-font-xl'>One person</h2>\r\n            <p>\r\n              When there is only one person in the Facepile, consider using their name next to the face or initials.\r\n            </p>\r\n\r\n            <h2 className='ms-font-xl'>Expanding the list when there is no overflow</h2>\r\n\r\n            <p>\r\n              When there is a need to show the Facepile expanded into a vertical list, include a downward chevron button. Clicking or tapping on the chevron would open a standard list view of personas.\r\n            </p>\r\n\r\n            <h2 className='ms-font-xl'>Overflow</h2>\r\n\r\n            <p>\r\n              When the Facepile exceeds a max number of 5 people, show a button at the end of the list indicating how many are not being shown. Clicking or tapping on the overflow would open a standard list view of personas.\r\n            </p>\r\n\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div></div>\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Use if looking for a way to represent who has access to an area and need to show that as a people representation.</li>\r\n              <li>Only show the Add button if a user has access to do so.</li>\r\n              <li>Allow a way for the user to understand who the person is. Many common ways to do this are with a tooltip or adding the ability to open up a PeopleCard Experience.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div>\r\n            <ul>\r\n              <li>Use for things other than people.</li>\r\n              <li>Overwhelm users by listing every single person as a circle but truncate and provide a way to see the full list.</li>\r\n              <li>Donâ€™t use this control for experiences where you need to manage details of hundreds of users, you are better off using a list control.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        related={\r\n          <a href='https://github.com/OfficeDev/office-ui-fabric-js/blob/master/ghdocs/components/FacePile.md'>Fabric JS</a>\r\n        }\r\n        route={ this._url }\r\n        isHeaderVisible={ this.props.isHeaderVisible }>\r\n      </ComponentPage>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}