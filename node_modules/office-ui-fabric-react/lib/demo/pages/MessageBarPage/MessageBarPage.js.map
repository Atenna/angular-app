{"version":3,"sources":["demo/pages/MessageBarPage/MessageBarPage.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sBAIO,wBAAwB,CAAC,CAAA;AAEhC,yCAAuC,qCAAqC,CAAC,CAAA;AAC7E,0BAAsC,2BAA2B,CAAC,CAAA;AAClE,yBAAyB,+BAA+B,CAAC,CAAA;AAGzD,IAAM,0BAA0B,GAAG,OAAO,CAAC,yCAAyC,CAAC,CAAC;AAEtF;IAAoC,kCAA6C;IAG/E;QACE,iBAAO,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,YAAY,CAAC,CAAC;IAChF,CAAC;IAEM,+BAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,qBAAa,GACZ,KAAK,EAAC,YAAY,EAClB,aAAa,EAAC,mBAAmB,EACjC,YAAY,EACV,oBAAC,mBAAW,GACV,KAAK,EAAC,0BAA0B,EAChC,IAAI,EAAG,0BAA4B;YACnC,oBAAC,iDAAsB,OAAG;SAE7B,EACD,gBAAgB,EACd,qBAAC,GAAG;YACF,oBAAC,0BAAkB,GAAC,aAAa,EAAC,YAAY,EAAG;YAAA,GACjD;YAAA,qBAAC,CAAC;gBAAC,oCAAkC;gBAAA,qBAAC,IAAI,SAAC,YAAU,CAAO;gBAAC,mDAAgD;gBAAA,qBAAC,IAAI,SAAC,YAAU,CAAO;gBAAC,OAAI;gBAAA,qBAAC,IAAI,SAAC,GAAC,CAAO;gBAAC,qBAAkB,CAAI,CAEjL,EACD,QAAQ,EACN,qBAAC,GAAG;YACF,qBAAC,CAAC,SACA,oQACF,CAAI;SAEP,EACD,aAAa,EACX,qBAAC,GAAG,QACL,EACD,GAAG,EACD,qBAAC,GAAG;YACF,qBAAC,EAAE;gBACD,qBAAC,EAAE,SAAC,wGAAsG,CAAK;gBAC/G,qBAAC,EAAE,SAAC,kGAAgG,CAAK;gBACzG,qBAAC,EAAE,SAAC,0IAAwI,CAAK;gBACjJ,qBAAC,EAAE,SAAC,yFAAuF,CAAK,CAC7F;SAER,EACD,KAAK,EACH,qBAAC,GAAG;YACF,qBAAC,EAAE;gBACD,qBAAC,EAAE,SAAC,iNAA+M,CAAK;gBACxN,qBAAC,EAAE,SAAC,gPACJ,CAAK,CACF;SAER,EACD,OAAO,EACL,qBAAC,CAAC,IAAC,IAAI,EAAC,8FAA8F,GAAC,WAAS,CACjH,EACD,KAAK,EAAG,IAAI,CAAC,IAAM,EACnB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAiB,EAChC,CACjB,CAAC;IACJ,CAAC;IAEH,qBAAC;AAAD,CAhEA,AAgEC,CAhEmC,KAAK,CAAC,SAAS,GAgElD;AAhEY,sBAAc,iBAgE1B,CAAA","file":"demo/pages/MessageBarPage/MessageBarPage.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  PropertiesTableSet,\r\n  ComponentPage\r\n} from '../../components/index';\r\n\r\nimport { MessageBarBasicExample } from './examples/MessageBar.Basic.Example';\r\nimport { getPageRouteFromState } from '../../utilities/pageroute';\r\nimport { AppState } from '../../components/App/AppState';\r\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\r\n\r\nconst MessageBarBasicExampleCode = require('./examples/MessageBar.Basic.Example.tsx');\r\n\r\nexport class MessageBarPage extends React.Component<IComponentDemoPageProps, any> {\r\n  private _url: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'MessageBar');\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='MessageBar'\r\n        componentName='MessageBarExample'\r\n        exampleCards={\r\n          <ExampleCard\r\n            title='Various MessageBar types'\r\n            code={ MessageBarBasicExampleCode }>\r\n            <MessageBarBasicExample />\r\n          </ExampleCard>\r\n        }\r\n        propertiesTables={\r\n          <div>\r\n            <PropertiesTableSet componentName='MessageBar' />,\r\n            <p>Besides the above properties, the <code>MessageBar</code> component accepts all properties that the React <code>MessageBar</code> and <code>a</code> components accept.</p>\r\n          </div>\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              A MessageBar is an area at the top of a primary view that displays relevant status information. You can use a MessageBar to tell the user about a situation that does not require their immediate attention and therefore does not need to block other activities.\r\n            </p>\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div></div>\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Place the message bar near the top of the relevant view, in a highly visible but unobtrusive location.</li>\r\n              <li>Keep the text very brief. Be succinct and your users are more likely to read everything you say.</li>\r\n              <li>Consider how localization may affect the message. Translation to other languages may add up to 33% more characters to the string length.</li>\r\n              <li>Use the right variant for the type and urgency of the particular message (see variants)</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div>\r\n            <ul>\r\n              <li>Don’t use paragraphs, long sentences, or special formatting in a MessageBar. The control tries to grow to accommodate all the text and will just result in pushing the user’s main content too low on the view.</li>\r\n              <li>Don’t use buttons when a subtler link will suffice. Reserve the usage of button for when the MessageBar has a single ”hero” action that has vital usefulness to the user at that particular moment. Using more than one button is discouraged.\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        related={\r\n          <a href='https://github.com/OfficeDev/office-ui-fabric-js/blob/master/ghdocs/components/MessageBar.md'>Fabric JS</a>\r\n        }\r\n        route={ this._url }\r\n        isHeaderVisible={ this.props.isHeaderVisible }>\r\n      </ComponentPage>\r\n    );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}