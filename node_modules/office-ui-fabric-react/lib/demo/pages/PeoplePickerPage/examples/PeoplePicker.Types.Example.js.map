{"version":3,"sources":["demo/pages/PeoplePickerPage/examples/PeoplePicker.Types.Example.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,oBAAoB;AACpB,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,mBAAmB;AACnB,sBAYO,mBAAmB,CAAC,CAAA;AAE3B,wCAAuB,2BAA2B,CAAC,CAAA;AACnD,uBAAuB,8BAA8B,CAAC,CAAA;AACtD,QAAO,mCAAmC,CAAC,CAAA;AAO3C,IAAM,eAAe,GAAgC;IACnD,qBAAqB,EAAE,kBAAkB;IACzC,kBAAkB,EAAE,kBAAkB;IACtC,WAAW,EAAE,SAAS;CACvB,CAAC;AAEF;IAA8C,4CAA6C;IAgCzF;QAhCF,iBAsNC;QArLG,iBAAO,CAAC;QA/BF,wBAAmB,GAA0B;YACnD;gBACE,GAAG,EAAE,SAAS;gBACd,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,KAAK;aACZ;YACD;gBACE,GAAG,EAAE,QAAQ;gBACb,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,QAAQ;aACf;YACD;gBACE,GAAG,EAAE,WAAW;gBAChB,IAAI,EAAE,GAAG;aACV;YACD;gBACE,GAAG,EAAE,QAAQ;gBACb,IAAI,EAAE,QAAQ;aACf;YACD;gBACE,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,YAAY;aACnB;YACD;gBACE,GAAG,EAAE,UAAU;gBACf,IAAI,EAAE,eAAe;gBACrB,QAAQ,EAAE,IAAI;aACf;SACF,CAAC;QAIA,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,gCAAM,CAAC,OAAO,CAAC,UAAC,OAAsB;YACpC,IAAI,MAAM,GAAqB,EAAE,CAAC;YAElC,eAAM,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,SAAS,EAAE,KAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;YACjE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG;YACX,aAAa,EAAE,CAAC;YAChB,YAAY,EAAE,KAAK;SACpB,CAAC;IACJ,CAAC;IAEM,yCAAM,GAAb;QACE,IAAI,aAA0B,CAAC;QAE/B,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;YACjC,KAAK,CAAC;gBACJ,aAAa,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3C,KAAK,CAAC;YACR,KAAK,CAAC;gBACJ,aAAa,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5C,KAAK,CAAC;YACR,KAAK,CAAC;gBACJ,aAAa,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzC,KAAK,CAAC;YACR,KAAK,CAAC;gBACJ,aAAa,GAAG,IAAI,CAAC,6BAA6B,EAAE,CAAC;gBACrD,KAAK,CAAC;YACR,KAAK,CAAC;gBACJ,aAAa,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5C,KAAK,CAAC;QACV,CAAC;QAED,MAAM,CAAC,CACL,qBAAC,GAAG;YACA,aAAe;YACjB,qBAAC,GAAG,IAAC,SAAS,EAAE,cAAe;gBAC7B,oBAAC,gBAAQ,GAAC,KAAK,EAAC,2BAA2B,EACzC,OAAO,EAAE;oBACP,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;oBAC1B,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE;oBAC3B,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE;oBAChC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE;oBACrC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE;iBAChC,EACF,WAAW,EAAG,IAAI,CAAC,KAAK,CAAC,aAAe,EACxC,SAAS,EAAG,IAAI,CAAC,iBAAmB,EAClC;gBACJ,oBAAC,cAAM,GACL,KAAK,EAAC,0BAA0B,EAChC,cAAc,EAAG,KAAO,EACxB,SAAS,EAAG,IAAI,CAAC,aAAe,EAAE,CAChC,CACF,CACP,CAAC;IACJ,CAAC;IAEM,oDAAiB,GAAxB;QACE,MAAM,CAAC,CACL,oBAAC,wBAAgB,GACf,oBAAoB,EAAG,IAAI,CAAC,gBAAkB,EAC9C,eAAe,EAAG,UAAC,OAAsB,IAAK,OAAA,OAAO,CAAC,WAAW,EAAnB,CAAqB,EACnE,SAAS,EAAG,iBAAmB,EAC/B,sBAAsB,EAAG,eAAiB,EAC1C,GAAG,EAAE,MAAO,EACV,CACL,CAAC;IACJ,CAAC;IAEM,sDAAmB,GAA1B;QACE,MAAM,CAAC,CACL,oBAAC,0BAAkB,GACjB,oBAAoB,EAAG,IAAI,CAAC,gBAAkB,EAC9C,eAAe,EAAG,UAAC,OAAsB,IAAK,OAAA,OAAO,CAAC,WAAW,EAAnB,CAAqB,EACnE,sBAAsB,EAAG,eAAiB,EAC1C,SAAS,EAAG,iBAAmB,EAC/B,GAAG,EAAG,QAAU,EACd,CACL,CAAC;IACJ,CAAC;IAEM,uDAAoB,GAA3B;QACE,MAAM,CAAC,CACL,oBAAC,2BAAmB,GAClB,oBAAoB,EAAG,IAAI,CAAC,gBAAkB,EAC9C,eAAe,EAAG,UAAC,OAAsB,IAAK,OAAA,OAAO,CAAC,WAAW,EAAnB,CAAqB,EACnE,sBAAsB,EAAG,eAAiB,EAC1C,SAAS,EAAG,iBAAmB,EAC7B,CACL,CAAC;IACJ,CAAC;IAEM,gEAA6B,GAApC;QACE,MAAM,CAAC,CACL,oBAAC,2BAAmB,GAClB,oBAAoB,EAAG,IAAI,CAAC,gBAAkB,EAC9C,eAAe,EAAG,UAAC,OAAsB,IAAK,OAAA,OAAO,CAAC,WAAW,EAAnB,CAAqB,EACnE,SAAS,EAAG,iBAAmB,EAC/B,oBAAoB,EAAG,gCAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAG,EAC5C,GAAG,EAAG,MAAQ,EACd,sBAAsB,EAAG,eAAiB,EACxC,CACL,CAAC;IACJ,CAAC;IAEM,uDAAoB,GAA3B;QACE,IAAI,4BAA4B,GAAG,eAAe,CAAC;QACnD,4BAA4B,CAAC,iBAAiB,GAAG,kBAAkB,CAAC;QACpE,MAAM,CAAC,CACL,oBAAC,2BAAmB,GAClB,oBAAoB,EAAG,IAAI,CAAC,yBAA2B,EACvD,eAAe,EAAG,UAAC,OAAsB,IAAK,OAAA,OAAO,CAAC,WAAW,EAAnB,CAAqB,EACnE,SAAS,EAAG,iBAAmB,EAC/B,gBAAgB,EAAG,IAAI,CAAC,gBAAkB,EAC1C,sBAAsB,EAAG,4BAA8B,EACrD,CACL,CAAC;IACJ,CAAC;IAGO,mDAAgB,GAAxB,UAAyB,UAAkB,EAAE,eAAgC,EAAE,YAAqB;QAClG,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACf,IAAI,gBAAgB,GAAoB,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;YAE/E,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;YAC7E,gBAAgB,GAAG,YAAY,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,gBAAgB,CAAC;YAC9F,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QAC/C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAGO,4DAAyB,GAAjC,UAAkC,UAAkB,EAAE,eAAgC;QACpF,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC;IAEO,iDAAc,GAAtB,UAAuB,gBAAiC;QACtD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,CAAC;QACzD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,gBAAgB,CAAC;QAC1B,CAAC;IACH,CAAC;IAEO,uDAAoB,GAA5B,UAA6B,OAAsB,EAAE,QAAyB;QAC5E,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,WAAW,KAAK,OAAO,CAAC,WAAW,EAAxC,CAAwC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IACtF,CAAC;IAEO,wDAAqB,GAA7B,UAA8B,UAAkB;QAAhD,iBAEC;QADC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,EAArD,CAAqD,CAAC,CAAC;IAChG,CAAC;IAEO,qDAAkB,GAA1B,UAA2B,IAAY,EAAE,UAAkB;QACzD,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC;IACpE,CAAC;IAEO,2DAAwB,GAAhC,UAAiC,OAAwB;QACvD,MAAM,CAAC,IAAI,OAAO,CAAkB,UAAC,OAAO,EAAE,MAAM,IAAK,OAAA,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,CAAC,EAAhB,CAAgB,EAAE,IAAI,CAAC,EAAxC,CAAwC,CAAC,CAAC;IACrG,CAAC;IAEO,oDAAiB,GAAzB,UAA0B,QAAyB,EAAE,aAA8B;QAAnF,iBAEC;QADC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAA,OAAO,IAAI,OAAA,CAAC,KAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,aAAa,CAAC,EAAlD,CAAkD,CAAC,CAAC;IACxF,CAAC;IAGO,gDAAa,GAArB,UAAsB,WAAoB;QACxC,IAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,EAAE,WAAW,EAAE,CAAC,CAAC;IAC/C,CAAC;IAGO,oDAAiB,GAAzB,UAA0B,MAAuB;QAC/C,IAAI,CAAC,QAAQ,CAAC,EAAE,aAAa,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;IAC/C,CAAC;IAzDD;QAAC,gBAAQ;oEAAA;IAaT;QAAC,gBAAQ;6EAAA;IAoCT;QAAC,gBAAQ;iEAAA;IAKT;QAAC,gBAAQ;qEAAA;IAKX,+BAAC;AAAD,CAtNA,AAsNC,CAtN6C,qBAAa,GAsN1D;AAtNY,gCAAwB,2BAsNpC,CAAA","file":"demo/pages/PeoplePickerPage/examples/PeoplePicker.Types.Example.js","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport {\r\n  ListPeoplePicker,\r\n  NormalPeoplePicker,\r\n  CompactPeoplePicker,\r\n  IContextualMenuItem,\r\n  Dropdown,\r\n  IDropdownOption,\r\n  IPersonaProps,\r\n  IBasePickerSuggestionsProps,\r\n  BaseComponent,\r\n  autobind,\r\n  Toggle\r\n} from '../../../../index';\r\nimport { IPersonaWithMenu } from '../../../../components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItem.Props';\r\nimport { people } from './PeoplePickerExampleData';\r\nimport { assign } from '../../../../utilities/object';\r\nimport './PeoplePicker.Types.Example.scss';\r\n\r\nexport interface IPeoplePickerExampleState {\r\n  currentPicker?: number | string;\r\n  delayResults?: boolean;\r\n}\r\n\r\nconst suggestionProps: IBasePickerSuggestionsProps = {\r\n  suggestionsHeaderText: 'Suggested People',\r\n  noResultsFoundText: 'No results found',\r\n  loadingText: 'Loading'\r\n};\r\n\r\nexport class PeoplePickerTypesExample extends BaseComponent<any, IPeoplePickerExampleState> {\r\n  private _peopleList;\r\n  private contextualMenuItems: IContextualMenuItem[] = [\r\n    {\r\n      key: 'newItem',\r\n      icon: 'circlePlus',\r\n      name: 'New'\r\n    },\r\n    {\r\n      key: 'upload',\r\n      icon: 'upload',\r\n      name: 'Upload'\r\n    },\r\n    {\r\n      key: 'divider_1',\r\n      name: '-',\r\n    },\r\n    {\r\n      key: 'rename',\r\n      name: 'Rename'\r\n    },\r\n    {\r\n      key: 'properties',\r\n      name: 'Properties'\r\n    },\r\n    {\r\n      key: 'disabled',\r\n      name: 'Disabled item',\r\n      disabled: true\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n    this._peopleList = [];\r\n    people.forEach((persona: IPersonaProps) => {\r\n      let target: IPersonaWithMenu = {};\r\n\r\n      assign(target, persona, { menuItems: this.contextualMenuItems });\r\n      this._peopleList.push(target);\r\n    });\r\n\r\n    this.state = {\r\n      currentPicker: 1,\r\n      delayResults: false\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let currentPicker: JSX.Element;\r\n\r\n    switch (this.state.currentPicker) {\r\n      case 1:\r\n        currentPicker = this._renderNormalPicker();\r\n        break;\r\n      case 2:\r\n        currentPicker = this._renderCompactPicker();\r\n        break;\r\n      case 3:\r\n        currentPicker = this._renderListPicker();\r\n        break;\r\n      case 4:\r\n        currentPicker = this._renderPreselectedItemsPicker();\r\n        break;\r\n      case 5:\r\n        currentPicker = this._renderLimitedSearch();\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        { currentPicker }\r\n        <div className={'dropdown-div'}>\r\n          <Dropdown label='Select People Picker Type'\r\n            options={[\r\n              { key: 1, text: 'Normal' },\r\n              { key: 2, text: 'Compact' },\r\n              { key: 3, text: 'Members List' },\r\n              { key: 4, text: 'Preselected Items' },\r\n              { key: 5, text: 'Limit Search' }\r\n            ]}\r\n            selectedKey={ this.state.currentPicker }\r\n            onChanged={ this._dropDownSelected }\r\n            />\r\n          <Toggle\r\n            label='Delay Suggestion Results'\r\n            defaultChecked={ false }\r\n            onChanged={ this._toggleChange }/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public _renderListPicker() {\r\n    return (\r\n      <ListPeoplePicker\r\n        onResolveSuggestions={ this._onFilterChanged }\r\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText }\r\n        className={ 'ms-PeoplePicker' }\r\n        pickerSuggestionsProps={ suggestionProps }\r\n        key={'list'}\r\n        />\r\n    );\r\n  }\r\n\r\n  public _renderNormalPicker() {\r\n    return (\r\n      <NormalPeoplePicker\r\n        onResolveSuggestions={ this._onFilterChanged }\r\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText }\r\n        pickerSuggestionsProps={ suggestionProps }\r\n        className={ 'ms-PeoplePicker' }\r\n        key={ 'normal' }\r\n        />\r\n    );\r\n  }\r\n\r\n  public _renderCompactPicker() {\r\n    return (\r\n      <CompactPeoplePicker\r\n        onResolveSuggestions={ this._onFilterChanged }\r\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText }\r\n        pickerSuggestionsProps={ suggestionProps }\r\n        className={ 'ms-PeoplePicker' }\r\n        />\r\n    );\r\n  }\r\n\r\n  public _renderPreselectedItemsPicker() {\r\n    return (\r\n      <CompactPeoplePicker\r\n        onResolveSuggestions={ this._onFilterChanged }\r\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText }\r\n        className={ 'ms-PeoplePicker' }\r\n        defaultSelectedItems={ people.splice(0, 3) }\r\n        key={ 'list' }\r\n        pickerSuggestionsProps={ suggestionProps }\r\n        />\r\n    );\r\n  }\r\n\r\n  public _renderLimitedSearch() {\r\n    let limitedSearchSuggestionProps = suggestionProps;\r\n    limitedSearchSuggestionProps.searchForMoreText = 'Load all Results';\r\n    return (\r\n      <CompactPeoplePicker\r\n        onResolveSuggestions={ this._onFilterChangedWithLimit }\r\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText }\r\n        className={ 'ms-PeoplePicker' }\r\n        onGetMoreResults={ this._onFilterChanged }\r\n        pickerSuggestionsProps={ limitedSearchSuggestionProps }\r\n        />\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onFilterChanged(filterText: string, currentPersonas: IPersonaProps[], limitResults?: number) {\r\n    if (filterText) {\r\n      let filteredPersonas: IPersonaProps[] = this._filterPersonasByText(filterText);\r\n\r\n      filteredPersonas = this._removeDuplicates(filteredPersonas, currentPersonas);\r\n      filteredPersonas = limitResults ? filteredPersonas.splice(0, limitResults) : filteredPersonas;\r\n      return this._filterPromise(filteredPersonas);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onFilterChangedWithLimit(filterText: string, currentPersonas: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> {\r\n    return this._onFilterChanged(filterText, currentPersonas, 3);\r\n  }\r\n\r\n  private _filterPromise(personasToReturn: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> {\r\n    if (this.state.delayResults) {\r\n      return this._convertResultsToPromise(personasToReturn);\r\n    } else {\r\n      return personasToReturn;\r\n    }\r\n  }\r\n\r\n  private _listContainsPersona(persona: IPersonaProps, personas: IPersonaProps[]) {\r\n    if (!personas || !personas.length || personas.length === 0) {\r\n      return false;\r\n    }\r\n    return personas.filter(item => item.primaryText === persona.primaryText).length > 0;\r\n  }\r\n\r\n  private _filterPersonasByText(filterText: string): IPersonaProps[] {\r\n    return this._peopleList.filter(item => this._doesTextStartWith(item.primaryText, filterText));\r\n  }\r\n\r\n  private _doesTextStartWith(text: string, filterText: string): boolean {\r\n    return text.toLowerCase().indexOf(filterText.toLowerCase()) === 0;\r\n  }\r\n\r\n  private _convertResultsToPromise(results: IPersonaProps[]): Promise<IPersonaProps[]> {\r\n    return new Promise<IPersonaProps[]>((resolve, reject) => setTimeout(() => resolve(results), 2000));\r\n  }\r\n\r\n  private _removeDuplicates(personas: IPersonaProps[], possibleDupes: IPersonaProps[]) {\r\n    return personas.filter(persona => !this._listContainsPersona(persona, possibleDupes));\r\n  }\r\n\r\n  @autobind\r\n  private _toggleChange(toggleState: boolean) {\r\n    this.setState({ delayResults: toggleState });\r\n  }\r\n\r\n  @autobind\r\n  private _dropDownSelected(option: IDropdownOption) {\r\n    this.setState({ currentPicker: option.key });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}