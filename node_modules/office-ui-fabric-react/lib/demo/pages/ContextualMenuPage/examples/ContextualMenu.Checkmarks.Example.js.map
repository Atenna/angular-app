{"version":3,"sources":["demo/pages/ContextualMenuPage/examples/ContextualMenu.Checkmarks.Example.tsx"],"names":[],"mappings":"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","file":"demo/pages/ContextualMenuPage/examples/ContextualMenu.Checkmarks.Example.js","sourcesContent":["import * as React from 'react';\r\nimport { ContextualMenu, IContextualMenuItem, DirectionalHint, Button } from '../../../../index';\r\nimport './ContextualMenuExample.scss';\r\n\r\nexport interface IContextualMenuMultiselectExampleState {\r\n  selection?: { [key: string]: boolean };\r\n  isContextMenuVisible?: boolean;\r\n}\r\n\r\nlet keys: string[] = ['newItem', 'share', 'mobile', 'enablePrint', 'enableMusic', 'newSub', 'emailMessage', 'calendarEvent'];\r\n\r\nexport class ContextualMenuCheckmarksExample extends React.Component<any, IContextualMenuMultiselectExampleState> {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this._onToggleSelect = this._onToggleSelect.bind(this);\r\n    this._onClick = this._onClick.bind(this);\r\n    this._onDismiss = this._onDismiss.bind(this);\r\n\r\n    this.state = {\r\n      selection: {},\r\n      isContextMenuVisible: false\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { selection } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Button onClick={ this._onClick } id='ContextualMenuButton2'> Click for ContextualMenu </Button>\r\n        { this.state.isContextMenuVisible ? (\r\n          <ContextualMenu\r\n            target='#ContextualMenuButton2'\r\n            shouldFocusOnMount={ false }\r\n            onDismiss={ this._onDismiss }\r\n            directionalHint={ DirectionalHint.bottomLeftEdge }\r\n            items={\r\n              [\r\n                {\r\n                  key: keys[0],\r\n                  name: 'New',\r\n                  canCheck: true,\r\n                  isChecked: selection[keys[0]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: keys[1],\r\n                  name: 'Share',\r\n                  canCheck: true,\r\n                  isChecked: selection[keys[1]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: keys[2],\r\n                  name: 'Mobile',\r\n                  canCheck: true,\r\n                  isChecked: selection[keys[2]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: 'divider_1',\r\n                  name: '-',\r\n                },\r\n\r\n                {\r\n                  key: keys[3],\r\n                  name: 'Print',\r\n                  canCheck: true,\r\n                  isChecked: selection[keys[3]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: keys[4],\r\n                  name: 'Music',\r\n                  canCheck: true,\r\n                  isChecked: selection[keys[4]],\r\n                  onClick: this._onToggleSelect\r\n                },\r\n                {\r\n                  key: keys[5],\r\n                  subMenuProps: {\r\n                    items: [\r\n                      {\r\n                        key: keys[6],\r\n                        name: 'Email message',\r\n                        canCheck: true,\r\n                        isChecked: selection[keys[6]],\r\n                        onClick: this._onToggleSelect\r\n                      },\r\n                      {\r\n                        key: keys[7],\r\n                        name: 'Calendar event',\r\n                        canCheck: true,\r\n                        isChecked: selection[keys[7]],\r\n                        onClick: this._onToggleSelect\r\n                      }\r\n                    ],\r\n                  },\r\n                  name: 'New'\r\n                },\r\n              ]\r\n            }\r\n            />) : (null) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onToggleSelect(ev?: React.MouseEvent<HTMLButtonElement>, item?: IContextualMenuItem) {\r\n    let { selection } = this.state;\r\n\r\n    selection[item.key] = !selection[item.key];\r\n\r\n    this.setState({\r\n      selection: selection\r\n    });\r\n  }\r\n\r\n  private _onClick(event: React.MouseEvent<HTMLButtonElement>) {\r\n    this.setState({ isContextMenuVisible: true });\r\n  }\r\n\r\n  private _onDismiss() {\r\n    this.setState({ isContextMenuVisible: false });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}