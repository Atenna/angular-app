{"version":3,"sources":["demo/pages/SelectionPage/examples/Selection.Basic.Example.tsx"],"names":[],"mappings":"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","file":"demo/pages/SelectionPage/examples/Selection.Basic.Example.js","sourcesContent":["import * as React from 'react';\r\nimport { CommandBar, IContextualMenuItem, MarqueeSelection } from '../../../../index';\r\nimport { Check } from '../../../../components/Check/Check';\r\nimport {\r\n  IObjectWithKey,\r\n  ISelection,\r\n  Selection,\r\n  SelectionMode,\r\n  SelectionZone\r\n} from '../../../../utilities/selection/index';\r\nimport { createListItems } from '../../../utilities/data';\r\n\r\nimport './Selection.Example.scss';\r\n\r\nconst ITEM_COUNT = 100;\r\n\r\nexport interface ISelectionBasicExampleState {\r\n  items?: any[];\r\n  selection?: ISelection;\r\n  selectionMode?: SelectionMode;\r\n  canSelect?: string;\r\n}\r\n\r\nexport interface ISelectionItemExampleProps {\r\n  item?: any;\r\n  itemIndex?: number;\r\n  selection?: ISelection;\r\n  selectionMode?: SelectionMode;\r\n}\r\n\r\n/**\r\n * The SelectionBasicExample controls the selection state of all items\r\n */\r\nexport class SelectionBasicExample extends React.Component<any, ISelectionBasicExampleState> {\r\n  private _hasMounted: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this._hasMounted = false;\r\n    this._onSelectionChanged = this._onSelectionChanged.bind(this);\r\n    this._onSelectionModeChanged = this._onSelectionModeChanged.bind(this);\r\n    this._onToggleSelectAll = this._onToggleSelectAll.bind(this);\r\n    this._onCanSelectChanged = this._onCanSelectChanged.bind(this);\r\n    this._canSelectItem = this._canSelectItem.bind(this);\r\n\r\n    this.state = {\r\n      items: createListItems(ITEM_COUNT),\r\n      selection: new Selection({ onSelectionChanged: this._onSelectionChanged }),\r\n      selectionMode: SelectionMode.multiple,\r\n      canSelect: 'all'\r\n    };\r\n    this.state.selection.setItems(this.state.items as IObjectWithKey[], false);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this._hasMounted = true;\r\n  }\r\n\r\n  public render() {\r\n    let { items, selection, selectionMode } = this.state;\r\n\r\n    return (\r\n      <div className='ms-SelectionBasicExample'>\r\n        <CommandBar items={ this._getCommandItems() } />\r\n        <MarqueeSelection selection={ selection } isEnabled={ selectionMode === SelectionMode.multiple } >\r\n          <SelectionZone\r\n            selection={ selection }\r\n            selectionMode={ selectionMode }\r\n            onItemInvoked={ (item) => alert('item invoked: ' + item.name) }>\r\n            { items.map((item, index) => (\r\n              <SelectionItemExample\r\n                ref={ 'detailsGroup_' + index }\r\n                key={ item.key }\r\n                item={ item }\r\n                itemIndex={ index }\r\n                selectionMode={ selectionMode }\r\n                selection={ selection }\r\n                />\r\n            )) }\r\n          </SelectionZone>\r\n        </MarqueeSelection>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onSelectionChanged() {\r\n    if (this._hasMounted) {\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  private _onToggleSelectAll() {\r\n    let { selection } = this.state;\r\n    selection.toggleAllSelected();\r\n  }\r\n\r\n  private _onSelectionModeChanged(ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) {\r\n    this.setState({\r\n      selectionMode: menuItem.data\r\n    });\r\n  }\r\n\r\n  private _onCanSelectChanged(ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) {\r\n    let canSelectItem = (menuItem.data === 'vowels') ? this._canSelectItem : undefined;\r\n    let newSelection = new Selection({ onSelectionChanged: this._onSelectionChanged, canSelectItem: canSelectItem });\r\n    newSelection.setItems(this.state.items as IObjectWithKey[], false);\r\n    this.setState({\r\n      selection: newSelection,\r\n      canSelect: (menuItem.data === 'vowels') ? 'vowels' : 'all'\r\n    });\r\n  }\r\n\r\n  private _canSelectItem(item: any): boolean {\r\n    return item.name && (item.name.indexOf('a') === 0 || item.name.indexOf('e') === 0 || item.name.indexOf('i') === 0 || item.name.indexOf('o') === 0 || item.name.indexOf('u') === 0);\r\n  }\r\n\r\n  private _getCommandItems(): IContextualMenuItem[] {\r\n    let { selectionMode, canSelect } = this.state;\r\n\r\n    return [\r\n      {\r\n        key: 'selectionMode',\r\n        name: 'Selection Mode',\r\n        items: [\r\n          {\r\n            key: SelectionMode[SelectionMode.none],\r\n            name: 'None',\r\n            canCheck: true,\r\n            checked: selectionMode === SelectionMode.none,\r\n            onClick: this._onSelectionModeChanged,\r\n            data: SelectionMode.none\r\n\r\n          },\r\n          {\r\n            key: SelectionMode[SelectionMode.single],\r\n            name: 'Single select',\r\n            canCheck: true,\r\n            checked: selectionMode === SelectionMode.single,\r\n            onClick: this._onSelectionModeChanged,\r\n            data: SelectionMode.single\r\n          },\r\n          {\r\n            key: SelectionMode[SelectionMode.multiple],\r\n            name: 'Multi select',\r\n            canCheck: true,\r\n            checked: selectionMode === SelectionMode.multiple,\r\n            onClick: this._onSelectionModeChanged,\r\n            data: SelectionMode.multiple\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        key: 'selectAll',\r\n        name: 'Select All',\r\n        icon: 'check',\r\n        onClick: this._onToggleSelectAll\r\n      },\r\n      {\r\n        key: 'allowCanSelect',\r\n        name: 'Choose selectable items',\r\n        items: [\r\n          {\r\n            key: 'all',\r\n            name: 'All items',\r\n            canCheck: true,\r\n            checked: canSelect === 'all',\r\n            onClick: this._onCanSelectChanged,\r\n            data: 'all'\r\n          },\r\n          {\r\n            key: 'a',\r\n            name: 'Names starting with vowels',\r\n            canCheck: true,\r\n            checked: canSelect === 'vowels',\r\n            onClick: this._onCanSelectChanged,\r\n            data: 'vowels'\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * The SelectionItemExample controls and displays the selection state of a single item\r\n */\r\nexport class SelectionItemExample extends React.Component<ISelectionItemExampleProps, {}> {\r\n  public render() {\r\n    let { item, itemIndex, selection, selectionMode } = this.props;\r\n    let isSelected = selection.isIndexSelected(itemIndex);\r\n\r\n    return (\r\n      <div className='ms-SelectionItemExample'  data-selection-index={ itemIndex }>\r\n        { (selectionMode !== SelectionMode.none) && (\r\n          <div className='ms-SelectionItemExample-check' data-selection-toggle={ true } >\r\n            <Check checked={ isSelected } />\r\n          </div>\r\n        ) }\r\n        <span className='ms-SelectionItemExample-name'>\r\n          { item.name }\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}