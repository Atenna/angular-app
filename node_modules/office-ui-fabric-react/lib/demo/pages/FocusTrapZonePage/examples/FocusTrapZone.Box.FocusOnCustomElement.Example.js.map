{"version":3,"sources":["demo/pages/FocusTrapZonePage/examples/FocusTrapZone.Box.FocusOnCustomElement.Example.tsx"],"names":[],"mappings":"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","file":"demo/pages/FocusTrapZonePage/examples/FocusTrapZone.Box.FocusOnCustomElement.Example.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\n\r\nimport * as ReactDOM from 'react-dom';\r\nimport { FocusTrapZone } from '../../../../index';\r\nimport './FocusTrapZone.Box.Example.scss';\r\nimport {\r\n  Button,\r\n  Link,\r\n  TextField,\r\n  Toggle\r\n} from '../../../../index';\r\n\r\nexport interface IBoxExampleExampleState {\r\n  isChecked: boolean;\r\n}\r\n\r\nexport default class BoxExample extends React.Component<React.HTMLProps<HTMLDivElement>, IBoxExampleExampleState> {\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    toggle: HTMLElement;\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isChecked: false,\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { isChecked } = this.state;\r\n    const className: string = 'shouldFocus input';\r\n\r\n    return (\r\n      <div>\r\n        <Button description='Focuses inside the FocusTrapZone' onClick={ this._onButtonClickHandler.bind(this) }>Go to Trap Zone</Button>\r\n\r\n        {(() => {\r\n          if (isChecked) {\r\n            return (\r\n              <FocusTrapZone firstFocusableSelector={ className }>\r\n                { this._internalContents() }\r\n              </FocusTrapZone>\r\n              );\r\n          } else {\r\n            return (\r\n              <div>\r\n                { this._internalContents() }\r\n              </div>\r\n            );\r\n          }\r\n        })()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _internalContents() {\r\n    let { isChecked } = this.state;\r\n\r\n    return (\r\n      <div className='ms-FocusTrapZoneBoxExample'>\r\n        <TextField label='Default TextField' placeholder='Input inside Focus Trap Zone' className='' />\r\n        <Link href='' className='' >Hyperlink inside FocusTrapZone</Link><br /><br />\r\n        <div className='shouldFocus input'>\r\n        <Toggle\r\n          ref='toggle'\r\n          checked={ isChecked }\r\n          onChanged={ this._onFocusTrapZoneToggleChanged.bind(this) }\r\n          label='Focus Trap Zone'\r\n          onText='On'\r\n          offText='Off'/>\r\n        </div>\r\n        {(() => {\r\n          if (isChecked) {\r\n            return (\r\n              <Button description='Exit Focus Trap Zone' onClick={ this._onExitButtonClickHandler.bind(this) }>Exit Focus Trap Zone</Button>\r\n            );\r\n          }\r\n        })()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onButtonClickHandler() {\r\n    this.setState({\r\n      isChecked: true\r\n    });\r\n  }\r\n\r\n  private _onExitButtonClickHandler() {\r\n    this.setState({\r\n      isChecked: false\r\n    });\r\n  }\r\n\r\n  private _onFocusTrapZoneToggleChanged(isChecked: boolean) {\r\n    this.setState({\r\n      isChecked: isChecked\r\n    }, () => {\r\n      let toggle = ReactDOM.findDOMNode(this.refs.toggle) as HTMLElement;\r\n\r\n      if (toggle) {\r\n        toggle.focus();\r\n      }\r\n    });\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\..\\..\\src"}