{"version":3,"sources":["demo/pages/CalendarPage/CalendarPage.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sBAIO,wBAAwB,CAAC,CAAA;AAEhC,wCAAsC,oCAAoC,CAAC,CAAA;AAC3E,wCAAsC,oCAAoC,CAAC,CAAA;AAC3E,0BAAsC,2BAA2B,CAAC,CAAA;AAClE,yBAAyB,+BAA+B,CAAC,CAAA;AAGzD,IAAM,yBAAyB,GAAG,OAAO,CAAC,wCAAwC,CAAC,CAAC;AACpF,IAAM,yBAAyB,GAAG,OAAO,CAAC,wCAAwC,CAAC,CAAC;AAEpF;IAAkC,gCAA6C;IAG7E;QACE,iBAAO,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,YAAY,CAAC,CAAC;IAChF,CAAC;IACM,6BAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,qBAAa,GACZ,KAAK,EAAC,UAAU,EAChB,aAAa,EAAC,iBAAiB,EAC/B,YAAY,EACV,qBAAC,GAAG;YACF,oBAAC,mBAAW,GAAC,KAAK,EAAC,iBAAiB,EAAC,IAAI,EAAG,yBAA2B;gBACrE,oBAAC,+CAAqB,GAAC,oBAAoB,EAAG,KAAO,EAAG;aAC5C;YACd,oBAAC,mBAAW,GAAC,KAAK,EAAC,mCAAmC,EAAC,IAAI,EAAG,yBAA2B;gBACvF,oBAAC,+CAAqB,GAAC,oBAAoB,EAAG,IAAM,EAAG;aAC3C;YACd,oBAAC,mBAAW,GAAC,KAAK,EAAC,iCAAiC,EAAC,IAAI,EAAG,yBAA2B;gBACrF,oBAAC,+CAAqB,OAAG;aACb,CAEjB,EACD,gBAAgB,EACd,oBAAC,0BAAkB,GAAC,aAAa,EAAC,UAAU,EAC7C,EACD,QAAQ,EACN,qBAAC,GAAG;YACF,qBAAC,CAAC,SACA,0FACF,CAAI;SAEP,EACD,aAAa,EACX,qBAAC,GAAG,QACL,EACD,GAAG,EACD,qBAAC,GAAG;YACF,qBAAC,EAAE;gBACD,qBAAC,EAAE,SAAC,qCAAmC,CAAK;gBAC5C,qBAAC,EAAE,SAAC,4HAA0H,CAAK;gBACnI,qBAAC,EAAE,SAAC,mIAAiI,CAAK;gBAC1I,qBAAC,EAAE,SAAC,iKAA+J,CAAK;gBACxK,qBAAC,EAAE,SAAC,qIAAmI,CAAK,CACzI;SAER,EACD,KAAK,EACH,qBAAC,GAAG;YACF,qBAAC,EAAE;gBACD,qBAAC,EAAE,SAAC,wIAAsI,CAAK;gBAC/I,qBAAC,EAAE,SAAC,uDAAqD,CAAK;gBAC9D,qBAAC,EAAE,SAAC,8EAA4E,CAAK;gBACrF,qBAAC,EAAE,SAAC,wFAAsF,CAAK,CAC5F;SAER,EACD,KAAK,EAAG,IAAI,CAAC,IAAM,EACnB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAiB,EAChC,CACjB,CAAC;IACJ,CAAC;IAEH,mBAAC;AAAD,CAjEA,AAiEC,CAjEiC,KAAK,CAAC,SAAS,GAiEhD;AAjEY,oBAAY,eAiExB,CAAA","file":"demo/pages/CalendarPage/CalendarPage.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  PropertiesTableSet,\r\n  ComponentPage\r\n} from '../../components/index';\r\n\r\nimport { CalendarButtonExample } from './examples/Calendar.Button.Example';\r\nimport { CalendarInlineExample } from './examples/Calendar.Inline.Example';\r\nimport { getPageRouteFromState } from '../../utilities/pageroute';\r\nimport { AppState } from '../../components/App/AppState';\r\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\r\n\r\nconst CalendarButtonExampleCode = require('./examples/Calendar.Button.Example.tsx');\r\nconst CalendarInlineExampleCode = require('./examples/Calendar.Inline.Example.tsx');\r\n\r\nexport class CalendarPage extends React.Component<IComponentDemoPageProps, any> {\r\n  private _url: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'DatePicker');\r\n  }\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='Calendar'\r\n        componentName='CalendarExample'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='Inline Calendar' code={ CalendarInlineExampleCode }>\r\n              <CalendarInlineExample isMonthPickerVisible={ false } />\r\n            </ExampleCard>\r\n            <ExampleCard title='Inline Calendar with month picker' code={ CalendarInlineExampleCode }>\r\n              <CalendarInlineExample isMonthPickerVisible={ true } />\r\n            </ExampleCard>\r\n            <ExampleCard title='Calendar launched from a button' code={ CalendarButtonExampleCode }>\r\n              <CalendarButtonExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet componentName='Calendar' />\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              The calendar component allows a user to browse through a calendar and pick a date value.\r\n            </p>\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div></div>\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Use the control as a single entity.</li>\r\n              <li>Set the default date to the current date unless a specific date is required for context (e.g. the date of the conference).</li>\r\n              <li>The control is designed to resize relative to available screen width. Allow it to render in either wide or narrow as appropriate.</li>\r\n              <li>When the control is engaged, the Calendar renders as a flyout and has defined widths (300px -narrow and 440px â€“ wide). Plan your UI implementation accordingly.</li>\r\n              <li>The control renders date in a specific format. If allowing for manual entry of date, provide helper text in the appropriate format.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div>\r\n            <ul>\r\n              <li>Don't attempt to break apart year from month/day selectors. If granularity is required, use the Dropdown control or something similar.</li>\r\n              <li>Don't attempt to force resize the control in any way.</li>\r\n              <li>Don't force the control to render one mode vs. the other (year or month/day)</li>\r\n              <li>The flyout selector is a light dismiss control. Don't modify this behavior in any way.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        route={ this._url }\r\n        isHeaderVisible={ this.props.isHeaderVisible }>\r\n      </ComponentPage>\r\n    );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}