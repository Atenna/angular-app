{"version":3,"sources":["utilities/dragdrop/DragDropHelper.tsx"],"names":[],"mappings":"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","file":"utilities/dragdrop/DragDropHelper.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { EventGroup } from '../../utilities/eventGroup/EventGroup';\r\nimport {\r\n  IDragDropHelper,\r\n  IDragDropTarget,\r\n  IDragDropOptions,\r\n  IDragDropEvent\r\n} from './interfaces';\r\nimport { ISelection } from '../../utilities/selection/interfaces';\r\n\r\nconst DISTANCE_FOR_DRAG_SQUARED = 25; // the minimum mouse move distance to treat it as drag event\r\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\r\nconst MOUSEMOVE_PRIMARY_BUTTON = 1; // for mouse move event we are using ev.buttons property, 1 means left button\r\n\r\nexport interface IDragDropHelperParams {\r\n  selection: ISelection;\r\n}\r\n\r\nexport class DragDropHelper implements IDragDropHelper {\r\n  private _dragEnterCounts: { [key: string]: number };\r\n  private _isDragging: boolean;\r\n  private _dragData: {\r\n    eventTarget: EventTarget;\r\n    clientX: number;\r\n    clientY: number;\r\n    dataTransfer?: DataTransfer;\r\n    dropTarget?: IDragDropTarget;\r\n    dragTarget?: IDragDropTarget;\r\n  };\r\n  private _selection: ISelection;\r\n  private _activeTargets: { [key: string]: IDragDropTarget };\r\n  private _events: EventGroup;\r\n\r\n  constructor(params: IDragDropHelperParams) {\r\n    this._selection = params.selection;\r\n    this._dragEnterCounts = {};\r\n    this._activeTargets = {};\r\n\r\n    this._events = new EventGroup(this);\r\n    // clear drag data when mouse up, use capture event to ensure it will be run\r\n    this._events.on(document.body, 'mouseup', this._onMouseUp.bind(this), true);\r\n    this._events.on(document, 'mouseup', this._onDocumentMouseUp.bind(this), true);\r\n  }\r\n\r\n  public dispose() {\r\n    this._events.dispose();\r\n  }\r\n\r\n  public subscribe(root: HTMLElement, events: EventGroup, dragDropOptions: IDragDropOptions) {\r\n    if (dragDropOptions && root) {\r\n      let { key, eventMap, context, updateDropState } = dragDropOptions;\r\n      let dragDropTarget = { root: root, options: dragDropOptions };\r\n      let isDraggable = this._isDraggable(dragDropTarget);\r\n      let isDroppable = this._isDroppable(dragDropTarget);\r\n\r\n      if (isDraggable || isDroppable) {\r\n        this._activeTargets[key] = dragDropTarget;\r\n\r\n        if (eventMap) {\r\n          for (let event of eventMap) {\r\n            this._events.on(root, event.eventName, event.callback.bind(null, context));\r\n          }\r\n        }\r\n      }\r\n\r\n      if (isDroppable) {\r\n        this._dragEnterCounts[key] = 0;\r\n        // dragenter and dragleave will be fired when hover to the child element\r\n        // but we only want to change state when enter or leave the current element\r\n        // use the count to ensure it.\r\n        events.onAll(root, {\r\n          'dragenter': (event: DragEvent) => {\r\n            event.preventDefault(); // needed for IE\r\n            if (!(event as IDragDropEvent).isHandled) {\r\n              (event as IDragDropEvent).isHandled = true;\r\n              this._dragEnterCounts[key]++;\r\n              if (this._dragEnterCounts[key] === 1) {\r\n                updateDropState(true /* isDropping */, event);\r\n              }\r\n            }\r\n          },\r\n          'dragleave': (event: DragEvent) => {\r\n            if (!(event as IDragDropEvent).isHandled) {\r\n              (event as IDragDropEvent).isHandled = true;\r\n              this._dragEnterCounts[key]--;\r\n              if (this._dragEnterCounts[key] === 0) {\r\n                updateDropState(false /* isDropping */, event);\r\n              }\r\n            }\r\n          },\r\n          'dragend': (event: DragEvent) => {\r\n            this._dragEnterCounts[key] = 0;\r\n            updateDropState(false /* isDropping */, event);\r\n          },\r\n          'drop': (event: DragEvent) => {\r\n            this._dragEnterCounts[key] = 0;\r\n            updateDropState(false /* isDropping */, event);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (isDraggable) {\r\n        events.on(root, 'mousedown', this._onMouseDown.bind(this, dragDropTarget));\r\n      }\r\n    }\r\n  }\r\n\r\n  public unsubscribe(root: HTMLElement, key: string) {\r\n    delete this._activeTargets[key];\r\n    this._events.off(root);\r\n  }\r\n\r\n  /**\r\n   * clear drag data when mouse up on body\r\n   */\r\n  private _onMouseUp(event: MouseEvent) {\r\n    this._isDragging = false;\r\n    if (this._dragData) {\r\n      for (let key in this._activeTargets) {\r\n        if (this._activeTargets.hasOwnProperty(key)) {\r\n          let target = this._activeTargets[key];\r\n          if (target && target.root) {\r\n            this._events.off(target.root, 'mousemove');\r\n            this._events.off(target.root, 'mouseleave');\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this._dragData.dropTarget) {\r\n        // raise dargleave event to let dropTarget know it need to remove dropping style\r\n        EventGroup.raise(this._dragData.dropTarget.root, 'dragleave');\r\n      }\r\n    }\r\n    this._dragData = null;\r\n  }\r\n\r\n  /**\r\n   * clear drag data when mouse up outside of the document\r\n   */\r\n  private _onDocumentMouseUp(event: MouseEvent) {\r\n    if (event.target === document.documentElement) {\r\n      this._onMouseUp(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * when mouse move over a new drop target while dragging some items,\r\n   * fire dragleave on the old target and fire dragenter to the new target\r\n   * The target will handle style change on dragenter and dragleave events.\r\n   */\r\n  private _onMouseMove(target: IDragDropTarget, event: MouseEvent) {\r\n    let {\r\n      // use buttons property here since ev.button in some edge case is not updating well during the move.\r\n      // but firefox doesn't support it, so we set the default value when it is not defined.\r\n      buttons = MOUSEMOVE_PRIMARY_BUTTON\r\n    } = event;\r\n\r\n    if (this._dragData && buttons !== MOUSEMOVE_PRIMARY_BUTTON) {\r\n      // cancel mouse down event and return early when the primary button is not pressed\r\n      this._onMouseUp(event);\r\n      return;\r\n    }\r\n\r\n    let { root, options } = target;\r\n    if (this._isDragging) {\r\n      if (this._isDroppable(target)) {\r\n        // we can have nested drop targets in the DOM, like a folder inside a group. In that case, when we drag into\r\n        // the inner target (folder), we first set dropTarget to the inner element. But the same event is bubbled to the\r\n        // outer target too, and we need to prevent the outer one from taking over.\r\n        // So, check if the last dropTarget is not a child of the current.\r\n        if (this._dragData.dropTarget &&\r\n          this._dragData.dropTarget.options.key !== options.key &&\r\n          !this._isChild(root, this._dragData.dropTarget.root)) {\r\n          EventGroup.raise(this._dragData.dropTarget.root, 'dragleave');\r\n          this._dragData.dropTarget = null;\r\n        }\r\n\r\n        if (!this._dragData.dropTarget) {\r\n          EventGroup.raise(root, 'dragenter');\r\n          this._dragData.dropTarget = target;\r\n        }\r\n      }\r\n    } else if (this._dragData) {\r\n      if (this._isDraggable(target)) {\r\n        let xDiff = this._dragData.clientX - event.clientX;\r\n        let yDiff = this._dragData.clientY - event.clientY;\r\n        if (xDiff * xDiff + yDiff * yDiff >= DISTANCE_FOR_DRAG_SQUARED) {\r\n          if (this._dragData.dragTarget &&\r\n            this._selection.isIndexSelected(options.selectionIndex)) {\r\n            this._isDragging = true;\r\n            if (options.onDragStart) {\r\n              options.onDragStart(options.context.data, options.context.index, this._selection.getSelection(), event);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * when mouse leave a target while dragging some items, fire dragleave to the target\r\n   */\r\n  private _onMouseLeave(target: IDragDropTarget, event: MouseEvent) {\r\n    if (this._isDragging) {\r\n      if (this._dragData && this._dragData.dropTarget && this._dragData.dropTarget.options.key === target.options.key) {\r\n        EventGroup.raise(target.root, 'dragleave');\r\n        this._dragData.dropTarget = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * when mouse down on a draggable item, we start to track dragdata.\r\n   */\r\n  private _onMouseDown(target: IDragDropTarget, event: MouseEvent) {\r\n    if (event.button !== MOUSEDOWN_PRIMARY_BUTTON) {\r\n      // Ignore anything except the primary button.\r\n      return;\r\n    }\r\n\r\n    if (this._isDraggable(target)) {\r\n      this._dragData = {\r\n        clientX: event.clientX,\r\n        clientY: event.clientY,\r\n        eventTarget: event.target,\r\n        dragTarget: target\r\n      };\r\n\r\n      for (let key in this._activeTargets) {\r\n        if (this._activeTargets.hasOwnProperty(key)) {\r\n          let activeTarget = this._activeTargets[key];\r\n          if (activeTarget && activeTarget.root) {\r\n            this._events.on(activeTarget.root, 'mousemove', this._onMouseMove.bind(this, activeTarget));\r\n            this._events.on(activeTarget.root, 'mouseleave', this._onMouseLeave.bind(this, activeTarget));\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this._dragData = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * determine whether the child target is a descendant of the parent\r\n   */\r\n  private _isChild(parent: React.ReactInstance, child: React.ReactInstance): boolean {\r\n    let parentElement = ReactDOM.findDOMNode(parent);\r\n    let childElement = ReactDOM.findDOMNode(child);\r\n    while (childElement && childElement.parentElement) {\r\n      if (childElement.parentElement === parentElement) {\r\n        return true;\r\n      }\r\n      childElement = childElement.parentElement;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _isDraggable(target: IDragDropTarget): boolean {\r\n    let { options } = target;\r\n    return options.canDrag && options.canDrag(options.context.data);\r\n  }\r\n\r\n  private _isDroppable(target: IDragDropTarget): boolean {\r\n    // TODO: take the drag item into consideration to prevent dragging an item into the same group\r\n    let { options } = target;\r\n    let dragContext = this._dragData && this._dragData.dragTarget ? this._dragData.dragTarget.options.context : null;\r\n    return options.canDrop && options.canDrop(options.context, dragContext);\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\src"}