{"version":3,"sources":["utilities/dateMath/DateMath.test.ts"],"names":[],"mappings":"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","file":"utilities/dateMath/DateMath.test.js","sourcesContent":["import * as DateMath from './DateMath';\r\nlet { expect } = chai;\r\n\r\nenum Months {\r\n  Jan = 0,\r\n  Feb = 1,\r\n  Mar = 2,\r\n  Apr = 3,\r\n  May = 4,\r\n  Jun = 5,\r\n  Jul = 6,\r\n  Aug = 7,\r\n  Sep = 8,\r\n  Oct = 9,\r\n  Nov = 10,\r\n  Dec = 11\r\n\r\n}\r\ndescribe('DateMath', () => {\r\n\r\n  it('can add days', () => {\r\n    let startDate = new Date(2016, Months.Apr, 1);\r\n    let result = DateMath.addDays(startDate, 5);\r\n    let expected = new Date(2016, Months.Apr, 6);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n  });\r\n\r\n  it('can add days across a month boundary', () => {\r\n    let startDate = new Date(2016, Months.Mar, 30);\r\n    let result = DateMath.addDays(startDate, 5);\r\n    let expected = new Date(2016, Months.Apr, 4);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n  });\r\n\r\n  it('can add days across multiple month boundaries', () => {\r\n    let startDate = new Date(2016, Months.Mar, 31);\r\n    let result = DateMath.addDays(startDate, 65);\r\n    let expected = new Date(2016, Months.Jun, 4);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n  });\r\n\r\n  it('can add days across leap day boundaries', () => {\r\n    let startDate = new Date(2016, Months.Feb, 28);\r\n    let result = DateMath.addDays(startDate, 2);\r\n    let expected = new Date(2016, Months.Mar, 1);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n  });\r\n\r\n  it('can add months', () => {\r\n    let startDate = new Date(2015, Months.Dec, 31);\r\n\r\n    let result = DateMath.addMonths(startDate, 1);\r\n    let expected = new Date(2016, Months.Jan, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, 2);\r\n    expected = new Date(2016, Months.Feb, 29);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, 3);\r\n    expected = new Date(2016, Months.Mar, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, 4);\r\n    expected = new Date(2016, Months.Apr, 30);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, 5);\r\n    expected = new Date(2016, Months.May, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, 6);\r\n    expected = new Date(2016, Months.Jun, 30);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, 7);\r\n    expected = new Date(2016, Months.Jul, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, 8);\r\n    expected = new Date(2016, Months.Aug, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, 9);\r\n    expected = new Date(2016, Months.Sep, 30);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, 10);\r\n    expected = new Date(2016, Months.Oct, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, 11);\r\n    expected = new Date(2016, Months.Nov, 30);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, 12);\r\n    expected = new Date(2016, Months.Dec, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, 14);\r\n    expected = new Date(2017, Months.Feb, 28);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n  });\r\n\r\n  it('can add years', () => {\r\n    let startDate = new Date(2016, Months.Feb, 29);\r\n    let result = DateMath.addYears(startDate, 1);\r\n    let expected = new Date(2017, Months.Feb, 28);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    startDate = new Date(2016, Months.Feb, 29);\r\n    result = DateMath.addYears(startDate, 4);\r\n    expected = new Date(2020, Months.Feb, 29);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    startDate = new Date(2016, Months.Jan, 1);\r\n    result = DateMath.addYears(startDate, 1);\r\n    expected = new Date(2017, Months.Jan, 1);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n  });\r\n\r\n  it('can subtract days', () => {\r\n    let startDate = new Date(2016, Months.Apr, 30);\r\n    let result = DateMath.addDays(startDate, -5);\r\n    let expected = new Date(2016, Months.Apr, 25);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n  });\r\n\r\n  it('can subtract days across a month boundry', () => {\r\n    let startDate = new Date(2016, Months.Apr, 1);\r\n    let result = DateMath.addDays(startDate, -5);\r\n    let expected = new Date(2016, Months.Mar, 27);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n  });\r\n\r\n  it('can subtract days across multiple month boundaries', () => {\r\n    let startDate = new Date(2016, Months.Jul, 4);\r\n    let result = DateMath.addDays(startDate, -65);\r\n    let expected = new Date(2016, Months.Apr, 30);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n  });\r\n\r\n  it('can subtract days across leap day boundaries', () => {\r\n    let startDate = new Date(2016, Months.Mar, 1);\r\n    let result = DateMath.addDays(startDate, -2);\r\n    let expected = new Date(2016, Months.Feb, 28);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n  });\r\n\r\n  it('can subtract months', () => {\r\n    let startDate = new Date(2016, Months.Dec, 31);\r\n\r\n    let result = DateMath.addMonths(startDate, -12);\r\n    let expected = new Date(2015, Months.Dec, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, -11);\r\n    expected = new Date(2016, Months.Jan, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, -10);\r\n    expected = new Date(2016, Months.Feb, 29);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, -9);\r\n    expected = new Date(2016, Months.Mar, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, -8);\r\n    expected = new Date(2016, Months.Apr, 30);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, -7);\r\n    expected = new Date(2016, Months.May, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, -6);\r\n    expected = new Date(2016, Months.Jun, 30);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, -5);\r\n    expected = new Date(2016, Months.Jul, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, -4);\r\n    expected = new Date(2016, Months.Aug, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, -3);\r\n    expected = new Date(2016, Months.Sep, 30);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, -2);\r\n    expected = new Date(2016, Months.Oct, 31);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, -1);\r\n    expected = new Date(2016, Months.Nov, 30);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    result = DateMath.addMonths(startDate, -22);\r\n    expected = new Date(2015, Months.Feb, 28);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n  });\r\n\r\n  it('can subtract years', () => {\r\n    let startDate = new Date(2016, Months.Feb, 29);\r\n    let result = DateMath.addYears(startDate, -1);\r\n    let expected = new Date(2015, Months.Feb, 28);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    startDate = new Date(2016, Months.Feb, 29);\r\n    result = DateMath.addYears(startDate, -4);\r\n    expected = new Date(2012, Months.Feb, 29);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    startDate = new Date(2016, Months.Jan, 1);\r\n    result = DateMath.addYears(startDate, -1);\r\n    expected = new Date(2015, Months.Jan, 1);\r\n\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n  });\r\n\r\n  it('can set the month', () => {\r\n    let startDate = new Date(2016, Months.Jan, 31);\r\n    let result = DateMath.setMonth(startDate, Months.Feb);\r\n    let expected = new Date(2016, Months.Feb, 29);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n\r\n    startDate = new Date(2016, Months.Jun, 1);\r\n    result = DateMath.setMonth(startDate, Months.Feb);\r\n    expected = new Date(2016, Months.Feb, 1);\r\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\r\n  });\r\n\r\n  it('can compare dates', () => {\r\n    let date1 = new Date(2016, 4, 1);\r\n    let date2 = new Date(2016, 4, 1);\r\n    expect(DateMath.compareDates(date1, date2)).to.be.true;\r\n\r\n    date1 = new Date(2016, 4, 1, 12, 30, 0);\r\n    date2 = new Date(2016, 4, 1, 10, 0, 0);\r\n    expect(DateMath.compareDates(date1, date2)).to.be.true;\r\n\r\n    date1 = new Date(2016, 4, 1);\r\n    date2 = new Date(2016, 4, 2);\r\n    expect(DateMath.compareDates(date1, date2)).to.be.false;\r\n\r\n    date1 = new Date(2016, 4, 1);\r\n    date2 = new Date(2016, 5, 1);\r\n    expect(DateMath.compareDates(date1, date2)).to.be.false;\r\n\r\n    date1 = new Date(2016, 4, 1);\r\n    date2 = new Date(2017, 4, 1);\r\n    expect(DateMath.compareDates(date1, date2)).to.be.false;\r\n  });\r\n});"],"sourceRoot":"..\\..\\..\\src"}