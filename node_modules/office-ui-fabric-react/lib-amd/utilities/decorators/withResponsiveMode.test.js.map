{"version":3,"sources":["utilities/decorators/withResponsiveMode.test.tsx"],"names":[],"mappings":";;;;;;;;;;;;;IAKM,wBAAM,CAAU;IAGtB;QAAsB,2BAAyB;QAA/C;YAAsB,8BAAyB;QAI/C,CAAC;QAHQ,wBAAM,GAAb;YACE,MAAM,CAAC,qBAAC,GAAG,QAAG,CAAC;QACjB,CAAC;QAJH;YAAC,uCAAkB;mBAAA;QAKnB,cAAC;IAAD,CAJA,AAIC,CAJqB,KAAK,CAAC,SAAS,GAIpC;IAED,QAAQ,CAAC,oBAAoB,EAAE;QAE7B,EAAE,CAAC,kCAAkC,EAAE;YACrC,YAAM,CAAC,IAAI,CAAC,CAAC;YAEb,sCAAiB,CAAC,mCAAc,CAAC,KAAK,CAAC,CAAC;YACxC,MAAM,CAAC,cAAM,OAAA,cAAc,CAAC,kBAAkB,CAAC,oBAAC,OAAO,OAAG,CAAC,EAA9C,CAA8C,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YAEtE,YAAM,CAAC,KAAK,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iEAAiE,EAAE;YACpE,YAAM,CAAC,IAAI,CAAC,CAAC;YAEb,sCAAiB,CAAC,SAAS,CAAC,CAAC;YAC7B,MAAM,CAAC,cAAM,OAAA,cAAc,CAAC,kBAAkB,CAAC,oBAAC,OAAO,OAAG,CAAC,EAA9C,CAA8C,CAAC,CAAC,MAAM,EAAE,CAAC;YAEtE,YAAM,CAAC,KAAK,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC","file":"utilities/decorators/withResponsiveMode.test.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactTestUtils from 'react-addons-test-utils';\r\nimport { setResponsiveMode, withResponsiveMode, ResponsiveMode } from './withResponsiveMode';\r\nimport { setSSR } from '../dom';\r\n\r\nlet { expect } = chai;\r\n\r\n@withResponsiveMode\r\nclass Example extends React.Component<any, any> {\r\n  public render() {\r\n    return <div />;\r\n  }\r\n}\r\n\r\ndescribe('withResponsiveMode', () => {\r\n\r\n  it('can be used in a server scenario', () => {\r\n    setSSR(true);\r\n\r\n    setResponsiveMode(ResponsiveMode.large);\r\n    expect(() => ReactTestUtils.renderIntoDocument(<Example />)).to.exist;\r\n\r\n    setSSR(false);\r\n  });\r\n\r\n  it('throws in server scenario when responsive mode is not specified', () => {\r\n    setSSR(true);\r\n\r\n    setResponsiveMode(undefined);\r\n    expect(() => ReactTestUtils.renderIntoDocument(<Example />)).throws();\r\n\r\n    setSSR(false);\r\n  });\r\n\r\n});"],"sourceRoot":"..\\..\\..\\src"}