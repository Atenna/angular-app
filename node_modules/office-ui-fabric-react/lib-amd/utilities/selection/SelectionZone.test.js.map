{"version":3,"sources":["utilities/selection/SelectionZone.test.tsx"],"names":[],"mappings":"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","file":"utilities/selection/SelectionZone.test.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\n\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as ReactTestUtils from 'react-addons-test-utils';\r\nlet { expect } = chai;\r\n\r\nimport { SelectionZone, Selection, SelectionMode } from './index';\r\nimport { KeyCodes } from '../KeyCodes';\r\n\r\nlet _selection: Selection;\r\nlet _selectionZone: any;\r\nlet _componentElement: Element;\r\nlet _toggleAll: Element;\r\nlet _surface0: Element;\r\nlet _invoke0: Element;\r\nlet _toggle0: Element;\r\nlet _surface1: Element;\r\nlet _invoke1: Element;\r\nlet _toggle1: Element;\r\nlet _invoke2: Element;\r\nlet _toggle2: Element;\r\nlet _surface3: Element;\r\n\r\nlet _onItemInvokeCalled: number;\r\nlet _lastItemInvoked: any;\r\n\r\nfunction _initializeSelection(selectionMode = SelectionMode.multiple) {\r\n  _selection = new Selection();\r\n  _selection.setItems([{ key: 'a', }, { key: 'b' }, { key: 'c' }, { key: 'd' }]);\r\n  _selectionZone = ReactTestUtils.renderIntoDocument(\r\n    <SelectionZone\r\n      selection={ _selection }\r\n      selectionMode={ selectionMode }\r\n      onItemInvoked={ (item) => { _onItemInvokeCalled++; _lastItemInvoked = item; } }>\r\n\r\n      <button id='toggleAll' data-selection-all-toggle={ true }>Toggle all selected</button>\r\n\r\n      <div id='surface0' data-selection-index='0'>\r\n        <button id='toggle0' data-selection-toggle={ true }>Toggle</button>\r\n        <button id='invoke0' data-selection-invoke={ true }>Invoke</button>\r\n      </div>\r\n\r\n      <div id='surface1' data-selection-index='1'>\r\n        <button id='toggle1' data-selection-toggle={ true }>Toggle</button>\r\n        <button id='invoke1' data-selection-invoke={ true }>Invoke</button>\r\n      </div>\r\n\r\n      <div id='invoke2' data-selection-index='2' data-selection-invoke={ true }>\r\n        <button id='toggle2' data-selection-toggle={ true }>Toggle</button>\r\n      </div>\r\n\r\n      <div id='surface3' data-selection-index='3'></div>\r\n\r\n    </SelectionZone>\r\n  );\r\n\r\n  _componentElement = ReactDOM.findDOMNode(_selectionZone);\r\n  _toggleAll = _componentElement.querySelector('#toggleAll');\r\n  _surface0 = _componentElement.querySelector('#surface0');\r\n  _invoke0 = _componentElement.querySelector('#invoke0');\r\n  _toggle0 = _componentElement.querySelector('#toggle0');\r\n  _surface1 = _componentElement.querySelector('#surface1');\r\n  _invoke1 = _componentElement.querySelector('#invoke1');\r\n  _toggle1 = _componentElement.querySelector('#toggle1');\r\n  _invoke2 = _componentElement.querySelector('#invoke2');\r\n  _toggle2 = _componentElement.querySelector('#toggle2');\r\n  _surface3 = _componentElement.querySelector('#surface3');\r\n\r\n  _onItemInvokeCalled = 0;\r\n  _lastItemInvoked = undefined;\r\n}\r\n\r\ndescribe('SelectionZone', () => {\r\n  beforeEach(() => _initializeSelection());\r\n\r\n  it('toggles an item on click of toggle element', () => {\r\n    _simulateClick(_toggle0);\r\n    expect(_selection.isIndexSelected(0)).equals(true, 'Index 0 not selected');\r\n    _simulateClick(_toggle0);\r\n    expect(_selection.isIndexSelected(0)).equals(false, 'Index 0 selected');\r\n    expect(_onItemInvokeCalled).equals(0, 'onItemInvoked was called');\r\n  });\r\n\r\n  it('toggles an item on dblclick of toggle element', () => {\r\n    ReactTestUtils.Simulate.doubleClick(_toggle0);\r\n    expect(_selection.isIndexSelected(0)).equals(false, 'Index 0 selected');\r\n    expect(_onItemInvokeCalled).equals(0, 'onItemInvoked was called');\r\n  });\r\n\r\n  it('does not toggle an item on mousedown of toggle element', () => {\r\n    ReactTestUtils.Simulate.mouseDown(_toggle0);\r\n    expect(_selection.isIndexSelected(0) === false, 'Index 0 selected');\r\n    expect(_onItemInvokeCalled === 0, 'onItemInvoked was called');\r\n  });\r\n\r\n  it('selects an unselected item on mousedown of invoke without modifiers pressed', () => {\r\n    _selection.setAllSelected(true);\r\n    _selection.setIndexSelected(0, false, true);\r\n\r\n    // Mousedown on the only unselected item's invoke surface should deselect all and select that one.\r\n    ReactTestUtils.Simulate.mouseDown(_invoke0);\r\n    expect(_selection.isIndexSelected(0)).equals(true, 'Index 0 not selected after mousedown');\r\n    expect(_selection.getSelectedCount()).equals(1, 'Only 1 item should be selected');\r\n  });\r\n\r\n  it('does nothing with mousedown of invoke when item is selected already', () => {\r\n    // Mousedown on an item that's already selected should do nothing.\r\n    _selection.setAllSelected(true);\r\n    ReactTestUtils.Simulate.mouseDown(_invoke0);\r\n    expect(_selection.isAllSelected()).equals(true, 'Expecting all items to be selected');\r\n  });\r\n\r\n  it('calls the invoke callback on click of invoke area', () => {\r\n    _simulateClick(_invoke0);\r\n    expect(_onItemInvokeCalled === 1, 'onItemInvoked was not called 1 time after normal click');\r\n  });\r\n\r\n  it('selects an unselected item on click of item surface element', () => {\r\n    _simulateClick(_surface0);\r\n    expect(_selection.isIndexSelected(0)).equals(true, 'Index 0 not selected');\r\n    expect(_onItemInvokeCalled).equals(0, 'onItemInvoked was called');\r\n  });\r\n\r\n  it('does not unselect a selected item on click of item surface element', () => {\r\n    _selection.setIndexSelected(0, true, true);\r\n    _simulateClick(_surface0);\r\n    expect(_selection.isIndexSelected(0)).equals(true, 'Index 0 not selected');\r\n    expect(_onItemInvokeCalled).equals(0, 'onItemInvoked was called');\r\n  });\r\n\r\n  it('does not select an unselected item on mousedown of item surface element', () => {\r\n    ReactTestUtils.Simulate.mouseDown(_surface0);\r\n    expect(_selection.isIndexSelected(0)).equals(false, 'Index 0 selected');\r\n  });\r\n\r\n  it('invokes an item on double clicking the surface element', () => {\r\n    ReactTestUtils.Simulate.doubleClick(_surface0);\r\n    expect(_onItemInvokeCalled).equals(1, 'Item was invoked');\r\n    expect(_lastItemInvoked.key).equals('a', 'Item invoked was not expected item');\r\n  });\r\n\r\n  it('toggles all on toggle-all clicks', () => {\r\n    _simulateClick(_toggleAll);\r\n    expect(_selection.getSelectedCount()).equals(4, 'There were not 4 selected items');\r\n\r\n    _simulateClick(_toggle1);\r\n    expect(_selection.getSelectedCount()).equals(3, 'There were not 3 selected items after toggling index 1');\r\n\r\n    _simulateClick(_toggleAll);\r\n    expect(_selection.getSelectedCount()).equals(4, 'There were not 4 selected items after selecting all again');\r\n\r\n    _simulateClick(_toggleAll);\r\n    expect(_selection.getSelectedCount()).equals(0, 'There were not 0 selected items');\r\n  });\r\n\r\n  it('suports mouse shift click range select scenarios', () => {\r\n    _simulateClick(_surface1);\r\n    expect(_selection.getSelectedCount()).equals(1, 'Clicked surface 1');\r\n\r\n    _simulateClick(_surface3, { shiftKey: true });\r\n    expect(_selection.getSelectedCount()).equals(3, 'After clicking surface 1 and then shift clicking to surface 3');\r\n\r\n    _simulateClick(_surface0, { shiftKey: true });\r\n    expect(_selection.getSelectedCount()).equals(2, 'After shift clicking surface 0');\r\n  });\r\n\r\n  it('toggles by ctrl clicking a surface', () => {\r\n    _simulateClick(_toggleAll);\r\n    expect(_selection.getSelectedCount()).equals(4, 'There were not 4 selected items');\r\n\r\n    _simulateClick(_surface1, {\r\n      ctrlKey: true\r\n    });\r\n    expect(_selection.getSelectedCount()).equals(3, 'There were not 3 selected items');\r\n  });\r\n\r\n  it('selects all on ctrl-a', () => {\r\n    ReactTestUtils.Simulate.keyDown(_componentElement, { ctrlKey: true, which: KeyCodes.a });\r\n    expect(_selection.isAllSelected()).equals(true, 'Expecting that all is selected aftr ctrl-a');\r\n  });\r\n\r\n  it('unselects all on escape', () => {\r\n    _selection.setAllSelected(true);\r\n    ReactTestUtils.Simulate.keyDown(_componentElement, { which: KeyCodes.escape });\r\n    expect(_selection.getSelectedCount()).equals(0, 'Expecting that none is selected aftr escape');\r\n  });\r\n\r\n  it('selects item on focus', () => {\r\n    ReactTestUtils.Simulate.focus(_surface0);\r\n    expect(_selection.isIndexSelected(0)).equals(true, 'Item 0 was not selected');\r\n  });\r\n\r\n  it('does not select an item on focus if ctrl/meta is pressed', () => {\r\n    ReactTestUtils.Simulate.keyDown(_componentElement, { ctrlKey: true });\r\n    ReactTestUtils.Simulate.focus(_surface0);\r\n    expect(_selection.isIndexSelected(0)).equals(false, 'Item 0 was selected on focus with modifier');\r\n  });\r\n\r\n  it('does not select an item on focus when ignoreNextFocus is called', () => {\r\n    _selectionZone.ignoreNextFocus();\r\n    ReactTestUtils.Simulate.focus(_surface0);\r\n    expect(_selection.isIndexSelected(0)).equals(false, 'Item 0 was selected on ignored focus');\r\n  });\r\n\r\n  it('toggles an item when pressing space', () => {\r\n    ReactTestUtils.Simulate.keyDown(_surface0, { which: KeyCodes.space });\r\n    expect(_selection.isIndexSelected(0)).equals(true, 'Expecting index 0 to become selected');\r\n    ReactTestUtils.Simulate.keyDown(_surface0, { which: KeyCodes.space });\r\n    expect(_selection.isIndexSelected(0)).equals(false, 'Expecting index 0 to become unselected');\r\n  });\r\n\r\n  it('does not select the row when clicking on a toggle within an invoke element', () => {\r\n    ReactTestUtils.Simulate.mouseDown(_toggle2);\r\n    expect(_selection.isIndexSelected(2)).equals(false, 'Item 2 should have been unselected');\r\n  });\r\n\r\n  it('can remove selection if you click on dead space', () => {\r\n    _selection.setAllSelected(true);\r\n\r\n    // Raise real browser event.\r\n    document.documentElement.click();\r\n\r\n    expect(_selection.getSelectedCount()).equals(0, 'Expecting selection to be cleared');\r\n  });\r\n});\r\n\r\nfunction _simulateClick(el, eventData?: ReactTestUtils.SyntheticEventData) {\r\n  ReactTestUtils.Simulate.mouseDown(el, eventData);\r\n  ReactTestUtils.Simulate.focus(el, eventData);\r\n  ReactTestUtils.Simulate.click(el, eventData);\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}