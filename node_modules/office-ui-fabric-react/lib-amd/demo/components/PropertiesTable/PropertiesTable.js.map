{"version":3,"sources":["demo/components/PropertiesTable/PropertiesTable.tsx"],"names":[],"mappings":"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","file":"demo/components/PropertiesTable/PropertiesTable.js","sourcesContent":["import * as React from 'react';\r\nimport './PropertiesTable.scss';\r\nimport { DetailsList, DetailsListLayoutMode, IColumn, IGroup } from '../../../DetailsList';\r\nimport { SelectionMode } from '../../../utilities/selection/interfaces';\r\nimport { assign } from '../../../utilities/object';\r\n\r\nexport interface IProperty {\r\n  name: string;\r\n  propertyName: string;\r\n  propertyType: PropertyType;\r\n  property: IInterfaceProperty[] | IEnumProperty[];\r\n}\r\n\r\nexport interface IInterfaceProperty {\r\n  name: string;\r\n  type: string;\r\n  defaultValue: string;\r\n  description: string;\r\n  interfacePropertyType: InterfacePropertyType;\r\n  deprecatedMessage: string;\r\n}\r\n\r\nexport enum InterfacePropertyType {\r\n  required = 0,\r\n  optional = 1,\r\n  deprecated = 2\r\n}\r\n\r\nexport interface IEnumProperty {\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\nexport interface IPropertiesTableProps {\r\n  title?: string;\r\n  properties: IInterfaceProperty[] | IEnumProperty[];\r\n  renderAsEnum?: boolean;\r\n  key?: string;\r\n}\r\n\r\nexport enum PropertyType {\r\n  enum, interface\r\n}\r\n\r\nconst DEFAULT_COLUMNS: IColumn[] = [\r\n  {\r\n    key: 'name',\r\n    name: 'Name',\r\n    fieldName: 'name',\r\n    minWidth: 150,\r\n    maxWidth: 250,\r\n    isCollapsable: false,\r\n    isRowHeader: true,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: 'type',\r\n    name: 'Type',\r\n    fieldName: 'type',\r\n    minWidth: 130,\r\n    maxWidth: 150,\r\n    isCollapsable: false,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: 'defaultValue',\r\n    name: 'Default value',\r\n    fieldName: 'defaultValue',\r\n    minWidth: 130,\r\n    maxWidth: 150,\r\n    isCollapsable: false,\r\n    isResizable: true\r\n  }, {\r\n    key: 'description',\r\n    name: 'Description',\r\n    fieldName: 'description',\r\n    minWidth: 300,\r\n    maxWidth: 400,\r\n    isCollapsable: false,\r\n    isResizable: true,\r\n    isMultiline: true\r\n  }\r\n];\r\n\r\nconst ENUM_COLUMNS: IColumn[] = [\r\n  {\r\n    key: 'name',\r\n    name: 'Name',\r\n    fieldName: 'name',\r\n    minWidth: 150,\r\n    maxWidth: 250,\r\n    isCollapsable: false,\r\n    isRowHeader: true,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: 'description',\r\n    name: 'Description',\r\n    fieldName: 'description',\r\n    minWidth: 300,\r\n    maxWidth: 400,\r\n    isCollapsable: false,\r\n    isResizable: true\r\n  }\r\n];\r\n\r\nexport class PropertiesTable extends React.Component<IPropertiesTableProps, any> {\r\n  public static defaultProps = {\r\n    title: 'Properties'\r\n  };\r\n\r\n  constructor(props: IPropertiesTableProps) {\r\n    super(props);\r\n\r\n    let properties = (props.properties as any[])\r\n        .map((prop, index) => assign({ key: index }, prop))\r\n        .sort((a, b) => (a.name > b.name) ? -1 : 1)\r\n        .sort((a, b) => (a.interfacePropertyType < b.interfacePropertyType) ? -1 : 1);\r\n\r\n    let groups = null;\r\n\r\n    if (!props.renderAsEnum) {\r\n      groups = this._getGroups(properties);\r\n    }\r\n\r\n    this.state = {\r\n      properties,\r\n      groups,\r\n      isEnum: !!props.renderAsEnum\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { title } = this.props;\r\n    let { properties, isEnum, groups } = this.state;\r\n\r\n    return (\r\n      <div className='PropertiesTable'>\r\n        <h2 className='ms-font-xl'>{ title }</h2>\r\n        { (properties && properties.length) ? (\r\n          <DetailsList\r\n            selectionMode={ SelectionMode.none }\r\n            layoutMode={ DetailsListLayoutMode.justified }\r\n            items={ properties }\r\n            groups={ groups }\r\n            columns={ isEnum ? ENUM_COLUMNS : DEFAULT_COLUMNS }\r\n            />\r\n        ) : (\r\n            <div className='PropertiesTable-noProperties'>This component is missing properties. Please provide properties or remove the table from the example.</div>\r\n          ) }\r\n        </div>\r\n    );\r\n  }\r\n\r\n  private _getGroups(props: IInterfaceProperty[]) {\r\n    let groups: IGroup[] = [];\r\n    let index = 0;\r\n\r\n    index = this._tryAddGroup(props, InterfacePropertyType.required, 'Required members', index, groups);\r\n    index = this._tryAddGroup(props, InterfacePropertyType.optional, 'Optional members', index, groups);\r\n    index = this._tryAddGroup(props, InterfacePropertyType.deprecated, 'Deprecated members', index, groups);\r\n\r\n    return groups;\r\n  }\r\n\r\n  private _tryAddGroup(props, typeToCompare: InterfacePropertyType, name: string, index: number, allGroups): number {\r\n    let group: IGroup;\r\n\r\n    while (index < props.length) {\r\n      let prop = props[index] ;\r\n\r\n      if (prop.interfacePropertyType !== typeToCompare) {\r\n        break;\r\n      }\r\n\r\n      if (!group) {\r\n        group = {\r\n          key: name,\r\n          name,\r\n          startIndex: index,\r\n          count: 0\r\n        };\r\n        allGroups.push(group);\r\n      }\r\n      group.count++;\r\n      index++;\r\n    }\r\n\r\n    return index;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}