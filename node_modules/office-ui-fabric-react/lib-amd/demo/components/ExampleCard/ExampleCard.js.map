{"version":3,"sources":["demo/components/ExampleCard/ExampleCard.tsx"],"names":[],"mappings":";;;;;;;IAKA,IAAM,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAgB7C;QAAiC,+BAAqD;QAEpF,qBAAY,KAAwB;YAClC,kBAAM,KAAK,CAAC,CAAC;YAEb,IAAI,CAAC,KAAK,GAAG;gBACX,aAAa,EAAE,KAAK;aACrB,CAAC;YAEF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/D,CAAC;QAEM,4BAAM,GAAb;YACE,IAAA,eAA4D,EAApD,gBAAK,EAAE,cAAI,EAAE,sBAAQ,EAAE,kCAAc,CAAgB;YACrD,4CAAa,CAAgB;YACrC,IAAI,SAAS,GAAG,aAAa,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,iBAAiB,GAAG,EAAE,CAAC,CAAC;YAEpF,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAG,SAAW;gBAC1B,qBAAC,GAAG,IAAC,SAAS,EAAC,oBAAoB;oBACjC,qBAAC,IAAI,IAAC,SAAS,EAAC,6BAA6B,GAAG,KAAO,CAAO;oBAC9D,qBAAC,GAAG,IAAC,SAAS,EAAC,qCAAqC,GAChD,IAAI,GAAG,CACT,oBAAC,eAAM,GAAC,UAAU,EAAG,mBAAU,CAAC,IAAM,EAAC,IAAI,EAAC,OAAO,EACjD,OAAO,EAAG,IAAI,CAAC,kBAAoB,EAAC,SAAS,EAAG,SAAG,CAAC,wBAAwB,EAAE,EAAE,WAAW,EAAE,aAAa,EAAE,CAAG,GAC7G,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,WAAW,GAAG,WAAa,CACjD,CACR,GAAG,CAAE,IAAI,CAAI,CACV,CACF;gBAEN,qBAAC,GAAG,IAAC,SAAS,EAAC,kBAAkB;oBAC/B,oBAAC,SAAS,GAAC,SAAS,EAAC,YAAY,GAC7B,IAAM,CACE;iBACR;gBAEN,qBAAC,GAAG,IAAC,SAAS,EAAG,SAAG,CAAC,qBAAqB,EAAE,EAAE,mBAAmB,EAAE,CAAC,cAAc,CAAC,EAAE,CAAG,GAAC,kBAAkB,GAAC,MAAM,GAC9G,QAAU,CACR;gBAEJ,IAAI,CAAC,eAAe,EAAI,CACtB,CACP,CAAC;QACJ,CAAC;QAEO,qCAAe,GAAvB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;gBACvC,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,yBAAyB;oBACtC,qBAAC,GAAG,IAAC,SAAS,EAAC,iBAAiB;wBAC9B,qBAAC,EAAE,SAAC,IAAE,CAAK;wBACT,IAAI,CAAC,KAAK,CAAC,GAAK,CACd;oBACN,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB;wBAChC,qBAAC,EAAE,SAAC,QAAM,CAAK;wBACb,IAAI,CAAC,KAAK,CAAC,KAAO,CAChB,CACF,CACP,CAAC;YACJ,CAAC;QACH,CAAC;QAEO,wCAAkB,GAA1B;YACE,IAAI,CAAC,QAAQ,CAAC;gBACZ,aAAa,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa;aACzC,CAAC,CAAC;QACL,CAAC;QACH,kBAAC;IAAD,CApEA,AAoEC,CApEgC,KAAK,CAAC,SAAS,GAoE/C;IApEY,mBAAW,cAoEvB,CAAA","file":"demo/components/ExampleCard/ExampleCard.js","sourcesContent":["import * as React from 'react';\r\nimport './ExampleCard.scss';\r\nimport { Button, ButtonType } from '../../../Button';\r\nimport { css } from '../../../utilities/css';\r\n\r\nconst Highlight = require('react-highlight');\r\n\r\nexport interface IExampleCardProps {\r\n  title: string;\r\n  isOptIn?: boolean;\r\n  code?: string;\r\n  children?: any;\r\n  isRightAligned?: boolean;\r\n  dos?: JSX.Element;\r\n  donts?: JSX.Element;\r\n}\r\n\r\nexport interface IExampleCardState {\r\n  isCodeVisible?: boolean;\r\n}\r\n\r\nexport class ExampleCard extends React.Component<IExampleCardProps, IExampleCardState> {\r\n\r\n  constructor(props: IExampleCardProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isCodeVisible: false\r\n    };\r\n\r\n    this._onToggleCodeClick = this._onToggleCodeClick.bind(this);\r\n  }\r\n\r\n  public render() {\r\n    const { title, code, children, isRightAligned } = this.props;\r\n    const { isCodeVisible } = this.state;\r\n    let rootClass = 'ExampleCard' + (this.state.isCodeVisible ? ' is-codeVisible' : '');\r\n\r\n    return (\r\n      <div className={ rootClass }>\r\n        <div className='ExampleCard-header'>\r\n          <span className='ExampleCard-title ms-font-l'>{ title }</span>\r\n          <div className='ExampleCard-toggleButtons ms-font-l'>\r\n            { code ? (\r\n            <Button buttonType={ ButtonType.icon } icon='Embed'\r\n              onClick={ this._onToggleCodeClick } className={ css('ExampleCard-codeButton', { 'is-active': isCodeVisible }) }>\r\n              { this.state.isCodeVisible ? 'Hide code' : 'Show code' }\r\n            </Button>\r\n            ) : ( null ) }\r\n          </div>\r\n        </div>\r\n\r\n        <div className='ExampleCard-code'>\r\n          <Highlight className='javascript'>\r\n            { code }\r\n          </Highlight>\r\n        </div>\r\n\r\n        <div className={ css('ExampleCard-example', { ' is-right-aligned': (isRightAligned) }) } data-is-scrollable='true'>\r\n          { children }\r\n        </div>\r\n\r\n        { this._getDosAndDonts() }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getDosAndDonts() {\r\n    if (this.props.dos && this.props.donts) {\r\n      return (\r\n        <div className='ExampleCard-dosAndDonts'>\r\n          <div className='ExampleCard-dos'>\r\n            <h4>Do</h4>\r\n            { this.props.dos }\r\n          </div>\r\n          <div className='ExampleCard-donts'>\r\n            <h4>Do not</h4>\r\n            { this.props.donts }\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  private _onToggleCodeClick() {\r\n    this.setState({\r\n      isCodeVisible: !this.state.isCodeVisible\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}