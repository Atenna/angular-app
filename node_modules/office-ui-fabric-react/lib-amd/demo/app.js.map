{"version":3,"sources":["demo/app.tsx"],"names":[],"mappings":"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","file":"demo/app.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport * as ReactDOM from 'react-dom';\r\nimport { App } from './components/App/App';\r\nimport { AppState } from './components/App/AppState';\r\nimport { Router, Route } from '../utilities/router/index';\r\nimport { GettingStartedPage } from './pages/GettingStartedPage/GettingStartedPage';\r\nimport { setBaseUrl } from '../utilities/resources';\r\nimport { Fabric } from '../Fabric';\r\nimport * as Debugging from './utilities/debugging';\r\n\r\nimport './app.scss';\r\nimport './ColorStyles.scss';\r\n\r\nsetBaseUrl('./dist/');\r\n\r\n/* tslint:disable:no-string-literal */\r\nwindow['Debugging'] = Debugging;\r\n/* tslint:enable:no-string-literal */\r\n\r\nlet rootElement;\r\n\r\n// Return the anchor link from the URL without the hash\r\nfunction _extractAnchorLink(path) {\r\n  let index = path.lastIndexOf('#');\r\n  if (index >= 0) {\r\n    path = path.substr(index + 1, path.length - index);\r\n  }\r\n  return path;\r\n}\r\n\r\nfunction _scrollAnchorLink() {\r\n  if ((window.location.hash.match(/#/g) || []).length > 1) {\r\n    let anchor = _extractAnchorLink(window.location.hash);\r\n    document.getElementById(anchor).scrollIntoView();\r\n  }\r\n}\r\n\r\nfunction _onLoad() {\r\n  rootElement = rootElement || document.getElementById('content');\r\n\r\n  ReactDOM.render(\r\n    <Fabric>\r\n      <Router onNewRouteLoaded={ _scrollAnchorLink }>\r\n        { _getRoutes() }\r\n      </Router>\r\n    </Fabric>,\r\n    rootElement);\r\n}\r\n\r\nfunction _getRoutes() {\r\n  let routes = AppState.testPages.map(page => <Route key={ page.key } path={ page.url } component={ page.component } />);\r\n  let appRoutes = [];\r\n\r\n  AppState.examplePages.forEach(group => {\r\n    group.links\r\n      .filter(link => link.hasOwnProperty('component'))\r\n      .forEach((link, linkIndex) => {\r\n        let { component } = link;\r\n        appRoutes.push(<Route key={ link.key } path={ link.url } component={ component } />);\r\n      });\r\n  });\r\n\r\n  // Default route.\r\n  appRoutes.push(\r\n    <Route key='gettingstarted' component={ GettingStartedPage } />\r\n  );\r\n\r\n  routes.push(\r\n    <Route key='app' component={ App }>\r\n      { appRoutes }\r\n    </Route>\r\n  );\r\n\r\n  return routes;\r\n}\r\n\r\nfunction _onUnload() {\r\n  if (rootElement) {\r\n    ReactDOM.unmountComponentAtNode(rootElement);\r\n  }\r\n}\r\n\r\nlet isReady = document.readyState === 'interactive' || document.readyState === 'complete';\r\n\r\nif (isReady) {\r\n  _onLoad();\r\n} else {\r\n  window.onload = _onLoad;\r\n}\r\n\r\nwindow.onunload = _onUnload;\r\n"],"sourceRoot":"..\\..\\src"}