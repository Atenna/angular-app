{"version":3,"sources":["demo/pages/DialogPage/examples/Dialog.Basic.Example.tsx"],"names":[],"mappings":";;;;;;;IAWA;QAAwC,sCAAyB;QAE/D;YACE,iBAAO,CAAC;YACR,IAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,KAAK;aAClB,CAAC;QACJ,CAAC;QAEM,mCAAM,GAAb;YACE,MAAM,CAAC,CACL,qBAAC,GAAG;gBACF,oBAAC,cAAM,GAAC,WAAW,EAAC,yBAAyB,EAAC,OAAO,EAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAG,GAAC,aAAW,CAAS;gBAC1G,oBAAC,cAAM,GACL,MAAM,EAAG,IAAI,CAAC,KAAK,CAAC,UAAY,EAChC,IAAI,EAAG,kBAAU,CAAC,MAAQ,EAC1B,SAAS,EAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAG,EAC1C,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAC,4GAA4G,EACpH,UAAU,EAAG,KAAO,EACpB,kBAAkB,EAAC,uBAAuB;oBAE1C,oBAAC,mBAAW,GACV,OAAO,EAAG;wBACR;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;yBACjB;wBACD;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;4BAChB,OAAO,EAAE,IAAI;yBACd;wBACD;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;4BAChB,QAAQ,EAAE,IAAI;yBACf;qBACA,EACH,SAAS,EAAG,IAAI,CAAC,gBAAkB,EACnC;oBACA,IAAI,CAAC,qEAAuE;oBAC9E,oBAAC,oBAAY;wBACX,oBAAC,cAAM,GAAC,UAAU,EAAG,kBAAU,CAAC,OAAS,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAE,GAAC,MAAI,CAAS;wBAC9F,oBAAC,cAAM,GAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAE,GAAC,QAAM,CAAS,CACjD,CACR,CACL,CACP,CAAC;QACJ,CAAC;QAEO,wCAAW,GAAnB;YACE,IAAI,CAAC,QAAQ,CAAE,EAAC,UAAU,EAAE,IAAI,EAAE,CAAE,CAAC;QACvC,CAAC;QAEO,yCAAY,GAApB;YACE,IAAI,CAAC,QAAQ,CAAE,EAAC,UAAU,EAAE,KAAK,EAAE,CAAE,CAAC;QACxC,CAAC;QAEO,6CAAgB,GAAxB;YACE,OAAO,CAAC,GAAG,CAAE,sBAAsB,CAAE,CAAC;QACxC,CAAC;QACH,yBAAC;IAAD,CA9DA,AA8DC,CA9DuC,KAAK,CAAC,SAAS,GA8DtD;IA9DY,0BAAkB,qBA8D9B,CAAA","file":"demo/pages/DialogPage/examples/Dialog.Basic.Example.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogType,\r\n  DialogFooter,\r\n  Button,\r\n  ButtonType,\r\n  ChoiceGroup\r\n} from '../../../../index';\r\nimport './Dialog.Basic.Example.scss';\r\n\r\nexport class DialogBasicExample extends React.Component<any, any> {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showDialog: false\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <Button description='Opens the Sample Dialog' onClick={ this._showDialog.bind(this) }>Open Dialog</Button>\r\n        <Dialog\r\n          isOpen={ this.state.showDialog }\r\n          type={ DialogType.normal }\r\n          onDismiss={ this._closeDialog.bind(this) }\r\n          title='All emails together'\r\n          subText='Your Inbox has changed. No longer does it include favorites, it is a singular destination for your emails.'\r\n          isBlocking={ false }\r\n          containerClassName='ms-dialogMainOverride'\r\n        >\r\n          <ChoiceGroup\r\n            options={ [\r\n              {\r\n                key: 'A',\r\n                text: 'Option A'\r\n              },\r\n              {\r\n                key: 'B',\r\n                text: 'Option B',\r\n                checked: true\r\n              },\r\n              {\r\n                key: 'C',\r\n                text: 'Option C',\r\n                disabled: true\r\n              }\r\n            ] }\r\n            onChanged={ this._onChoiceChanged }\r\n          />\r\n          { null /** You can also include null values as the result of conditionals */ }\r\n          <DialogFooter>\r\n            <Button buttonType={ ButtonType.primary } onClick={this._closeDialog.bind(this)}>Save</Button>\r\n            <Button onClick={this._closeDialog.bind(this)}>Cancel</Button>\r\n          </DialogFooter>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _showDialog() {\r\n    this.setState( {showDialog: true } );\r\n  }\r\n\r\n  private _closeDialog() {\r\n    this.setState( {showDialog: false } );\r\n  }\r\n\r\n  private _onChoiceChanged() {\r\n    console.log( 'Choice option change' );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}