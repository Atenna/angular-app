{"version":3,"sources":["demo/pages/LayerPage/examples/Layer.Hosted.Example.tsx"],"names":[],"mappings":";;;;;;;IASA;QAAwC,sCAAyB;QAC/D;YACE,iBAAO,CAAC;YACR,IAAI,CAAC,KAAK,GAAG;gBACX,SAAS,EAAE,KAAK;gBAChB,QAAQ,EAAE,IAAI;aACf,CAAC;QACJ,CAAC;QAEM,mCAAM,GAAb;YAAA,iBA0CC;YAzCC,IAAA,eAAuC,EAAjC,wBAAS,EAAE,sBAAQ,CAAe;YACxC,IAAI,OAAO,GAAG,CACZ,qBAAC,GAAG,IAAC,SAAS,EAAC,wCAAwC,GACrD,gCACF,CAAM,CACP,CAAC;YAEF,MAAM,CAAC,CACL,qBAAC,GAAG;gBACF,oBAAC,cAAM,GACL,KAAK,EAAC,WAAW,EACjB,OAAO,EAAG,QAAU,EACpB,SAAS,EAAG,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAApC,CAAsC,EAAG;gBAEhE,QAAQ,IAAI,CACZ,oBAAC,iBAAS,GAAC,EAAE,EAAC,YAAY,EAAC,SAAS,EAAC,yBAAyB,EAAG,CAChE;gBAEH,qBAAC,CAAC,IAAC,EAAE,EAAC,KAAK,GACT,8JACF,CAAI;gBAEJ,oBAAC,gBAAQ,GACP,KAAK,EAAC,oEAAoE,EAC1E,OAAO,EAAG,SAAW,EACrB,QAAQ,EAAG,UAAC,EAAE,EAAE,OAAO,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAArC,CAAuC,EAAG;gBAEtE,SAAS,GAAG,CACZ,oBAAC,aAAK,GACJ,MAAM,EAAC,YAAY,EACnB,eAAe,EAAG,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAvB,CAAyB,EACjD,kBAAkB,EAAG,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAA1B,CAA4B,GAErD,OAAS,CACL,CACT,GAAG,OAAS;gBAEb,qBAAC,GAAG,IAAC,SAAS,EAAC,yBAAyB,GAAC,kCAAgC,CAAM,CAE3E,CACP,CAAC;QACJ,CAAC;QACH,yBAAC;IAAD,CApDA,AAoDC,CApDuC,KAAK,CAAC,SAAS,GAoDtD;IApDY,0BAAkB,qBAoD9B,CAAA","file":"demo/pages/LayerPage/examples/Layer.Hosted.Example.js","sourcesContent":["import * as React from 'react';\r\nimport './Layer.Example.scss';\r\nimport {\r\n  Checkbox,\r\n  Layer,\r\n  Toggle,\r\n  LayerHost\r\n} from '../../../../index';\r\n\r\nexport class LayerHostedExample extends React.Component<any, any> {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showLayer: false,\r\n      showHost: true\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { showLayer, showHost} = this.state;\r\n    let content = (\r\n      <div className='LayerExample-content ms-u-scaleUpIn100'>\r\n        This is example layer content.\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Toggle\r\n          label='Show host'\r\n          checked={ showHost }\r\n          onChanged={ checked => this.setState({ showHost: checked }) } />\r\n\r\n        { showHost && (\r\n          <LayerHost id='layerhost1' className='LayerExample-customHost' />\r\n        ) }\r\n\r\n        <p id='foo'>\r\n          In some cases, you may need to contain layered content within an area. Wrap the area with a LayerHost, and it will render content at the end of host's area.\r\n        </p>\r\n\r\n        <Checkbox\r\n          label='Render the box below in a Layer and target it at hostId=layerhost1'\r\n          checked={ showLayer }\r\n          onChange={ (ev, checked) => this.setState({ showLayer: checked }) } />\r\n\r\n        { showLayer ? (\r\n          <Layer\r\n            hostId='layerhost1'\r\n            onLayerDidMount={ () => console.log('didmount') }\r\n            onLayerWillUnmount={ () => console.log('willunmount') }\r\n            >\r\n            { content }\r\n          </Layer>\r\n        ) : content }\r\n\r\n        <div className='LayerExample-nonLayered'>I am normally below the content.</div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}