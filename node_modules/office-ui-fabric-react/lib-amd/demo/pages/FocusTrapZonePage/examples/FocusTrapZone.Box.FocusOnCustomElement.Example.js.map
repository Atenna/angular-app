{"version":3,"sources":["demo/pages/FocusTrapZonePage/examples/FocusTrapZone.Box.FocusOnCustomElement.Example.tsx"],"names":[],"mappings":"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","file":"demo/pages/FocusTrapZonePage/examples/FocusTrapZone.Box.FocusOnCustomElement.Example.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\n\r\nimport * as ReactDOM from 'react-dom';\r\nimport { FocusTrapZone } from '../../../../index';\r\nimport './FocusTrapZone.Box.Example.scss';\r\nimport {\r\n  Button,\r\n  Link,\r\n  TextField,\r\n  Toggle\r\n} from '../../../../index';\r\n\r\nexport interface IBoxExampleExampleState {\r\n  isChecked: boolean;\r\n}\r\n\r\nexport default class BoxExample extends React.Component<React.HTMLProps<HTMLDivElement>, IBoxExampleExampleState> {\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    toggle: HTMLElement;\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isChecked: false,\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { isChecked } = this.state;\r\n    const className: string = 'shouldFocus input';\r\n\r\n    return (\r\n      <div>\r\n        <Button description='Focuses inside the FocusTrapZone' onClick={ this._onButtonClickHandler.bind(this) }>Go to Trap Zone</Button>\r\n\r\n        {(() => {\r\n          if (isChecked) {\r\n            return (\r\n              <FocusTrapZone firstFocusableSelector={ className }>\r\n                { this._internalContents() }\r\n              </FocusTrapZone>\r\n              );\r\n          } else {\r\n            return (\r\n              <div>\r\n                { this._internalContents() }\r\n              </div>\r\n            );\r\n          }\r\n        })()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _internalContents() {\r\n    let { isChecked } = this.state;\r\n\r\n    return (\r\n      <div className='ms-FocusTrapZoneBoxExample'>\r\n        <TextField label='Default TextField' placeholder='Input inside Focus Trap Zone' className='' />\r\n        <Link href='' className='' >Hyperlink inside FocusTrapZone</Link><br /><br />\r\n        <div className='shouldFocus input'>\r\n        <Toggle\r\n          ref='toggle'\r\n          checked={ isChecked }\r\n          onChanged={ this._onFocusTrapZoneToggleChanged.bind(this) }\r\n          label='Focus Trap Zone'\r\n          onText='On'\r\n          offText='Off'/>\r\n        </div>\r\n        {(() => {\r\n          if (isChecked) {\r\n            return (\r\n              <Button description='Exit Focus Trap Zone' onClick={ this._onExitButtonClickHandler.bind(this) }>Exit Focus Trap Zone</Button>\r\n            );\r\n          }\r\n        })()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onButtonClickHandler() {\r\n    this.setState({\r\n      isChecked: true\r\n    });\r\n  }\r\n\r\n  private _onExitButtonClickHandler() {\r\n    this.setState({\r\n      isChecked: false\r\n    });\r\n  }\r\n\r\n  private _onFocusTrapZoneToggleChanged(isChecked: boolean) {\r\n    this.setState({\r\n      isChecked: isChecked\r\n    }, () => {\r\n      let toggle = ReactDOM.findDOMNode(this.refs.toggle) as HTMLElement;\r\n\r\n      if (toggle) {\r\n        toggle.focus();\r\n      }\r\n    });\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\..\\..\\src"}