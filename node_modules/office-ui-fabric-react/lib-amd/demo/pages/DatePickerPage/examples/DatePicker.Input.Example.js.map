{"version":3,"sources":["demo/pages/DatePickerPage/examples/DatePicker.Input.Example.tsx"],"names":[],"mappings":";;;;;;;IAOA,IAAM,gBAAgB,GAAG;QACvB,MAAM,EAAE;YACN,SAAS;YACT,UAAU;YACV,OAAO;YACP,OAAO;YACP,KAAK;YACL,MAAM;YACN,MAAM;YACN,QAAQ;YACR,WAAW;YACX,SAAS;YACT,UAAU;YACV,UAAU;SACX;QAED,WAAW,EAAE;YACX,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;SACN;QAED,IAAI,EAAE;YACJ,QAAQ;YACR,QAAQ;YACR,SAAS;YACT,WAAW;YACX,UAAU;YACV,QAAQ;YACR,UAAU;SACX;QAED,SAAS,EAAE;YACT,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;SACJ;QAED,SAAS,EAAE,aAAa;QAExB,sBAAsB,EAAE,yBAAyB;QAEjD,wBAAwB,EAAE,sBAAsB;KACjD,CAAC;IAOF;QAA4C,0CAAkD;QAC5F;YACE,iBAAO,CAAC;YAER,IAAI,CAAC,KAAK,GAAG;gBACX,cAAc,EAAE,iBAAS,CAAC,MAAM;gBAChC,KAAK,EAAE,IAAI;aACZ,CAAC;QACJ,CAAC;QAEM,uCAAM,GAAb;YAAA,iBAmBC;YAlBC,IAAA,eAA0C,EAApC,kCAAc,EAAE,gBAAK,CAAgB;YAC3C,IAAM,IAAI,GAAG,uFAAuF,CAAC;YACrG,MAAM,CAAC,CACL,qBAAC,GAAG;gBACF,qBAAC,CAAC,SAAC,0LAAwL,CAAI;gBAC/L,oBAAC,kBAAU,GACT,KAAK,EAAC,YAAY,EAClB,UAAU,EAAG,KAAO,EACpB,cAAc,EAAG,IAAM,EACvB,SAAS,EAAG,IAAM,EAClB,cAAc,EAAG,cAAgB,EACjC,OAAO,EAAG,gBAAkB,EAC5B,KAAK,EAAG,KAAO,EACf,YAAY,EAAG,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAA9B,CAAgC,EACrD;gBACJ,oBAAC,cAAM,GAAC,OAAO,EAAG,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAA9B,CAAgC,GAAC,OAAK,CAAS,CACnE,CACP,CAAC;QACJ,CAAC;QACH,6BAAC;IAAD,CA9BA,AA8BC,CA9B2C,KAAK,CAAC,SAAS,GA8B1D;IA9BY,8BAAsB,yBA8BlC,CAAA","file":"demo/pages/DatePickerPage/examples/DatePicker.Input.Example.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  DayOfWeek\r\n} from '../../../../index';\r\n\r\nconst DayPickerStrings = {\r\n  months: [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ],\r\n\r\n  shortMonths: [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n  ],\r\n\r\n  days: [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday'\r\n  ],\r\n\r\n  shortDays: [\r\n    'S',\r\n    'M',\r\n    'T',\r\n    'W',\r\n    'T',\r\n    'F',\r\n    'S'\r\n  ],\r\n\r\n  goToToday: 'Go to today',\r\n\r\n  isRequiredErrorMessage: 'Start date is required.',\r\n\r\n  invalidInputErrorMessage: 'Invalid date format.'\r\n};\r\n\r\nexport interface IDatePickerInputExampleState {\r\n  firstDayOfWeek?: DayOfWeek;\r\n  value?: Date;\r\n}\r\n\r\nexport class DatePickerInputExample extends React.Component<any, IDatePickerInputExampleState> {\r\n  public constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      firstDayOfWeek: DayOfWeek.Sunday,\r\n      value: null\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { firstDayOfWeek, value } = this.state;\r\n    const desc = 'This field is required. One of the support input formats is year dash month dash day.';\r\n    return (\r\n      <div>\r\n        <p>Text input allowed by default when use keyboard navigation. Mouse click the TextField will popup DatePicker, click the TextField again will dismiss the DatePicker and allow text input.</p>\r\n        <DatePicker\r\n          label='Start date'\r\n          isRequired={ false }\r\n          allowTextInput={ true }\r\n          ariaLabel={ desc }\r\n          firstDayOfWeek={ firstDayOfWeek }\r\n          strings={ DayPickerStrings }\r\n          value={ value }\r\n          onSelectDate={ date => this.setState({ value: date }) }\r\n          />\r\n        <Button onClick={ () => this.setState({ value: null }) }>Clear</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}