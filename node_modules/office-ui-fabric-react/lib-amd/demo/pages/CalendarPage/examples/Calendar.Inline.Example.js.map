{"version":3,"sources":["demo/pages/CalendarPage/examples/Calendar.Inline.Example.tsx"],"names":[],"mappings":";;;;;;;IAMA,IAAM,gBAAgB,GAAG;QACvB,MAAM,EAAE;YACN,SAAS;YACT,UAAU;YACV,OAAO;YACP,OAAO;YACP,KAAK;YACL,MAAM;YACN,MAAM;YACN,QAAQ;YACR,WAAW;YACX,SAAS;YACT,UAAU;YACV,UAAU;SACX;QAED,WAAW,EAAE;YACX,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;SACN;QAED,IAAI,EAAE;YACJ,QAAQ;YACR,QAAQ;YACR,SAAS;YACT,WAAW;YACX,UAAU;YACV,QAAQ;YACR,UAAU;SACX;QAED,SAAS,EAAE;YACT,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;SACJ;QAED,SAAS,EAAE,aAAa;KACzB,CAAC;IAUF;QAA2C,yCAAyE;QAClH;YACE,iBAAO,CAAC;YAER,IAAI,CAAC,KAAK,GAAG;gBACX,YAAY,EAAE,IAAI;aACnB,CAAC;YAEF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,CAAC;QAEM,sCAAM,GAAb;YACE,IAAI,QAAQ,GAAwB;gBAClC,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,OAAO;aACf,CAAC;YAEF,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,KAAK,EAAG,QAAU;gBACrB,qBAAC,GAAG;oBACF,iBAAe;oBAAA,qBAAC,IAAI,SAAG,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,IAAI,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,cAAc,EAAI,CAAO,CAClH;gBACN,oBAAC,gBAAQ,GACP,YAAY,EAAG,IAAI,CAAC,aAAe,EACnC,SAAS,EAAG,IAAI,CAAC,UAAY,EAC7B,oBAAoB,EAAG,IAAI,CAAC,KAAK,CAAC,oBAAsB,EACxD,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,YAAc,EACjC,cAAc,EAAG,iBAAS,CAAC,MAAQ,EACnC,OAAO,EAAG,gBAAkB,EAEnB,CACP,CACP,CAAC;QACJ,CAAC;QAEO,0CAAU,GAAlB;YACE,IAAI,CAAC,QAAQ,CAAC,UAAC,SAAsC;gBACnD,MAAM,CAAC,SAAS,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,6CAAa,GAArB,UAAsB,IAAU;YAC9B,IAAI,CAAC,QAAQ,CAAC,UAAC,SAAsC;gBACnD,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;gBAC9B,MAAM,CAAC,SAAS,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC;QACH,4BAAC;IAAD,CAhDA,AAgDC,CAhD0C,KAAK,CAAC,SAAS,GAgDzD;IAhDY,6BAAqB,wBAgDjC,CAAA","file":"demo/pages/CalendarPage/examples/Calendar.Inline.Example.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Calendar,\r\n  DayOfWeek\r\n} from '../../../../index';\r\n\r\nconst DayPickerStrings = {\r\n  months: [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ],\r\n\r\n  shortMonths: [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n  ],\r\n\r\n  days: [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday'\r\n  ],\r\n\r\n  shortDays: [\r\n    'S',\r\n    'M',\r\n    'T',\r\n    'W',\r\n    'T',\r\n    'F',\r\n    'S'\r\n  ],\r\n\r\n  goToToday: 'Go to today'\r\n};\r\n\r\nexport interface ICalendarInlineExampleState {\r\n  selectedDate: Date;\r\n}\r\n\r\nexport interface ICalendarInlineExampleProps {\r\n  isMonthPickerVisible: boolean;\r\n}\r\n\r\nexport class CalendarInlineExample extends React.Component<ICalendarInlineExampleProps, ICalendarInlineExampleState> {\r\n  public constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      selectedDate: null\r\n    };\r\n\r\n    this._onDismiss = this._onDismiss.bind(this);\r\n    this._onSelectDate = this._onSelectDate.bind(this);\r\n  }\r\n\r\n  public render() {\r\n    let divStyle: React.CSSProperties = {\r\n      height: '300px',\r\n      width: '400px'\r\n    };\r\n\r\n    return (\r\n      <div style={ divStyle }>\r\n        <div>\r\n          Selected date: <span>{ this.state.selectedDate == null ? 'Not set' : this.state.selectedDate.toLocaleString() }</span>\r\n        </div>\r\n        <Calendar\r\n          onSelectDate={ this._onSelectDate }\r\n          onDismiss={ this._onDismiss }\r\n          isMonthPickerVisible={ this.props.isMonthPickerVisible }\r\n          value={ this.state.selectedDate }\r\n          firstDayOfWeek={ DayOfWeek.Sunday }\r\n          strings={ DayPickerStrings }\r\n          >\r\n        </Calendar>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onDismiss() {\r\n    this.setState((prevState: ICalendarInlineExampleState) => {\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  private _onSelectDate(date: Date) {\r\n    this.setState((prevState: ICalendarInlineExampleState) => {\r\n      prevState.selectedDate = date;\r\n      return prevState;\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}