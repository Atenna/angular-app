{"version":3,"sources":["demo/pages/DetailsListPage/examples/DetailsList.Basic.Example.tsx"],"names":[],"mappings":";;;;;;;IAYA,IAAI,MAAa,CAAC;IAElB;QAA6C,2CAAyB;QAGpE;YAHF,iBA8DC;YA1DG,iBAAO,CAAC;YAER,MAAM,GAAG,MAAM,IAAI,sBAAe,CAAC,GAAG,CAAC,CAAC;YAExC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/D,IAAI,CAAC,UAAU,GAAG,IAAI,iBAAS,CAAC;gBAC9B,kBAAkB,EAAE,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,KAAI,CAAC,oBAAoB,EAAE,EAAE,CAAC,EAAhE,CAAgE;aAC3F,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,GAAG;gBACX,KAAK,EAAE,MAAM;gBACb,gBAAgB,EAAE,IAAI,CAAC,oBAAoB,EAAE;aAC9C,CAAC;QACJ,CAAC;QAEM,wCAAM,GAAb;YAAA,iBAqBC;YApBC,IAAA,eAA4C,EAAtC,gBAAK,EAAE,sCAAgB,CAAgB;YAE7C,MAAM,CAAC,CACL,qBAAC,GAAG;gBACF,qBAAC,GAAG,SAAG,gBAAkB,CAAM;gBAC/B,oBAAC,iBAAS,GACR,KAAK,EAAC,iBAAiB,EACvB,SAAS,EAAG,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAvC,CAAuC,CAAC,GAAG,MAAM,EAAE,CAAC,EAArG,CAAuG,EAC3H;gBACF,oBAAC,wBAAgB,GAAC,SAAS,EAAG,IAAI,CAAC,UAAY;oBAC7C,oBAAC,mBAAW,GACV,KAAK,EAAG,KAAO,EACf,MAAM,EAAC,KAAK,EACZ,SAAS,EAAG,IAAI,CAAC,UAAY,EAC7B,aAAa,EAAG,UAAC,IAAI,IAAK,OAAA,KAAK,CAAC,mBAAiB,IAAI,CAAC,IAAM,CAAC,EAAnC,CAAqC,EAC/D,kBAAkB,EAAG,IAAI,CAAC,mBAAqB,EAC7C;iBACa,CACf,CACP,CAAC;QACJ,CAAC;QAEO,qDAAmB,GAA3B,UAA4B,IAAI,EAAE,KAAK,EAAE,MAAM;YAC7C,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC,oBAAC,YAAI,IAAC,qBAAqB,GAAG,IAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAG,CAAO,CAAC;YAC1E,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;QAEO,sDAAoB,GAA5B;YACE,IAAI,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;YAExD,MAAM,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBACvB,KAAK,CAAC;oBACJ,MAAM,CAAC,mBAAmB,CAAC;gBAC7B,KAAK,CAAC;oBACJ,MAAM,CAAC,mBAAmB,GAAI,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC,CAAS,CAAC,IAAI,CAAC;gBAC/E;oBACE,MAAM,CAAK,cAAc,oBAAkB,CAAC;YAChD,CAAC;QACH,CAAC;QACH,8BAAC;IAAD,CA9DA,AA8DC,CA9D4C,KAAK,CAAC,SAAS,GA8D3D;IA9DY,+BAAuB,0BA8DnC,CAAA","file":"demo/pages/DetailsListPage/examples/DetailsList.Basic.Example.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport {\r\n  DetailsList,\r\n  MarqueeSelection,\r\n  Selection,\r\n  TextField,\r\n  Link\r\n} from '../../../../index';\r\nimport { createListItems } from '../../../utilities/data';\r\n\r\nlet _items: any[];\r\n\r\nexport class DetailsListBasicExample extends React.Component<any, any> {\r\n  private _selection: Selection;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    _items = _items || createListItems(500);\r\n\r\n    this._onRenderItemColumn = this._onRenderItemColumn.bind(this);\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => this.setState({ selectionDetails: this._getSelectionDetails() })\r\n    });\r\n\r\n    this.state = {\r\n      items: _items,\r\n      selectionDetails: this._getSelectionDetails()\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { items, selectionDetails } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>{ selectionDetails }</div>\r\n        <TextField\r\n          label='Filter by name:'\r\n          onChanged={ text => this.setState({ items: text ? _items.filter(i => i.name.toLowerCase().indexOf(text) > -1) : _items }) }\r\n        />\r\n        <MarqueeSelection selection={ this._selection }>\r\n          <DetailsList\r\n            items={ items }\r\n            setKey='set'\r\n            selection={ this._selection }\r\n            onItemInvoked={ (item) => alert(`Item invoked: ${item.name}`) }\r\n            onRenderItemColumn={ this._onRenderItemColumn }\r\n            />\r\n        </MarqueeSelection>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderItemColumn(item, index, column) {\r\n    if (column.key === 'name') {\r\n      return <Link data-selection-invoke={ true }>{ item[column.key] }</Link>;\r\n    }\r\n\r\n    return item[column.key];\r\n  }\r\n\r\n  private _getSelectionDetails(): string {\r\n    let selectionCount = this._selection.getSelectedCount();\r\n\r\n    switch (selectionCount) {\r\n      case 0:\r\n        return 'No items selected';\r\n      case 1:\r\n        return '1 item selected: ' + (this._selection.getSelection()[0] as any).name;\r\n      default:\r\n        return `${ selectionCount } items selected`;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}