{"version":3,"sources":["demo/pages/TextFieldPage/TextFieldPage.tsx"],"names":[],"mappings":";;;;;;;IAaA,IAAM,yBAAyB,GAAG,OAAO,CAAC,wCAAwC,CAAC,CAAC;IACpF,IAAM,gCAAgC,GAAG,OAAO,CAAC,+CAA+C,CAAC,CAAC;IAElG;QAAmC,iCAA6C;QAG9E;YACE,iBAAO,CAAC;YACR,IAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,WAAW,CAAC,CAAC;QAC/E,CAAC;QAEM,8BAAM,GAAb;YACE,MAAM,CAAC,CACL,oBAAC,qBAAa,GACZ,KAAK,EAAC,WAAW,EACjB,aAAa,EAAC,kBAAkB,EAChC,YAAY,EACV,qBAAC,GAAG;gBACF,oBAAC,mBAAW,GAAC,KAAK,EAAC,sBAAsB,EAAC,IAAI,EAAG,yBAA2B;oBAC1E,oBAAC,+CAAqB,OAAG;iBACb;gBACd,oBAAC,mBAAW,GAAC,KAAK,EAAC,oCAAoC,EAAC,IAAI,EAAG,gCAAkC;oBAC/F,oBAAC,6DAA4B,OAAG;iBACpB,CAEjB,EACD,gBAAgB,EACd,oBAAC,0BAAkB,GAAC,aAAa,EAAC,WAAW,EAC9C,EACD,QAAQ,EACN,qBAAC,GAAG;gBACF,qBAAC,CAAC,SACA,8OACF,CAAI;aAEP,EACD,aAAa,EACX,qBAAC,GAAG,QACL,EACD,GAAG,EACD,qBAAC,GAAG;gBACF,qBAAC,EAAE;oBACD,qBAAC,EAAE,SAAC,2DAAyD,CAAK;oBAClE,qBAAC,EAAE,SAAC,2CAAyC,CAAK;oBAClD,qBAAC,EAAE,SAAC,oFAAkF,CAAK;oBAC3F,qBAAC,EAAE,SAAC,qGAAmG,CAAK;oBAC5G,qBAAC,EAAE,SAAC,6FAA2F,CAAK;oBACpG,qBAAC,EAAE,SAAC,wGAAsG,CAAK;oBAC/G,qBAAC,EAAE,SAAC,uFAAqF,CAAK;oBAC9F,qBAAC,EAAE,SAAC,oDAAkD,CAAK;oBAC3D,qBAAC,EAAE,SAAC,mIAAiI,CAAK;oBAC1I,qBAAC,EAAE,SAAC,sGAAoG,CAAK;oBAC7G,qBAAC,EAAE,SAAC,gGAA8F,CAAK;oBACvG,qBAAC,EAAE,SAAC,iGAA+F,CAAK,CACrG;aAER,EACD,KAAK,EACH,qBAAC,GAAG;gBACF,qBAAC,EAAE;oBACD,qBAAC,EAAE,SAAC,iFAA+E,CAAK;oBACxF,qBAAC,EAAE,SAAC,0FAAwF,CAAK;oBACjG,qBAAC,EAAE,SAAC,kDAAgD,CAAK;oBACzD,qBAAC,EAAE,SAAC,2CAAyC,CAAK;oBAClD,qBAAC,EAAE,SAAC,gFAA8E,CAAK,CACpF;aAER,EACD,OAAO,EACL,qBAAC,CAAC,IAAC,IAAI,EAAC,6FAA6F,GAAC,WAAS,CAChH,EACD,KAAK,EAAG,IAAI,CAAC,IAAM,EACnB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAiB,EAChC,CACjB,CAAC;QACJ,CAAC;QACH,oBAAC;IAAD,CAzEA,AAyEC,CAzEkC,KAAK,CAAC,SAAS,GAyEjD;IAzEY,qBAAa,gBAyEzB,CAAA","file":"demo/pages/TextFieldPage/TextFieldPage.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  PropertiesTableSet,\r\n  ComponentPage\r\n} from '../../components/index';\r\n\r\nimport { TextFieldBasicExample } from './examples/TextField.Basic.Example';\r\nimport { TextFieldErrorMessageExample } from './examples/TextField.ErrorMessage.Example';\r\nimport { getPageRouteFromState } from '../../utilities/pageroute';\r\nimport { AppState } from '../../components/App/AppState';\r\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\r\n\r\nconst TextFieldBasicExampleCode = require('./examples/TextField.Basic.Example.tsx');\r\nconst TextFieldErrorMessageExampleCode = require('./examples/TextField.ErrorMessage.Example.tsx');\r\n\r\nexport class TextFieldPage extends React.Component<IComponentDemoPageProps, any> {\r\n  private _url: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'TextField');\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='TextField'\r\n        componentName='TextFieldExample'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='TextField variations' code={ TextFieldBasicExampleCode }>\r\n              <TextFieldBasicExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='TextField error message variations' code={ TextFieldErrorMessageExampleCode }>\r\n              <TextFieldErrorMessageExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet componentName='TextField' />\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              The TextField component enables a user to type text into an app. It's typically used to capture a single line of text, but can be configured to capture multiple lines of text. The text displays on the screen in a simple, uniform format.\r\n            </p>\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div></div>\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Use the TextField to accept data input on a form or page.</li>\r\n              <li>Label the TextField with a helpful name. </li>\r\n              <li>Provide concise helper text that specifies what content is expected to be entered.</li>\r\n              <li>Provide all appropriate states for the control (static, hover, focus, engaged, unavailable, error).</li>\r\n              <li>When part of a form, provide clear designations for which fields are required vs. optional.</li>\r\n              <li>Provide all appropriate methods for submitting provided data (onEnter or a dedicated ‘Submit’ button).</li>\r\n              <li>Provide all appropriate methods of clearing provided data (‘X’ or something similar).</li>\r\n              <li>Allow for selection, copy and paste of field data.</li>\r\n              <li>Whenever possible, format TextField relative to the expected entry (4-digit PIN, 10-digit phone number (3 separate fields), etc).</li>\r\n              <li>When long entries are expected, provide a mechanism for overflow or expansion of the control itself.</li>\r\n              <li>Ensure that the TextField is functional through use of mouse/keyboard or touch when available.</li>\r\n              <li>Ensure that the TextField is accessible through screen reader and/or other accessibility tools.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div>\r\n            <ul>\r\n              <li>Don’t use a TextField to render basic copy as part of a body element of a page.</li>\r\n              <li>Don’t provide an unlabeled TextField and expect that users will know what to do with it.</li>\r\n              <li>Don’t place a TextField inline with body copy.  </li>\r\n              <li>Don’t be overly verbose with helper text.</li>\r\n              <li>Don’t occlude the entry or allow entry when the active content is not visible.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        related={\r\n          <a href='https://github.com/OfficeDev/office-ui-fabric-js/blob/master/ghdocs/components/TextField.md'>Fabric JS</a>\r\n        }\r\n        route={ this._url }\r\n        isHeaderVisible={ this.props.isHeaderVisible }>\r\n      </ComponentPage>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}