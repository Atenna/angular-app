{"version":3,"sources":["demo/pages/ImagePage/ImagePage.tsx"],"names":[],"mappings":";;;;;;;IAiBA,IAAM,uBAAuB,GAAG,OAAO,CAAC,sCAAsC,CAAC,CAAC;IAChF,IAAM,sBAAsB,GAAG,OAAO,CAAC,qCAAqC,CAAC,CAAC;IAC9E,IAAM,uBAAuB,GAAG,OAAO,CAAC,sCAAsC,CAAC,CAAC;IAChF,IAAM,qBAAqB,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC;IAC5E,IAAM,oBAAoB,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;IAE1E;QAA+B,6BAA6C;QAG1E;YACE,iBAAO,CAAC;YACR,IAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,OAAO,CAAC,CAAC;QAC3E,CAAC;QAEM,0BAAM,GAAb;YACE,MAAM,CAAC,CACL,oBAAC,qBAAa,GACZ,KAAK,EAAC,OAAO,EACb,aAAa,EAAC,cAAc,EAC5B,YAAY,EACV,qBAAC,GAAG;gBACF,oBAAC,mBAAW,GAAC,KAAK,EAAC,kBAAkB,EAAC,IAAI,EAAG,uBAAyB;oBACpE,oBAAC,2CAAmB,OAAG;iBACX;gBACd,oBAAC,mBAAW,GAAC,KAAK,EAAC,gBAAgB,EAAC,IAAI,EAAG,oBAAsB;oBAC/D,oBAAC,qCAAgB,OAAG;iBACR;gBACd,oBAAC,mBAAW,GAAC,KAAK,EAAC,kBAAkB,EAAC,IAAI,EAAG,sBAAwB;oBACnE,oBAAC,yCAAkB,OAAG;iBACV;gBACd,oBAAC,mBAAW,GAAC,KAAK,EAAC,mBAAmB,EAAC,IAAI,EAAG,uBAAyB;oBACrE,oBAAC,2CAAmB,OAAG;iBACX;gBACd,oBAAC,mBAAW,GAAC,KAAK,EAAC,iBAAiB,EAAC,IAAI,EAAG,qBAAuB;oBACjE,oBAAC,uCAAiB,OAAG;iBACT,CAEjB,EACD,gBAAgB,EACd,oBAAC,0BAAkB,GAAC,aAAa,EAAC,OAAO,EAC1C,EACD,QAAQ,EACN,qBAAC,GAAG,SACF,kIACF,CACD,EACD,KAAK,EAAG,IAAI,CAAC,IAAM,EACnB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAiB,EAChC,CACjB,CAAC;QACJ,CAAC;QACH,gBAAC;IAAD,CA7CA,AA6CC,CA7C8B,KAAK,CAAC,SAAS,GA6C7C;IA7CY,iBAAS,YA6CrB,CAAA","file":"demo/pages/ImagePage/ImagePage.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  PropertiesTableSet,\r\n  ComponentPage\r\n} from '../../components/index';\r\nimport './ImagePage.scss';\r\n\r\nimport { ImageDefaultExample } from './examples/Image.Default.Example';\r\nimport { ImageCenterExample } from './examples/Image.Center.Example';\r\nimport { ImageContainExample } from './examples/Image.Contain.Example';\r\nimport { ImageCoverExample } from './examples/Image.Cover.Example';\r\nimport { ImageNoneExample } from './examples/Image.None.Example';\r\nimport { getPageRouteFromState } from '../../utilities/pageroute';\r\nimport { AppState } from '../../components/App/AppState';\r\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\r\n\r\nconst ImageDefaultExampleCode = require('./examples/Image.Default.Example.tsx');\r\nconst ImageCenterExampleCode = require('./examples/Image.Center.Example.tsx');\r\nconst ImageContainExampleCode = require('./examples/Image.Contain.Example.tsx');\r\nconst ImageCoverExampleCode = require('./examples/Image.Cover.Example.tsx');\r\nconst ImageNoneExampleCode = require('./examples/Image.None.Example.tsx');\r\n\r\nexport class ImagePage extends React.Component<IComponentDemoPageProps, any> {\r\n  private _url: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'Image');\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='Image'\r\n        componentName='ImageExample'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='Default Behavior' code={ ImageDefaultExampleCode }>\r\n              <ImageDefaultExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='ImageFit: None' code={ ImageNoneExampleCode }>\r\n              <ImageNoneExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='ImageFit: Center' code={ ImageCenterExampleCode }>\r\n              <ImageCenterExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='ImageFit: Contain' code={ ImageContainExampleCode }>\r\n              <ImageContainExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='ImageFit: Cover' code={ ImageCoverExampleCode }>\r\n              <ImageCoverExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet componentName='Image' />\r\n        }\r\n        overview={\r\n          <div>\r\n            Images render an image. The borders have been added to these examples in order to help visualize empty space in the image frame.\r\n          </div>\r\n        }\r\n        route={ this._url }\r\n        isHeaderVisible={ this.props.isHeaderVisible }>\r\n      </ComponentPage>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}