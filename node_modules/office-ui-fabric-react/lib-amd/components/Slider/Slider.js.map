{"version":3,"sources":["components/Slider/Slider.tsx"],"names":[],"mappings":"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","file":"components/Slider/Slider.js","sourcesContent":["import * as React from 'react';\r\nimport './Slider.scss';\r\nimport { ISliderProps, ISlider } from './Slider.Props';\r\nimport { BaseComponent } from '../../common/BaseComponent';\r\nimport { KeyCodes } from '../../utilities/KeyCodes';\r\nimport { Label } from '../../Label';\r\nimport { css } from '../../utilities/css';\r\nimport { getRTL as isRTL, getRTLSafeKeyCode } from '../../utilities/rtl';\r\nimport { getId } from '../../utilities/object';\r\nimport { autobind } from '../../utilities/autobind';\r\n\r\nexport interface ISliderState {\r\n  value?: number;\r\n  renderedValue?: number;\r\n}\r\n\r\nexport enum ValuePosition {\r\n  Previous,\r\n  Next\r\n}\r\n\r\nexport class Slider extends BaseComponent<ISliderProps, ISliderState> implements ISlider {\r\n  public static defaultProps: {} = {\r\n    step: 1,\r\n    min: 0,\r\n    max: 10,\r\n    showValue: true,\r\n    disabled: false,\r\n    buttonProps: {}\r\n  };\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance,\r\n    root: HTMLElement,\r\n    sliderLine: HTMLElement,\r\n    thumb: HTMLElement\r\n  };\r\n\r\n  private _id: string;\r\n\r\n  constructor(props?: ISliderProps) {\r\n    super(props);\r\n\r\n    this._id = getId('Slider');\r\n\r\n    let value = props.value || props.defaultValue || props.min;\r\n\r\n    this.state = {\r\n      value: value,\r\n      renderedValue: value\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Invoked when a component is receiving new props. This method is not called for the initial render.\r\n   */\r\n  public componentWillReceiveProps(newProps: ISliderProps): void {\r\n\r\n    if (newProps.value !== undefined) {\r\n      let value = Math.max(newProps.min, Math.min(newProps.max, newProps.value));\r\n\r\n      this.setState({\r\n        value: value,\r\n        renderedValue: value\r\n      });\r\n    }\r\n  }\r\n\r\n  public render(): React.ReactElement<{}> {\r\n    const {\r\n      ariaLabel,\r\n      className,\r\n      disabled,\r\n      label,\r\n      max,\r\n      min,\r\n      showValue,\r\n      buttonProps\r\n    } = this.props;\r\n    const { value, renderedValue } = this.state;\r\n    const thumbOffsetPercent: number = (renderedValue - min) / (max - min) * 100;\r\n\r\n    const onMouseDownProp: {} = disabled ? {} : { onMouseDown: this._onMouseDownOrTouchStart };\r\n    const onTouchStartProp: {} = disabled ? {} : { onTouchStart: this._onMouseDownOrTouchStart };\r\n    const onKeyDownProp: {} = disabled ? {} : { onKeyDown: this._onKeyDown };\r\n\r\n    return (\r\n      <div\r\n        className={ css('ms-Slider', className, {\r\n          'ms-Slider-enabled': !disabled,\r\n          'ms-Slider-disabled': disabled\r\n        }) }\r\n        ref='root'>\r\n        { label && (\r\n          <Label { ...ariaLabel ? {} : { 'htmlFor': this._id } }>\r\n            { label }\r\n          </Label>\r\n        ) }\r\n        <div className='ms-Slider-container'>\r\n          <button\r\n            aria-valuenow={ value }\r\n            aria-valuemin={ min }\r\n            aria-valuemax={ max }\r\n            { ...onMouseDownProp }\r\n            { ...onTouchStartProp }\r\n            { ...onKeyDownProp }\r\n            { ...buttonProps }\r\n            className={ css('ms-Slider-slideBox', buttonProps.className, {\r\n              'ms-Slider-showValue': showValue,\r\n              'ms-Slider-showTransitions': (renderedValue === value)\r\n            }) }\r\n            id={ this._id }\r\n            disabled={ disabled }\r\n            type='button'\r\n            role='slider'\r\n            >\r\n            <div\r\n              ref='sliderLine'\r\n              className='ms-Slider-line'\r\n              >\r\n              <span\r\n                ref='thumb'\r\n                className='ms-Slider-thumb'\r\n                { ...ariaLabel ? { 'aria-label': ariaLabel } : {} }\r\n                style={ isRTL() ?\r\n                  { 'right': thumbOffsetPercent + '%' } :\r\n                  { 'left': thumbOffsetPercent + '%' } }\r\n                />\r\n              <span className='ms-Slider-active' style={ { 'width': thumbOffsetPercent + '%' } }></span>\r\n              <span className='ms-Slider-inactive' style={ { 'width': (100 - thumbOffsetPercent) + '%' } }></span>\r\n            </div>\r\n          </button>\r\n          { showValue && <label className='ms-Label ms-Slider-value'>{ value }</label> }\r\n        </div>\r\n      </div>\r\n    ) as React.ReactElement<{}>;\r\n  }\r\n\r\n  public focus(): void {\r\n    if (this.refs.thumb) {\r\n      this.refs.thumb.focus();\r\n    }\r\n  }\r\n\r\n  public get value(): number {\r\n    return this.state.value;\r\n  }\r\n\r\n  @autobind\r\n  private _onMouseDownOrTouchStart(event: MouseEvent | TouchEvent): void {\r\n    if (event.type === 'mousedown') {\r\n      this._events.on(window, 'mousemove', this._onMouseMoveOrTouchMove, true);\r\n      this._events.on(window, 'mouseup', this._onMouseUpOrTouchEnd, true);\r\n    } else if (event.type === 'touchstart') {\r\n      this._events.on(window, 'touchmove', this._onMouseMoveOrTouchMove, true);\r\n      this._events.on(window, 'touchend', this._onMouseUpOrTouchEnd, true);\r\n    }\r\n\r\n    this._onMouseMoveOrTouchMove(event, true);\r\n  }\r\n\r\n  @autobind\r\n  private _onMouseMoveOrTouchMove(event: MouseEvent | TouchEvent, suppressEventCancelation?: boolean): void {\r\n    const { max, min, step } = this.props;\r\n    const steps: number = (max - min) / step;\r\n    const sliderPositionRect: ClientRect = this.refs.sliderLine.getBoundingClientRect();\r\n    const sliderLength: number = sliderPositionRect.width;\r\n    const stepLength: number = sliderLength / steps;\r\n    let currentSteps: number;\r\n\r\n    if (event.type === 'mousedown' || event.type === 'mousemove') {\r\n      currentSteps = isRTL() ?\r\n        (sliderPositionRect.right - (event as MouseEvent).clientX) / stepLength :\r\n        ((event as MouseEvent).clientX - sliderPositionRect.left) / stepLength;\r\n    } else if (event.type === 'touchstart' || event.type === 'touchmove') {\r\n      currentSteps = isRTL() ?\r\n        (sliderPositionRect.right - (event as TouchEvent).touches[0].clientX) / stepLength :\r\n        ((event as TouchEvent).touches[0].clientX - sliderPositionRect.left) / stepLength;\r\n    }\r\n\r\n    let currentValue: number;\r\n    let renderedValue: number;\r\n\r\n    // The value shouldn't be bigger than max or be smaller than min.\r\n    if (currentSteps > Math.floor(steps)) {\r\n      renderedValue = currentValue = max;\r\n    } else if (currentSteps < 0) {\r\n      renderedValue = currentValue = min;\r\n    } else {\r\n      renderedValue = min + step * currentSteps;\r\n      currentValue = min + step * Math.round(currentSteps);\r\n    }\r\n\r\n    this._updateValue(currentValue, renderedValue);\r\n\r\n    if (!suppressEventCancelation) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private _updateValue(value, renderedValue) {\r\n    let valueChanged = value !== this.state.value;\r\n\r\n    this.setState({\r\n      value,\r\n      renderedValue\r\n    }, () => {\r\n      if (valueChanged && this.props.onChange) {\r\n        this.props.onChange(this.state.value);\r\n      }\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  private _onMouseUpOrTouchEnd(): void {\r\n\r\n    // Synchronize the renderedValue to the actual value.\r\n    this.setState({\r\n      renderedValue: this.state.value\r\n    });\r\n\r\n    this._events.off();\r\n  }\r\n\r\n  @autobind\r\n  private _onKeyDown(event: KeyboardEvent): void {\r\n    let value: number = this.state.value;\r\n    const { max, min, step } = this.props;\r\n\r\n    let diff: number = 0;\r\n\r\n    switch (event.which) {\r\n      case getRTLSafeKeyCode(KeyCodes.left):\r\n      case KeyCodes.down:\r\n        diff = -step;\r\n        break;\r\n      case getRTLSafeKeyCode(KeyCodes.right):\r\n      case KeyCodes.up:\r\n        diff = step;\r\n        break;\r\n\r\n      case KeyCodes.home:\r\n        value = min;\r\n        break;\r\n\r\n      case KeyCodes.end:\r\n        value = max;\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n    const newValue: number = Math.min(max, Math.max(min, value + diff));\r\n\r\n    this._updateValue(newValue, newValue);\r\n\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n}"],"sourceRoot":"..\\..\\..\\src"}