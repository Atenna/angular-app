{"version":3,"sources":["components/Calendar/Calendar.tsx"],"names":[],"mappings":"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","file":"components/Calendar/Calendar.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  DayOfWeek,\r\n  ICalendar,\r\n  ICalendarProps\r\n} from './Calendar.Props';\r\nimport { CalendarDay } from './CalendarDay';\r\nimport { CalendarMonth } from './CalendarMonth';\r\nimport {\r\n  autobind,\r\n  BaseComponent,\r\n  KeyCodes\r\n} from '../../Utilities';\r\nimport './Calendar.scss';\r\n\r\nexport interface ICalendarState {\r\n  /** The currently focused date in the calendar, but not necessarily selected */\r\n  navigatedDate?: Date;\r\n  /** The currently selected date in the calendar */\r\n  selectedDate?: Date;\r\n}\r\n\r\nexport class Calendar extends BaseComponent<ICalendarProps, ICalendarState> implements ICalendar {\r\n  public static defaultProps: ICalendarProps = {\r\n    onSelectDate: null,\r\n    onDismiss: null,\r\n    isMonthPickerVisible: true,\r\n    value: null,\r\n    firstDayOfWeek: DayOfWeek.Sunday,\r\n    strings: null\r\n  };\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    root: HTMLElement;\r\n    dayPicker: CalendarDay;\r\n  };\r\n\r\n  private _focusOnUpdate: boolean;\r\n\r\n  constructor(props: ICalendarProps) {\r\n    super();\r\n\r\n    let currentDate = props.value && !isNaN(props.value.getTime()) ?\r\n      props.value\r\n      : new Date();\r\n    this.state = {\r\n      selectedDate: currentDate,\r\n      navigatedDate: currentDate\r\n    };\r\n\r\n    this._focusOnUpdate = false;\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: ICalendarProps) {\r\n    let { value } = nextProps;\r\n\r\n    this.setState({\r\n      selectedDate: value || new Date()\r\n    });\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    if (this._focusOnUpdate) {\r\n      this.refs.dayPicker.focus();\r\n      this._focusOnUpdate = false;\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let rootClass = 'ms-DatePicker';\r\n    let { firstDayOfWeek, strings } = this.props;\r\n    let { selectedDate, navigatedDate } = this.state;\r\n\r\n    return (\r\n      <div className={ rootClass } ref='root'>\r\n        <div className={ 'ms-DatePicker-picker ms-DatePicker-picker--opened ms-DatePicker-picker--focused ' + (this.props.isMonthPickerVisible ? 'is-monthPickerVisible' : '') } >\r\n          <div className='ms-DatePicker-holder' onKeyDown={ this._onDatePickerPopupKeyDown }>\r\n            <div className='ms-DatePicker-frame'>\r\n              <div className='ms-DatePicker-wrap'>\r\n                <CalendarDay\r\n                  selectedDate={ selectedDate }\r\n                  navigatedDate={ navigatedDate }\r\n                  onSelectDate={ this._onSelectDate }\r\n                  onNavigateDate={ this._onNavigateDate }\r\n                  firstDayOfWeek={ firstDayOfWeek }\r\n                  strings={ strings }\r\n                  ref='dayPicker' />\r\n                <CalendarMonth\r\n                  navigatedDate={ navigatedDate }\r\n                  strings={ strings }\r\n                  onNavigateDate={ this._onNavigateDate } />\r\n                <span\r\n                  className='ms-DatePicker-goToday js-goToday'\r\n                  onClick={ this._onGotoToday }\r\n                  onKeyDown={ this._onGotoTodayKeyDown }\r\n                  tabIndex={ 0 }>\r\n                  { strings.goToToday }\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this.refs.dayPicker) {\r\n      this.refs.dayPicker.focus();\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _navigateDay(date: Date) {\r\n    this.setState({\r\n      navigatedDate: date\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  private _onNavigateDate(date: Date, focusOnNavigatedDay: boolean) {\r\n    this._navigateDay(date);\r\n    this._focusOnUpdate = focusOnNavigatedDay;\r\n  }\r\n\r\n  @autobind\r\n  private _onSelectDate(date: Date) {\r\n    let { onSelectDate } = this.props;\r\n\r\n    this.setState({\r\n      selectedDate: date\r\n    });\r\n\r\n    if (onSelectDate) {\r\n      onSelectDate(date);\r\n    }\r\n  };\r\n\r\n  @autobind\r\n  private _onGotoToday() {\r\n    this._navigateDay(new Date());\r\n    this._focusOnUpdate = true;\r\n  };\r\n\r\n  @autobind\r\n  private _onGotoTodayKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (ev.which === KeyCodes.enter) {\r\n      ev.preventDefault();\r\n      this._onGotoToday();\r\n    }\r\n  };\r\n\r\n  @autobind\r\n  private _onDatePickerPopupKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\r\n    switch (ev.which) {\r\n      case KeyCodes.enter:\r\n        ev.preventDefault();\r\n        break;\r\n\r\n      case KeyCodes.backspace:\r\n        ev.preventDefault();\r\n        break;\r\n\r\n      case KeyCodes.escape:\r\n        this._handleEscKey(ev);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _handleEscKey(ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (this.props.onDismiss() != null) {\r\n      this.props.onDismiss();\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}