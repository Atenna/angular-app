{"version":3,"sources":["components/Calendar/Calendar.test.tsx"],"names":[],"mappings":";;IAMM,wBAAM,CAAU;IAKtB,QAAQ,CAAC,UAAU,EAAE;QACnB,IAAI,gBAAgB,GAAG;YACrB,MAAM,EAAE;gBACN,SAAS;gBACT,UAAU;gBACV,OAAO;gBACP,OAAO;gBACP,KAAK;gBACL,MAAM;gBACN,MAAM;gBACN,QAAQ;gBACR,WAAW;gBACX,SAAS;gBACT,UAAU;gBACV,UAAU;aACX;YAED,WAAW,EAAE;gBACX,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;aACN;YAED,IAAI,EAAE;gBACJ,QAAQ;gBACR,QAAQ;gBACR,SAAS;gBACT,WAAW;gBACX,UAAU;gBACV,QAAQ;gBACR,UAAU;aACX;YAED,SAAS,EAAE;gBACT,GAAG;gBACH,GAAG;gBACH,GAAG;gBACH,GAAG;gBACH,GAAG;gBACH,GAAG;gBACH,GAAG;aACJ;YAED,SAAS,EAAE,aAAa;SACzB,CAAC;QAEF,EAAE,CAAC,mCAAmC,EAAE;YACtC,UAAU;YACV,IAAI,WAAW,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;YAEtC,MAAM;YACN,IAAI,CAAC;gBACH,IAAI,iBAAiB,GAAG,cAAc,CAAC,kBAAkB,CACvD,oBAAC,mBAAQ,GACP,OAAO,EAAG,gBAAkB,EAC5B,oBAAoB,EAAG,IAAM,EAC7B,KAAK,EAAG,WAAa,EACnB,CAAa,CAAC;gBAEpB,IAAI,KAAK,GAAG,cAAc,CAAC,iCAAiC,CAAC,iBAAiB,EAAE,0BAA0B,CAAgB,CAAC;gBAE3H,MAAM,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;YAC7D,CAAE;YAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,oEAAoE,CAAC,CAAC;YAC/F,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,kCAAkC,EAAE;YAC3C,IAAI,iBAA2B,CAAC;YAEhC,MAAM,CAAC;gBACL,iBAAiB,GAAG,cAAc,CAAC,kBAAkB,CACnD,oBAAC,mBAAQ,GACP,OAAO,EAAG,gBAAkB,EAC5B,oBAAoB,EAAG,KAAO,EAC5B,CAAa,CAAC;YACtB,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,0BAA0B,EAAE;gBAC7B,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;gBACvB,IAAI,SAAS,GAAG,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC1D,IAAI,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;gBAC/B,IAAI,cAAc,GAAG,cAAc,CAAC,iCAAiC,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;gBAChH,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC;gBAC3C,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBACvD,IAAI,aAAa,GAAG,cAAc,CAAC,iCAAiC,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,CAAC;gBAC9G,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC;gBAC1C,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,0BAA0B,EAAE;gBAC7B,IAAI,UAAU,GAAG,cAAc,CAAC,kCAAkC,CAAC,iBAAiB,EAAE,uBAAuB,CAAC,CAAC;gBAC/G,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5E,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,kDAAkD,EAAE;gBACrD,wEAAwE;gBACxE,+EAA+E;gBAC/E,8CAA8C;gBAC9C,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;gBACvB,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC;gBAC5D,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBACjF,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACnF,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;gBACzF,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC;gBAC7D,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBAClF,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACpF,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;YAC5F,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,oBAAoB,EAAE;gBACvB,IAAI,SAAS,GAAG,cAAc,CAAC,iCAAiC,CAAC,iBAAiB,EAAE,uBAAuB,CAAC,CAAC;gBAC7G,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC;gBACtC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,0CAA0C,EAAE;YACnD,IAAI,iBAA2B,CAAC;YAChC,IAAI,WAAiB,CAAC;YACtB,MAAM,CAAC;gBACL,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACnC,iBAAiB,GAAG,cAAc,CAAC,kBAAkB,CACnD,oBAAC,mBAAQ,GACP,OAAO,EAAG,gBAAkB,EAC5B,oBAAoB,EAAG,IAAM,EAC7B,KAAK,EAAG,WAAa,EACrB,cAAc,EAAG,0BAAS,CAAC,OAAS,EAClC,CAAa,CAAC;YACtB,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,0BAA0B,EAAE;gBAC7B,IAAI,SAAS,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAChE,IAAI,cAAc,GAAG,cAAc,CAAC,iCAAiC,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;gBAChH,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC;gBAC3C,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBACvD,IAAI,aAAa,GAAG,cAAc,CAAC,iCAAiC,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,CAAC;gBAC9G,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC;gBAC1C,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;YACnF,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,0BAA0B,EAAE;gBAC7B,IAAI,UAAU,GAAG,cAAc,CAAC,kCAAkC,CAAC,iBAAiB,EAAE,uBAAuB,CAAC,CAAC;gBAC/G,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5E,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,kDAAkD,EAAE;gBACrD,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBACnE,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,0BAA0B,EAAE;gBAC7B,IAAI,WAAW,GAAG,cAAc,CAAC,iCAAiC,CAAC,iBAAiB,EAAE,2BAA2B,CAAgB,CAAC;gBAClI,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC;gBACxC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,4BAA4B,EAAE;gBAC/B,IAAI,WAAW,GAAG,cAAc,CAAC,iCAAiC,CAAC,iBAAiB,EAAE,2BAA2B,CAAC,CAAC;gBACnH,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC;gBACxC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;YACjF,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,4BAA4B,EAAE;gBAC/B,IAAI,MAAM,GAAG,cAAc,CAAC,kCAAkC,CAAC,iBAAiB,EAAE,2BAA2B,CAAC,CAAC;gBAC/G,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBACnC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC5B,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,oBAAoB,EAAE;gBACvB,IAAI,SAAS,GAAG,cAAc,CAAC,iCAAiC,CAAC,iBAAiB,EAAE,uBAAuB,CAAC,CAAC;gBAC7G,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC;gBACtC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC","file":"components/Calendar/Calendar.test.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\n\r\nimport * as ReactTestUtils from 'react-addons-test-utils';\r\n\r\nlet { expect } = chai;\r\n\r\nimport { Calendar } from './Calendar';\r\nimport { DayOfWeek } from './Calendar.Props';\r\n\r\ndescribe('Calendar', () => {\r\n  let dayPickerStrings = {\r\n    months: [\r\n      'January',\r\n      'February',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'August',\r\n      'September',\r\n      'October',\r\n      'November',\r\n      'December'\r\n    ],\r\n\r\n    shortMonths: [\r\n      'Jan',\r\n      'Feb',\r\n      'Mar',\r\n      'Apr',\r\n      'May',\r\n      'Jun',\r\n      'Jul',\r\n      'Aug',\r\n      'Sep',\r\n      'Oct',\r\n      'Nov',\r\n      'Dec'\r\n    ],\r\n\r\n    days: [\r\n      'Sunday',\r\n      'Monday',\r\n      'Tuesday',\r\n      'Wednesday',\r\n      'Thursday',\r\n      'Friday',\r\n      'Saturday'\r\n    ],\r\n\r\n    shortDays: [\r\n      'S',\r\n      'M',\r\n      'T',\r\n      'W',\r\n      'T',\r\n      'F',\r\n      'S'\r\n    ],\r\n\r\n    goToToday: 'Go to today'\r\n  };\r\n\r\n  it('can handle invalid starting dates', () => {\r\n    // Arrange\r\n    let defaultDate = new Date('invalid');\r\n\r\n    // Act\r\n    try {\r\n      let renderedComponent = ReactTestUtils.renderIntoDocument(\r\n        <Calendar\r\n          strings={ dayPickerStrings }\r\n          isMonthPickerVisible={ true }\r\n          value={ defaultDate }\r\n          />) as Calendar;\r\n\r\n      let today = ReactTestUtils.findRenderedDOMComponentWithClass(renderedComponent, 'ms-DatePicker-day--today') as HTMLElement;\r\n\r\n      expect(+today.innerText).to.be.equal(new Date().getDate());\r\n    } catch (err) {\r\n      expect.fail(err, null, 'Encountered error trying to render a Calendar with an invalid date');\r\n    }\r\n  });\r\n\r\n  describe('Test rendering simplest calendar', () => {\r\n    let renderedComponent: Calendar;\r\n\r\n    before(() => {\r\n      renderedComponent = ReactTestUtils.renderIntoDocument(\r\n        <Calendar\r\n          strings={ dayPickerStrings }\r\n          isMonthPickerVisible={ false }\r\n          />) as Calendar;\r\n    });\r\n\r\n    it('Verify day picker header', () => {\r\n      let today = new Date();\r\n      let monthName = dayPickerStrings.months[today.getMonth()];\r\n      let year = today.getFullYear();\r\n      let dayPickerMonth = ReactTestUtils.findRenderedDOMComponentWithClass(renderedComponent, 'ms-DatePicker-month');\r\n      expect(dayPickerMonth).to.not.be.undefined;\r\n      expect(dayPickerMonth.textContent).to.equal(monthName);\r\n      let dayPickerYear = ReactTestUtils.findRenderedDOMComponentWithClass(renderedComponent, 'ms-DatePicker-year');\r\n      expect(dayPickerYear).to.not.be.undefined;\r\n      expect(dayPickerYear.textContent).to.equal(year.toString());\r\n    });\r\n\r\n    it('Verify first day of week', () => {\r\n      let dayHeaders = ReactTestUtils.scryRenderedDOMComponentsWithClass(renderedComponent, 'ms-DatePicker-weekday');\r\n      expect(dayHeaders.length).to.equal(7);\r\n      expect(dayHeaders[0].textContent).to.equal(dayPickerStrings.shortDays[0]);\r\n      expect(dayHeaders[1].textContent).to.equal(dayPickerStrings.shortDays[1]);\r\n      expect(dayHeaders[2].textContent).to.equal(dayPickerStrings.shortDays[2]);\r\n      expect(dayHeaders[3].textContent).to.equal(dayPickerStrings.shortDays[3]);\r\n      expect(dayHeaders[4].textContent).to.equal(dayPickerStrings.shortDays[4]);\r\n      expect(dayHeaders[5].textContent).to.equal(dayPickerStrings.shortDays[5]);\r\n      expect(dayHeaders[6].textContent).to.equal(dayPickerStrings.shortDays[6]);\r\n    });\r\n\r\n    it('Verify day picker selected date & navigated date', () => {\r\n      // When not passed in selected & navigated dates default to current date\r\n      // These dates will be ms different, so just compare their day, month, and year\r\n      // This test will likely fail around midnight.\r\n      let today = new Date();\r\n      expect(renderedComponent.state.selectedDate).to.not.be.null;\r\n      expect(renderedComponent.state.selectedDate.getDate()).to.equal(today.getDate());\r\n      expect(renderedComponent.state.selectedDate.getMonth()).to.equal(today.getMonth());\r\n      expect(renderedComponent.state.selectedDate.getFullYear()).to.equal(today.getFullYear());\r\n      expect(renderedComponent.state.navigatedDate).to.not.be.null;\r\n      expect(renderedComponent.state.navigatedDate.getDate()).to.equal(today.getDate());\r\n      expect(renderedComponent.state.navigatedDate.getMonth()).to.equal(today.getMonth());\r\n      expect(renderedComponent.state.navigatedDate.getFullYear()).to.equal(today.getFullYear());\r\n    });\r\n\r\n    it('Verify go to today', () => {\r\n      let goToToday = ReactTestUtils.findRenderedDOMComponentWithClass(renderedComponent, 'ms-DatePicker-goToday');\r\n      expect(goToToday).to.not.be.undefined;\r\n      expect(goToToday.textContent).to.equal(dayPickerStrings.goToToday);\r\n    });\r\n  });\r\n\r\n  describe('Test rendering most complicated calendar', () => {\r\n    let renderedComponent: Calendar;\r\n    let defaultDate: Date;\r\n    before(() => {\r\n      defaultDate = new Date(2016, 5, 4);\r\n      renderedComponent = ReactTestUtils.renderIntoDocument(\r\n        <Calendar\r\n          strings={ dayPickerStrings }\r\n          isMonthPickerVisible={ true }\r\n          value={ defaultDate }\r\n          firstDayOfWeek={ DayOfWeek.Tuesday }\r\n          />) as Calendar;\r\n    });\r\n\r\n    it('Verify day picker header', () => {\r\n      let monthName = dayPickerStrings.months[defaultDate.getMonth()];\r\n      let dayPickerMonth = ReactTestUtils.findRenderedDOMComponentWithClass(renderedComponent, 'ms-DatePicker-month');\r\n      expect(dayPickerMonth).to.not.be.undefined;\r\n      expect(dayPickerMonth.textContent).to.equal(monthName);\r\n      let dayPickerYear = ReactTestUtils.findRenderedDOMComponentWithClass(renderedComponent, 'ms-DatePicker-year');\r\n      expect(dayPickerYear).to.not.be.undefined;\r\n      expect(dayPickerYear.textContent).to.equal(defaultDate.getFullYear().toString());\r\n    });\r\n\r\n    it('Verify first day of week', () => {\r\n      let dayHeaders = ReactTestUtils.scryRenderedDOMComponentsWithClass(renderedComponent, 'ms-DatePicker-weekday');\r\n      expect(dayHeaders.length).to.equal(7);\r\n      expect(dayHeaders[0].textContent).to.equal(dayPickerStrings.shortDays[2]);\r\n      expect(dayHeaders[1].textContent).to.equal(dayPickerStrings.shortDays[3]);\r\n      expect(dayHeaders[2].textContent).to.equal(dayPickerStrings.shortDays[4]);\r\n      expect(dayHeaders[3].textContent).to.equal(dayPickerStrings.shortDays[5]);\r\n      expect(dayHeaders[4].textContent).to.equal(dayPickerStrings.shortDays[6]);\r\n      expect(dayHeaders[5].textContent).to.equal(dayPickerStrings.shortDays[0]);\r\n      expect(dayHeaders[6].textContent).to.equal(dayPickerStrings.shortDays[1]);\r\n    });\r\n\r\n    it('Verify day picker selected date & navigated date', () => {\r\n      expect(renderedComponent.state.selectedDate).to.equal(defaultDate);\r\n      expect(renderedComponent.state.navigatedDate).to.equal(defaultDate);\r\n    });\r\n\r\n    it('Verify month picker seen', () => {\r\n      let monthPicker = ReactTestUtils.findRenderedDOMComponentWithClass(renderedComponent, 'ms-DatePicker-monthPicker') as HTMLElement;\r\n      expect(monthPicker).to.not.be.undefined;\r\n      expect(monthPicker.style.display).to.not.equal('none');\r\n    });\r\n\r\n    it('Verify month picker header', () => {\r\n      let currentYear = ReactTestUtils.findRenderedDOMComponentWithClass(renderedComponent, 'ms-DatePicker-currentYear');\r\n      expect(currentYear).to.not.be.undefined;\r\n      expect(currentYear.textContent).to.equal(defaultDate.getFullYear().toString());\r\n    });\r\n\r\n    it('Verify month picker months', () => {\r\n      let months = ReactTestUtils.scryRenderedDOMComponentsWithClass(renderedComponent, 'ms-DatePicker-monthOption');\r\n      expect(months.length).to.equal(12);\r\n      for (let i = 0; i < 12; i++) {\r\n        expect(months[i].textContent).to.equal(dayPickerStrings.shortMonths[i]);\r\n      }\r\n    });\r\n\r\n    it('Verify go to today', () => {\r\n      let goToToday = ReactTestUtils.findRenderedDOMComponentWithClass(renderedComponent, 'ms-DatePicker-goToday');\r\n      expect(goToToday).to.not.be.undefined;\r\n      expect(goToToday.textContent).to.equal(dayPickerStrings.goToToday);\r\n    });\r\n  });\r\n});\r\n"],"sourceRoot":"..\\..\\..\\src"}