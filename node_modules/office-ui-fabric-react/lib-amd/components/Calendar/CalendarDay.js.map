{"version":3,"sources":["components/Calendar/CalendarDay.tsx"],"names":[],"mappings":"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","file":"components/Calendar/CalendarDay.js","sourcesContent":["import * as React from 'react';\r\nimport { css } from '../../utilities/css';\r\nimport { DayOfWeek, ICalendarStrings } from './Calendar.Props';\r\nimport { FocusZone } from '../../FocusZone';\r\nimport { KeyCodes } from '../../utilities/KeyCodes';\r\nimport { addDays, addWeeks, addMonths, compareDates } from '../../utilities/dateMath/DateMath';\r\nimport { getRTL, getRTLSafeKeyCode } from '../../utilities/rtl';\r\nimport { getId } from '../../utilities/object';\r\n\r\nconst DAYS_IN_WEEK = 7;\r\n\r\nexport interface IDayInfo {\r\n  key: string;\r\n  date: string;\r\n  originalDate: Date;\r\n  isInMonth: boolean;\r\n  isToday: boolean;\r\n  isSelected: boolean;\r\n}\r\n\r\nexport interface ICalendarDayProps {\r\n  strings: ICalendarStrings;\r\n  selectedDate: Date;\r\n  navigatedDate: Date;\r\n  onSelectDate: (date: Date) => void;\r\n  onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;\r\n  firstDayOfWeek: DayOfWeek;\r\n}\r\n\r\nexport interface ICalendarDayState {\r\n  activeDescendantId?: string;\r\n  weeks?: IDayInfo[][];\r\n}\r\n\r\nexport class CalendarDay extends React.Component<ICalendarDayProps, ICalendarDayState> {\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    navigatedDay: HTMLElement;\r\n  };\r\n\r\n  public constructor(props: ICalendarDayProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeDescendantId: getId('DatePickerDay-active'),\r\n      weeks: this._getWeeks(props.navigatedDate, props.selectedDate)\r\n    };\r\n\r\n    this._onSelectNextMonth = this._onSelectNextMonth.bind(this);\r\n    this._onSelectPrevMonth = this._onSelectPrevMonth.bind(this);\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: ICalendarDayProps) {\r\n    this.setState({\r\n      weeks: this._getWeeks(nextProps.navigatedDate, nextProps.selectedDate)\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let { activeDescendantId, weeks } = this.state;\r\n    let { firstDayOfWeek, strings, navigatedDate, onSelectDate } = this.props;\r\n\r\n    let selectDayCallbacks = {};\r\n    weeks.map((week, index) => week.map(day => selectDayCallbacks[day.key] = onSelectDate.bind(this, day.originalDate)));\r\n\r\n    return (\r\n      <div className='ms-DatePicker-dayPicker'>\r\n        <div className='ms-DatePicker-header'>\r\n          <div className='ms-DatePicker-month'>{ strings.months[navigatedDate.getMonth()] }</div>\r\n          <div className='ms-DatePicker-year'>{ navigatedDate.getFullYear() }</div>\r\n        </div>\r\n        <div className='ms-DatePicker-monthComponents'>\r\n          <div className='ms-DatePicker-navContainer'>\r\n            <span\r\n              className='ms-DatePicker-prevMonth js-prevMonth'\r\n              onClick={ this._onSelectPrevMonth }\r\n              onKeyDown={ this._onKeyDown.bind(this, this._onSelectPrevMonth) }\r\n              tabIndex={ 0 }>\r\n              <i className={ css('ms-Icon', { 'ms-Icon--ChevronLeft': !getRTL(), 'ms-Icon--ChevronRight': getRTL() }) } />\r\n            </span>\r\n            <span\r\n              className='ms-DatePicker-nextMonth js-nextMonth'\r\n              onClick={ this._onSelectNextMonth }\r\n              onKeyDown={ this._onKeyDown.bind(this, this._onSelectNextMonth) }\r\n              tabIndex={ 0 }>\r\n              <i className={ css('ms-Icon', { 'ms-Icon--ChevronLeft': getRTL(), 'ms-Icon--ChevronRight': !getRTL() }) } />\r\n            </span>\r\n          </div>\r\n          <div className='ms-DatePicker-headerToggleView js-showMonthPicker'></div>\r\n        </div>\r\n        <FocusZone>\r\n          <table className='ms-DatePicker-table' role='grid' aria-readonly='true' aria-multiselectable='false' aria-activedescendant={ activeDescendantId }>\r\n            <thead>\r\n              <tr>\r\n                { strings.shortDays.map((val, index) =>\r\n                  <th className='ms-DatePicker-weekday' scope='col' key={ index } title={ strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK] }>\r\n                    { strings.shortDays[(index + firstDayOfWeek) % DAYS_IN_WEEK] }\r\n                  </th>) }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { weeks.map((week, weekIndex) =>\r\n                <tr key={ weekIndex }>\r\n                  { week.map((day, dayIndex) =>\r\n                    <td role='presentation' key={ day.key }>\r\n                      <div\r\n                        className={ css('ms-DatePicker-day', {\r\n                          'ms-DatePicker-day--infocus': day.isInMonth,\r\n                          'ms-DatePicker-day--outfocus': !day.isInMonth,\r\n                          'ms-DatePicker-day--today': day.isToday,\r\n                          'ms-DatePicker-day--highlighted': day.isSelected\r\n                        }) }\r\n                        role='gridcell'\r\n                        onClick={ selectDayCallbacks[day.key] }\r\n                        onKeyDown={ (ev: React.KeyboardEvent<HTMLElement>) =>\r\n                          this._navigateMonthEdge(ev, day.originalDate, weekIndex, dayIndex) }\r\n                        aria-selected={ day.isSelected }\r\n                        id={ compareDates(navigatedDate, day.originalDate) ? activeDescendantId : null }\r\n                        data-is-focusable={ true }\r\n                        ref={ compareDates(navigatedDate, day.originalDate) ? 'navigatedDay' : null }\r\n                        key={ compareDates(navigatedDate, day.originalDate) ? 'navigatedDay' : null } >\r\n                        { day.date }\r\n                      </div>\r\n                    </td>\r\n                  ) }\r\n                </tr>\r\n              ) }\r\n            </tbody>\r\n          </table>\r\n        </FocusZone>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this.refs.navigatedDay) {\r\n      this.refs.navigatedDay.tabIndex = 0;\r\n      this.refs.navigatedDay.focus();\r\n    }\r\n  }\r\n\r\n  private _navigateMonthEdge(ev: React.KeyboardEvent<HTMLElement>, date: Date, weekIndex: number, dayIndex: number) {\r\n    if (weekIndex === 0 && ev.which === KeyCodes.up) {\r\n      this.props.onNavigateDate(addWeeks(date, -1), true);\r\n      ev.preventDefault();\r\n    } else if (weekIndex === (this.state.weeks.length - 1) && ev.which === KeyCodes.down) {\r\n      this.props.onNavigateDate(addWeeks(date, 1), true);\r\n      ev.preventDefault();\r\n    } else if (dayIndex === 0 && ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\r\n      this.props.onNavigateDate(addDays(date, -1), true);\r\n      ev.preventDefault();\r\n    } else if (dayIndex === (DAYS_IN_WEEK - 1) && ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\r\n      this.props.onNavigateDate(addDays(date, 1), true);\r\n      ev.preventDefault();\r\n    }\r\n  }\r\n\r\n  private _onKeyDown(callback: () => void, ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (ev.which === KeyCodes.enter) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  private _onSelectNextMonth() {\r\n    this.props.onNavigateDate(addMonths(this.props.navigatedDate, 1), false);\r\n  }\r\n\r\n  private _onSelectPrevMonth() {\r\n    this.props.onNavigateDate(addMonths(this.props.navigatedDate, -1), false);\r\n  }\r\n\r\n  private _getWeeks(navigatedDate: Date, selectedDate: Date): IDayInfo[][] {\r\n    let { firstDayOfWeek } = this.props;\r\n    let date = new Date(navigatedDate.getFullYear(), navigatedDate.getMonth(), 1);\r\n    let today = new Date();\r\n    let weeks = [];\r\n    let week;\r\n\r\n    // Cycle the date backwards to get to the first day of the week.\r\n    while (date.getDay() !== firstDayOfWeek) {\r\n      date.setDate(date.getDate() - 1);\r\n    }\r\n\r\n    // a flag to indicate whether all days of the week are in the month\r\n    let isAllDaysOfWeekOutOfMonth = false;\r\n\r\n    for (let weekIndex = 0; !isAllDaysOfWeekOutOfMonth; weekIndex++) {\r\n      week = [];\r\n\r\n      isAllDaysOfWeekOutOfMonth = true;\r\n\r\n      for (let dayIndex = 0; dayIndex < DAYS_IN_WEEK; dayIndex++) {\r\n        let dayInfo = {\r\n          key: date.toString(),\r\n          date: date.getDate(),\r\n          originalDate: new Date(date.toString()),\r\n          isInMonth: date.getMonth() === navigatedDate.getMonth(),\r\n          isToday: compareDates(today, date),\r\n          isSelected: compareDates(selectedDate, date)\r\n        };\r\n\r\n        week.push(dayInfo);\r\n\r\n        if (dayInfo.isInMonth) {\r\n          isAllDaysOfWeekOutOfMonth = false;\r\n        }\r\n\r\n        date.setDate(date.getDate() + 1);\r\n      }\r\n\r\n      if (!isAllDaysOfWeekOutOfMonth) {\r\n        weeks.push(week);\r\n      }\r\n    }\r\n\r\n    return weeks;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}