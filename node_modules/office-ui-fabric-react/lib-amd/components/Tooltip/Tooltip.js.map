{"version":3,"sources":["components/Tooltip/Tooltip.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;IAWA;QAA6B,2BAAiC;QAA9D;YAA6B,8BAAiC;QAkC9D,CAAC;QAnBQ,wBAAM,GAAb;YACE,IAAA,eAAqF,EAA/E,gCAAa,EAAE,oBAAO,EAAE,8BAAY,EAAE,oCAAe,EAAE,gBAAK,EAAE,UAAE,CAAgB;YAEtF,MAAM,CAAC,CACL,oBAAC,iBAAO,YACN,SAAS,EAAG,SAAG,CAAC,YAAY,EAAE,SAAO,4BAAY,CAAC,KAAK,CAAC,UAAO,CAAG,EAClE,aAAa,EAAG,aAAe,EAC/B,eAAe,EAAG,eAAiB,GAC/B,YAAY,EACX,2BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,0BAAa,CAAC;gBAE9C,qBAAC,GAAG,IAAC,SAAS,EAAC,oBAAoB;oBACjC,qBAAC,CAAC,IAAC,SAAS,EAAC,oBAAoB,EAAC,EAAE,EAAG,EAAI,EAAC,IAAI,EAAC,SAAS,GACtD,OAAS,CACT;iBACA;aACE,CACX,CAAC;QACJ,CAAC;QA/BD,+BAA+B;QACjB,oBAAY,GAAG;YAC3B,eAAe,EAAG,iCAAe,CAAC,SAAS;YAC3C,KAAK,EAAE,4BAAY,CAAC,MAAM;YAC1B,YAAY,EAAE;gBACZ,aAAa,EAAE,IAAI;gBACnB,SAAS,EAAE,EAAE;gBACb,QAAQ,EAAE,CAAC;gBACX,eAAe,EAAE,IAAI;gBACrB,UAAU,EAAE,KAAK;aAClB;SACF,CAAC;QAqBJ,cAAC;IAAD,CAlCA,AAkCC,CAlC4B,6BAAa,GAkCzC;IAlCY,eAAO,UAkCnB,CAAA","file":"components/Tooltip/Tooltip.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport { BaseComponent } from '../../common/BaseComponent';\r\nimport { ITooltipProps, TooltipDelay } from './Tooltip.Props';\r\nimport { Callout } from '../../Callout';\r\nimport { css } from '../../utilities/css';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport { getNativeProps, divProperties } from '../../utilities/properties';\r\nimport './Tooltip.scss';\r\n\r\nexport class Tooltip extends BaseComponent<ITooltipProps, any> {\r\n\r\n  // Specify default props values\r\n  public static defaultProps = {\r\n    directionalHint:  DirectionalHint.topCenter,\r\n    delay: TooltipDelay.medium,\r\n    calloutProps: {\r\n      isBeakVisible: true,\r\n      beakWidth: 16,\r\n      gapSpace: 8,\r\n      setInitialFocus: true,\r\n      doNotLayer: false\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    let { targetElement, content, calloutProps, directionalHint, delay, id } = this.props;\r\n\r\n    return (\r\n      <Callout\r\n        className={ css('ms-Tooltip', `has-${TooltipDelay[delay]}Delay`) }\r\n        targetElement={ targetElement }\r\n        directionalHint={ directionalHint }\r\n        {...calloutProps}\r\n        { ...getNativeProps(this.props, divProperties) }\r\n      >\r\n        <div className='ms-Tooltip-content'>\r\n          <p className='ms-Tooltip-subText' id={ id } role='tooltip'>\r\n            { content }\r\n          </p>\r\n        </div>\r\n      </Callout>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}