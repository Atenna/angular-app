{"version":3,"sources":["components/DetailsList/DetailsRowFields.tsx"],"names":[],"mappings":";;;;;;;IAeA;QAAsC,oCAA+D;QACnG,0BAAY,KAA6B;YACvC,iBAAO,CAAC;YAER,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACrC,CAAC;QAEM,oDAAyB,GAAhC,UAAiC,QAAgC;YAC/D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1C,CAAC;QAEM,iCAAM,GAAb;YACQ,gCAAO,CAAgB;YACvB,wCAAW,CAAgB;YAEjC,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,sBAAsB,GAAC,iBAAiB,GAAC,kBAAkB,GACtE,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,WAAW,IAAK,OAAA,CACrC,qBAAC,GAAG,IACF,GAAG,EAAG,WAAa,EACnB,IAAI,EAAG,MAAM,CAAC,WAAW,GAAG,WAAW,GAAG,UAAY,EACtD,SAAS,EAAG,SAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,SAAS,EAAE;gBACtD,cAAc,EAAE,MAAM,CAAC,WAAW;aACnC,CAAG,EACJ,KAAK,EAAG,EAAE,KAAK,EAAE,MAAM,CAAC,eAAe,EAAI,GAC3C,iBAAiB,GAAC,gBAAgB,GAClC,mBAAmB,GAAG,MAAM,CAAC,GAAK,GAChC,WAAW,CAAC,WAAW,CAAG,CACxB,CACP,EAZsC,CAYtC,CAAG,CACA,CACP,CAAC;QACJ,CAAC;QAEO,oCAAS,GAAjB,UAAkB,KAA6B;YAA/C,iBAgBC;YAfO,qBAAI,EAAE,2BAAS,EAAE,6CAAkB,CAAW;YAEpD,MAAM,CAAC;gBACL,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM;oBACpC,IAAI,WAAW,CAAC;oBAEhB,IAAI,CAAC;wBACH,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,IAAI,kBAAkB,CAAC;wBAEnD,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,MAAM,CAAC,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;oBAC3F,CAAE;oBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAa,CAAC;oBAE3B,MAAM,CAAC,WAAW,CAAC;gBACrB,CAAC,CAAC;aACH,CAAC;QACJ,CAAC;QAEO,uCAAY,GAApB,UAAqB,IAAI,EAAE,MAAM;YAC/B,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;YAE/E,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC1C,KAAK,GAAG,EAAE,CAAC;YACb,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAEH,uBAAC;IAAD,CA9DA,AA8DC,CA9DqC,KAAK,CAAC,SAAS,GA8DpD;IA9DY,wBAAgB,mBA8D5B,CAAA","file":"components/DetailsList/DetailsRowFields.js","sourcesContent":["import * as React from 'react';\r\nimport { IColumn } from './DetailsList.Props';\r\nimport { css } from '../../utilities/css';\r\n\r\nexport interface IDetailsRowFieldsProps {\r\n  item: any;\r\n  itemIndex: number;\r\n  columns: IColumn[];\r\n  onRenderItemColumn?: (item?: any, index?: number, column?: IColumn) => any;\r\n}\r\n\r\nexport interface IDetailsRowFieldsState {\r\n  cellContent: React.ReactNode[];\r\n}\r\n\r\nexport class DetailsRowFields extends React.Component<IDetailsRowFieldsProps, IDetailsRowFieldsState> {\r\n  constructor(props: IDetailsRowFieldsProps) {\r\n    super();\r\n\r\n    this.state = this._getState(props);\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IDetailsRowFieldsProps) {\r\n    this.setState(this._getState(newProps));\r\n  }\r\n\r\n  public render() {\r\n    let { columns } = this.props;\r\n    let { cellContent } = this.state;\r\n\r\n    return (\r\n      <div className='ms-DetailsRow-fields' data-automationid='DetailsRowFields'>\r\n        { columns.map((column, columnIndex) => (\r\n          <div\r\n            key={ columnIndex }\r\n            role={ column.isRowHeader ? 'rowheader' : 'gridcell' }\r\n            className={ css('ms-DetailsRow-cell', column.className, {\r\n              'is-multiline': column.isMultiline\r\n            }) }\r\n            style={ { width: column.calculatedWidth } }\r\n            data-automationid='DetailsRowCell'\r\n            data-automation-key={ column.key }>\r\n            { cellContent[columnIndex] }\r\n          </div>\r\n        )) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getState(props: IDetailsRowFieldsProps) {\r\n    let { item, itemIndex, onRenderItemColumn } = props;\r\n\r\n    return {\r\n      cellContent: props.columns.map((column) => {\r\n        let cellContent;\r\n\r\n        try {\r\n          let render = column.onRender || onRenderItemColumn;\r\n\r\n          cellContent = render ? render(item, itemIndex, column) : this._getCellText(item, column);\r\n        } catch (e) { /* no-op */ }\r\n\r\n        return cellContent;\r\n      })\r\n    };\r\n  }\r\n\r\n  private _getCellText(item, column) {\r\n    let value = (item && column && column.fieldName) ? item[column.fieldName] : '';\r\n\r\n    if (value === null || value === undefined) {\r\n      value = '';\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}