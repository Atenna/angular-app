{"version":3,"sources":["components/Image/Image.tsx"],"names":[],"mappings":"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","file":"components/Image/Image.js","sourcesContent":["import * as React from 'react';\r\nimport { css } from '../../utilities/css';\r\nimport { getNativeProps, imageProperties } from '../../utilities/properties';\r\nimport { EventGroup } from '../../utilities/eventGroup/EventGroup';\r\nimport './Image.scss';\r\nimport { IImageProps, ImageFit } from './Image.Props';\r\n\r\nexport interface IImageState {\r\n  loadState?: ImageLoadState;\r\n}\r\n\r\nexport enum CoverStyle {\r\n  landscape,\r\n  portrait\r\n}\r\n\r\nexport const CoverStyleMap = {\r\n  [CoverStyle.landscape]: 'ms-Image-image--landscape',\r\n  [CoverStyle.portrait]: 'ms-Image-image--portrait'\r\n};\r\n\r\nexport const ImageFitMap = {\r\n  [ImageFit.center]: 'ms-Image-image--center',\r\n  [ImageFit.contain]: 'ms-Image-image--contain',\r\n  [ImageFit.cover]: 'ms-Image-image--cover',\r\n  [ImageFit.none]: 'ms-Image-image--none'\r\n};\r\n\r\nexport enum ImageLoadState {\r\n  notLoaded,\r\n  loaded,\r\n  error,\r\n  errorLoaded\r\n}\r\n\r\nexport class Image extends React.Component<IImageProps, IImageState> {\r\n  public static defaultProps = {\r\n    shouldFadeIn: true\r\n  };\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    image: HTMLImageElement;\r\n  };\r\n\r\n  private _events: EventGroup;\r\n  private _coverStyle: CoverStyle;\r\n\r\n  constructor(props: IImageProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loadState: ImageLoadState.notLoaded\r\n    };\r\n\r\n    this._events = new EventGroup(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    let { image } = this.refs;\r\n\r\n    if (!this._evaluateImage()) {\r\n      this._events.on(image, 'load', this._evaluateImage);\r\n      this._events.on(image, 'error', this._setError);\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IImageProps) {\r\n    if (this.state.loadState === ImageLoadState.loaded) {\r\n      let { height: nextHeight, width: nextWidth } = nextProps;\r\n      let { height, width } = this.props;\r\n\r\n      if (height !== nextHeight || width !== nextWidth) {\r\n        this._computeCoverStyle(nextProps);\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this._events.dispose();\r\n  }\r\n\r\n  public render() {\r\n    let imageProps = getNativeProps(this.props, imageProperties, ['width', 'height']);\r\n    let { src, alt, width, height, shouldFadeIn, className, imageFit, errorSrc, role } = this.props;\r\n    let { loadState } = this.state;\r\n    let coverStyle = this._coverStyle;\r\n    let loaded = loadState === ImageLoadState.loaded || loadState === ImageLoadState.errorLoaded;\r\n    let srcToDisplay: string =\r\n      (loadState === ImageLoadState.error || loadState === ImageLoadState.errorLoaded) ? errorSrc : src;\r\n\r\n    // If image dimensions aren't specified, the natural size of the image is used.\r\n    return (\r\n      <div className={ css('ms-Image', className) } style={ { width: width, height: height } }>\r\n        <img\r\n          { ...imageProps }\r\n          className={\r\n            css('ms-Image-image',\r\n              (coverStyle !== undefined) && CoverStyleMap[coverStyle],\r\n              (imageFit !== undefined) && ImageFitMap[imageFit], {\r\n                'is-fadeIn': shouldFadeIn,\r\n                'is-notLoaded': !loaded,\r\n                'is-loaded': loaded,\r\n                'ms-u-fadeIn400': loaded && shouldFadeIn,\r\n                'is-error': loadState === ImageLoadState.error,\r\n                'ms-Image-image--scaleWidth': (imageFit === undefined && !!width && !height),\r\n                'ms-Image-image--scaleHeight': (imageFit === undefined && !width && !!height),\r\n                'ms-Image-image--scaleWidthHeight': (imageFit === undefined && !!width && !!height),\r\n              }) }\r\n          ref='image'\r\n          src={ srcToDisplay }\r\n          alt={ alt }\r\n          role={ role }\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _evaluateImage(): boolean {\r\n    let { src } = this.props;\r\n    let { loadState } = this.state;\r\n    let { image } = this.refs;\r\n    let isLoaded = (src && image.naturalWidth > 0 && image.naturalHeight > 0);\r\n\r\n    this._computeCoverStyle(this.props);\r\n\r\n    if (isLoaded && loadState !== ImageLoadState.loaded && loadState !== ImageLoadState.errorLoaded) {\r\n      this._events.off();\r\n      this.setState({\r\n        loadState: loadState === ImageLoadState.error ? ImageLoadState.errorLoaded : ImageLoadState.loaded\r\n      });\r\n    }\r\n\r\n    return isLoaded;\r\n  }\r\n\r\n  private _computeCoverStyle(props: IImageProps) {\r\n    let { imageFit } = props;\r\n    if (imageFit === ImageFit.cover || imageFit === ImageFit.contain) {\r\n      let { image } = this.refs;\r\n      if (image) {\r\n        let { width, height } = props;\r\n\r\n        let desiredRatio = (width as number) / (height as number);\r\n        let naturalRatio = image.naturalWidth / image.naturalHeight;\r\n\r\n        if (naturalRatio > desiredRatio) {\r\n          this._coverStyle = CoverStyle.landscape;\r\n        } else {\r\n          this._coverStyle = CoverStyle.portrait;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _setError() {\r\n    if (this.state.loadState !== ImageLoadState.error && this.state.loadState !== ImageLoadState.errorLoaded) {\r\n      this.setState({\r\n        loadState: ImageLoadState.error\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}