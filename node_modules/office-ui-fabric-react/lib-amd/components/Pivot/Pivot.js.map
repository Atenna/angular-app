{"version":3,"sources":["components/Pivot/Pivot.tsx"],"names":[],"mappings":";;;;;;;IAmCA;QAA2B,yBAAyC;QAGlE,eAAY,KAAkB;YAC5B,kBAAM,KAAK,CAAC,CAAC;YAEb,IAAM,KAAK,GAAsB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjE,IAAI,WAAmB,CAAC;YAExB,EAAE,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAC7B,WAAW,GAAG,KAAK,CAAC,kBAAkB,CAAC;YACzC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACtC,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC;YAC1D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACjC,CAAC;YAED,IAAI,CAAC,KAAK,GAAG;gBACX,YAAK;gBACL,wBAAW;gBACX,EAAE,EAAE,cAAK,CAAC,OAAO,CAAC;aACJ,CAAC;YAEjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjD,CAAC;QAEM,yCAAyB,GAAhC,UAAiC,SAAsB;YACrD,IAAM,KAAK,GAAsB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YAChE,IAAM,WAAW,GAAW,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;kBAChE,IAAI,CAAC,KAAK,CAAC,WAAW;kBACtB,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAErB,IAAI,CAAC,QAAQ,CAAC;gBACZ,YAAK;gBACL,wBAAW;aACG,CAAC,CAAC;QACpB,CAAC;QAEM,sBAAM,GAAb;YACE,MAAM,CAAC,CACL,qBAAC,GAAG;gBACA,IAAI,CAAC,iBAAiB,EAAI;gBAC1B,IAAI,CAAC,gBAAgB,EAAI,CACvB,CACP,CAAC;QACJ,CAAC;QAED;;WAEG;QACK,iCAAiB,GAAzB;YACE,MAAM,CAAC,CACL,oBAAC,qBAAS,GAAC,SAAS,EAAG,8BAAkB,CAAC,UAAY;gBACpD,qBAAC,EAAE,IAAC,SAAS,EAAG,SAAG,CAAC,UAAU,EAC5B,EAAE,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,2BAAa,CAAC,KAAK,EAAE,EAClE,EAAE,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,6BAAe,CAAC,IAAI,EAAE,CAAG,EACvE,IAAI,EAAC,SAAS,GACZ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAG,CACvC;aACK,CACb,CAAC;QACJ,CAAC;QAED;;WAEG;QACK,2BAAW,GAAnB,UAAoB,IAAqB;YAC/B,0BAAO,EAAE,0BAAS,CAAU;YAC9B,sBAAE,CAAgB;YACxB,IAAI,SAAS,CAAC;YACd,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,6BAAe,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC9E,SAAS,GAAG,qBAAC,IAAI,IAAC,SAAS,EAAC,gBAAgB;oBAAC,GAAC;oBAAE,SAAW;oBAAA,GAAC,CAAO,CAAC;YACtE,CAAC;YAED,MAAM,CAAC,CACL,qBAAC,CAAC,IACA,EAAE,EAAG,EAAE,GAAG,MAAQ,EAClB,GAAG,EAAG,OAAS,EACf,SAAS,EAAG,SAAG,CAAC,eAAe,EAAE,EAAE,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,OAAO,EAAE,CAAG,EACzF,OAAO,EAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAG,EACjD,UAAU,EAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAG,GACnD,UAAU,GAAG,IAAI,CAAC,SAAW,EAC7B,IAAI,EAAC,KAAK,GACV,aAAa,GAAG,EAAE,GAAG,QAAU,GAC/B,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,OAAS;gBACpD,qBAAC,IAAI,IAAC,SAAS,EAAC,eAAe,GAAG,IAAI,CAAC,QAAU,CAAO;gBACtD,SAAW,CACX,CACL,CAAC;QACJ,CAAC;QAED;;WAEG;QACK,gCAAgB,GAAxB;YACE,IAAM,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;YAC/C,IAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;YACzC,sBAAE,CAAgB;YAExB,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,WAAW,EACxB,IAAI,EAAC,UAAU,EACf,EAAE,EAAG,EAAE,GAAG,QAAU,GACpB,eAAe,GAAG,EAAE,GAAG,MAAQ,GAC7B,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAG,CAClD,CACP,CAAC;QACJ,CAAC;QAED;;;WAGG;QACK,8BAAc,GAAtB,UAAuB,KAAkB;YAAzC,iBAoBC;YAnBC,IAAM,KAAK,GAAsB,EAAE,CAAC;YACpC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAE7B,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAC,KAAU,EAAE,KAAa;gBAC3D,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,IAAI,KAAK,qBAAS,CAAC,CAAC,CAAC;oBAC1D,IAAM,SAAS,GAAG,KAAkB,CAAC;oBACrC,IAAM,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;oBAE5D,KAAK,CAAC,IAAI,CAAC;wBACT,QAAQ,EAAE,SAAS,CAAC,KAAK,CAAC,QAAQ;wBAClC,SAAS,EAAE,SAAS,CAAC,KAAK,CAAC,SAAS;wBACpC,OAAO,EAAE,OAAO;wBAChB,SAAS,EAAE,SAAS,CAAC,KAAK,CAAC,SAAS;qBACrC,CAAC,CAAC;oBACH,KAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;gBAC3C,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED;;WAEG;QACK,2BAAW,GAAnB,UAAoB,OAAe;YACjC,MAAM,CAAC,OAAO,KAAK,SAAS,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC;QACjF,CAAC;QAED;;WAEG;QACK,4BAAY,GAApB,UAAqB,OAAe,EAAE,EAAiC;YACrE,EAAE,CAAC,cAAc,EAAE,CAAC;YACpB,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QACxC,CAAC;QAED;;WAEG;QACK,2BAAW,GAAnB,UAAoB,OAAe,EAAE,EAAoC;YACvE,EAAE,CAAC,cAAc,EAAE,CAAC;YACpB,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,KAAK,mBAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;YACpC,CAAC;QACH,CAAC;QAED;;WAEG;QACK,mCAAmB,GAA3B,UAA4B,OAAe,EAAE,EAAkC;YAC7E,IAAI,CAAC,QAAQ,CAAC;gBACZ,WAAW,EAAE,OAAO;aACN,CAAC,CAAC;YAElB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpE,IAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;gBAE/C,2DAA2D;gBAC3D,IAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAQ,CAAC;gBAEvE,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,qBAAS,CAAC,CAAC,CAAC;oBACxD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAiB,EAAE,EAAE,CAAC,CAAC;gBAChD,CAAC;YACH,CAAC;QACH,CAAC;QACH,YAAC;IAAD,CAnLA,AAmLC,CAnL0B,KAAK,CAAC,SAAS,GAmLzC;IAnLY,aAAK,QAmLjB,CAAA","file":"components/Pivot/Pivot.js","sourcesContent":["import * as React from 'react';\r\nimport { IPivotProps } from './Pivot.Props';\r\nimport { IPivotItemProps } from './PivotItem.Props';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { KeyCodes } from '../../utilities/KeyCodes';\r\nimport { PivotItem } from './PivotItem';\r\nimport { PivotLinkFormat } from './Pivot.Props';\r\nimport { PivotLinkSize } from './Pivot.Props';\r\nimport { getId } from '../../utilities/object';\r\n\r\nimport './Pivot.scss';\r\nimport { css } from '../../utilities/css';\r\n\r\n/**\r\n *  Usage:\r\n *\r\n *   <Pivot>\r\n *     <PivotItem linkText=\"Foo\">\r\n *       <Label>Pivot #1</Label>\r\n *     </PivotItem>\r\n *     <PivotItem linkText=\"Bar\">\r\n *       <Label>Pivot #2</Label>\r\n *     </PivotItem>\r\n *     <PivotItem linkText=\"Bas\">\r\n *     <Label>Pivot #3</Label>\r\n *     </PivotItem>\r\n *   </Pivot>\r\n */\r\n\r\nexport interface IPivotState {\r\n  links: IPivotItemProps[];\r\n  selectedKey: string;\r\n  id: string;\r\n}\r\n\r\nexport class Pivot extends React.Component<IPivotProps, IPivotState> {\r\n  private _keyToIndexMapping: { [key: string]: number };\r\n\r\n  constructor(props: IPivotProps) {\r\n    super(props);\r\n\r\n    const links: IPivotItemProps[] = this._getPivotLinks(this.props);\r\n    let selectedKey: string;\r\n\r\n    if (props.initialSelectedKey) {\r\n      selectedKey = props.initialSelectedKey;\r\n    } else if (props.initialSelectedIndex) {\r\n      selectedKey = links[props.initialSelectedIndex].itemKey;\r\n    } else {\r\n      selectedKey = links[0].itemKey;\r\n    }\r\n\r\n    this.state = {\r\n      links,\r\n      selectedKey,\r\n      id: getId('Pivot')\r\n    } as IPivotState;\r\n\r\n    this._renderLink = this._renderLink.bind(this);\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IPivotProps) {\r\n    const links: IPivotItemProps[] = this._getPivotLinks(nextProps);\r\n    const selectedKey: string = this._isKeyValid(this.state.selectedKey)\r\n      ? this.state.selectedKey\r\n      : links[0].itemKey;\r\n\r\n    this.setState({\r\n      links,\r\n      selectedKey\r\n    } as IPivotState);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        { this._renderPivotLinks() }\r\n        { this._renderPivotItem() }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders the set of links to route between pivots\r\n   */\r\n  private _renderPivotLinks() {\r\n    return (\r\n      <FocusZone direction={ FocusZoneDirection.horizontal }>\r\n        <ul className={ css('ms-Pivot',\r\n          { 'ms-Pivot--large': this.props.linkSize === PivotLinkSize.large },\r\n          { 'ms-Pivot--tabs': this.props.linkFormat === PivotLinkFormat.tabs }) }\r\n          role='tablist'>\r\n          { this.state.links.map(this._renderLink) }\r\n        </ul>\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders a pivot link\r\n   */\r\n  private _renderLink(link: IPivotItemProps) {\r\n    const { itemKey, itemCount } = link;\r\n    let { id } = this.state;\r\n    let countText;\r\n    if (itemCount !== undefined && this.props.linkFormat !== PivotLinkFormat.tabs) {\r\n      countText = <span className='ms-Pivot-count'>({ itemCount })</span>;\r\n    }\r\n\r\n    return (\r\n      <a\r\n        id={ id + '-tab' }\r\n        key={ itemKey }\r\n        className={ css('ms-Pivot-link', { 'is-selected': this.state.selectedKey === itemKey }) }\r\n        onClick={ this._onLinkClick.bind(this, itemKey) }\r\n        onKeyPress={ this._onKeyPress.bind(this, itemKey) }\r\n        aria-label={ link.ariaLabel }\r\n        role='tab'\r\n        aria-controls={ id + '-panel' }\r\n        aria-selected={ this.state.selectedKey === itemKey }>\r\n        <span className='ms-Pivot-text'>{ link.linkText }</span>\r\n        { countText }\r\n      </a>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders the current Pivot Item\r\n   */\r\n  private _renderPivotItem() {\r\n    const itemKey: string = this.state.selectedKey;\r\n    const index = this._keyToIndexMapping[itemKey];\r\n    let { id } = this.state;\r\n\r\n    return (\r\n      <div className='pivotItem'\r\n        role='tabpanel'\r\n        id={ id + '-panel' }\r\n        aria-labelledby={ id + '-tab' }>\r\n        { React.Children.toArray(this.props.children)[index] }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets the set of PivotLinks as arrary of IPivotItemProps\r\n   * The set of Links is determined by child components of type PivotItem\r\n   */\r\n  private _getPivotLinks(props: IPivotProps): IPivotItemProps[] {\r\n    const links: IPivotItemProps[] = [];\r\n    this._keyToIndexMapping = {};\r\n\r\n    React.Children.map(props.children, (child: any, index: number) => {\r\n      if (typeof child === 'object' && child.type === PivotItem) {\r\n        const pivotItem = child as PivotItem;\r\n        const itemKey = pivotItem.props.itemKey || index.toString();\r\n\r\n        links.push({\r\n          linkText: pivotItem.props.linkText,\r\n          ariaLabel: pivotItem.props.ariaLabel,\r\n          itemKey: itemKey,\r\n          itemCount: pivotItem.props.itemCount\r\n        });\r\n        this._keyToIndexMapping[itemKey] = index;\r\n      }\r\n    });\r\n\r\n    return links;\r\n  }\r\n\r\n  /**\r\n   * whether the key exists in the pivot items.\r\n   */\r\n  private _isKeyValid(itemKey: string) {\r\n    return itemKey !== undefined && this._keyToIndexMapping[itemKey] !== undefined;\r\n  }\r\n\r\n  /**\r\n   * Handles the onClick event on PivotLinks\r\n   */\r\n  private _onLinkClick(itemKey: string, ev: React.MouseEvent<HTMLElement>) {\r\n    ev.preventDefault();\r\n    this._updateSelectedItem(itemKey, ev);\r\n  }\r\n\r\n  /**\r\n   * Handle the onKeyPress eventon the PivotLinks\r\n   */\r\n  private _onKeyPress(itemKey: string, ev: React.KeyboardEvent<HTMLElement>) {\r\n    ev.preventDefault();\r\n    if (ev.which === KeyCodes.enter) {\r\n      this._updateSelectedItem(itemKey);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the state with the new selected index\r\n   */\r\n  private _updateSelectedItem(itemKey: string, ev?: React.MouseEvent<HTMLElement>) {\r\n    this.setState({\r\n      selectedKey: itemKey\r\n    } as IPivotState);\r\n\r\n    if (this.props.onLinkClick && this._keyToIndexMapping[itemKey] >= 0) {\r\n      const index = this._keyToIndexMapping[itemKey];\r\n\r\n      // React.Element<any> cannot directly convert to PivotItem.\r\n      const item = React.Children.toArray(this.props.children)[index] as any;\r\n\r\n      if (typeof item === 'object' && item.type === PivotItem) {\r\n        this.props.onLinkClick(item as PivotItem, ev);\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}