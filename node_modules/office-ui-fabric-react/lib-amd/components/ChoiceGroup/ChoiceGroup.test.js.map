{"version":3,"sources":["components/ChoiceGroup/ChoiceGroup.test.tsx"],"names":[],"mappings":"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","file":"components/ChoiceGroup/ChoiceGroup.test.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n/* tslint:enable:no-unused-variable */\r\n\r\nimport * as ReactTestUtils from 'react-addons-test-utils';\r\n\r\nlet { expect } = chai;\r\n\r\nimport { ChoiceGroup } from './ChoiceGroup';\r\nimport { IChoiceGroupOption } from './ChoiceGroup.Props';\r\n\r\ndescribe('ChoiceGroup', () => {\r\n\r\n  it('Can change options.', () => {\r\n    const options: IChoiceGroupOption[] = [\r\n      { key: '1', text: '1' },\r\n      { key: '2', text: '2' },\r\n      { key: '3', text: '3' }\r\n    ];\r\n    let exception;\r\n    let threwException = false;\r\n    let choiceGroup;\r\n    try {\r\n      choiceGroup = ReactTestUtils.renderIntoDocument<ChoiceGroup>(\r\n        <ChoiceGroup\r\n          label='testgroup'\r\n          options={ options }\r\n          required={ true }\r\n          />\r\n      );\r\n    } catch (e) {\r\n      exception = e;\r\n      threwException = true;\r\n    }\r\n    expect(threwException).to.be.false;\r\n\r\n    let renderedDOM = ReactDOM.findDOMNode(choiceGroup as React.ReactInstance);\r\n    let choiceOptions = renderedDOM.querySelectorAll('.ms-ChoiceField-input');\r\n\r\n    expect((choiceOptions[0] as HTMLInputElement).checked).to.be.eq(false, 'Choice 1 was true before click');\r\n    expect((choiceOptions[1] as HTMLInputElement).checked).to.be.eq(false, 'Choice 2 was true before click');\r\n    expect((choiceOptions[2] as HTMLInputElement).checked).to.be.eq(false, 'Choice 3 was true before click');\r\n\r\n    ReactTestUtils.Simulate.change(choiceOptions[0]);\r\n\r\n    expect((choiceOptions[0] as HTMLInputElement).checked).to.be.eq(true, 'Choice 1 was false after click 1');\r\n    expect((choiceOptions[1] as HTMLInputElement).checked).to.be.eq(false, 'Choice 2 was true after click 1');\r\n    expect((choiceOptions[2] as HTMLInputElement).checked).to.be.eq(false, 'Choice 3 was true after click 1');\r\n\r\n    ReactTestUtils.Simulate.change(choiceOptions[1]);\r\n\r\n    expect((choiceOptions[0] as HTMLInputElement).checked).to.be.eq(false, 'Choice 1 was true after click 2');\r\n    expect((choiceOptions[1] as HTMLInputElement).checked).to.be.eq(true, 'Choice 2 was false after click 2');\r\n    expect((choiceOptions[2] as HTMLInputElement).checked).to.be.eq(false, 'Choice 3 was true after click 2');\r\n\r\n    ReactTestUtils.Simulate.change(choiceOptions[0]);\r\n\r\n    expect((choiceOptions[0] as HTMLInputElement).checked).to.be.eq(true, 'Choice 1 was false after click 3');\r\n    expect((choiceOptions[1] as HTMLInputElement).checked).to.be.eq(false, 'Choice 2 was true after click 3');\r\n    expect((choiceOptions[2] as HTMLInputElement).checked).to.be.eq(false, 'Choice 3 was true after click 3');\r\n  });\r\n\r\n  it('An individual choice option can be disabled', () => {\r\n    const options: IChoiceGroupOption[] = [\r\n      { key: '1', text: '1', disabled: true },\r\n      { key: '2', text: '2' },\r\n      { key: '3', text: '3' }\r\n    ];\r\n    let exception;\r\n    let threwException = false;\r\n    let choiceGroup;\r\n    try {\r\n      choiceGroup = ReactTestUtils.renderIntoDocument<ChoiceGroup>(\r\n        <ChoiceGroup\r\n          label='testgroup'\r\n          options={ options }\r\n          required={ true }\r\n          />\r\n      );\r\n    } catch (e) {\r\n      exception = e;\r\n      threwException = true;\r\n    }\r\n    expect(threwException).to.be.false;\r\n\r\n    let renderedDOM = ReactDOM.findDOMNode(choiceGroup as React.ReactInstance);\r\n    let choiceOptions = renderedDOM.querySelectorAll('.ms-ChoiceField-input');\r\n\r\n    expect((choiceOptions[0] as HTMLInputElement).disabled).to.be.eq(true, 'Disabled option 1 is not disabled');\r\n    expect((choiceOptions[1] as HTMLInputElement).disabled).to.be.eq(false, 'Not disabled option 2 is disabled');\r\n    expect((choiceOptions[2] as HTMLInputElement).disabled).to.be.eq(false, 'Not disabled option 2 is disabled');\r\n  });\r\n\r\n  it('When choicegroup is disabled all choice options are disabled', () => {\r\n    const options: IChoiceGroupOption[] = [\r\n      { key: '1', text: '1' },\r\n      { key: '2', text: '2' },\r\n      { key: '3', text: '3' }\r\n    ];\r\n    let exception;\r\n    let threwException = false;\r\n    let choiceGroup;\r\n    try {\r\n      choiceGroup = ReactTestUtils.renderIntoDocument<ChoiceGroup>(\r\n        <ChoiceGroup\r\n          label='testgroup'\r\n          options={ options }\r\n          required={ true }\r\n          disabled={ true }\r\n          />\r\n      );\r\n    } catch (e) {\r\n      exception = e;\r\n      threwException = true;\r\n    }\r\n    expect(threwException).to.be.false;\r\n\r\n    let renderedDOM = ReactDOM.findDOMNode(choiceGroup as React.ReactInstance);\r\n    let choiceOptions = renderedDOM.querySelectorAll('.ms-ChoiceField-input');\r\n\r\n    expect((choiceOptions[0] as HTMLInputElement).disabled).to.be.eq(true, 'Disabled option 1 is not disabled');\r\n    expect((choiceOptions[1] as HTMLInputElement).disabled).to.be.eq(true, 'Disabled option 2 is not disabled');\r\n    expect((choiceOptions[2] as HTMLInputElement).disabled).to.be.eq(true, 'Disabled option 3 is not disabled');\r\n  });\r\n\r\n});\r\n"],"sourceRoot":"..\\..\\..\\src"}