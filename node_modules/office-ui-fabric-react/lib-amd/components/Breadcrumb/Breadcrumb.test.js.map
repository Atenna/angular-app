{"version":3,"sources":["components/Breadcrumb/Breadcrumb.test.tsx"],"names":[],"mappings":";;IAOM,wBAAM,CAAU;IAKtB,QAAQ,CAAC,YAAY,EAAE;QAErB,EAAE,CAAC,+CAA+C,EAAE;YAClD,IAAI,aAAa,CAAC;YAClB,IAAM,aAAa,GAAG,UAAC,EAAiC,EAAE,IAAqB;gBAC7E,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC;YAC3B,CAAC,CAAC;YAEF,IAAM,KAAK,GAAsB;gBAC/B,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE;aAC7D,CAAC;YAEF,IAAI,SAAS,GAAG,cAAc,CAAC,kBAAkB,CAC/C,oBAAC,uBAAU,GACT,KAAK,EAAG,KAAO,EACb,CACL,CAAC;YAEF,IAAI,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,SAAgC,CAAC,CAAC;YACzE,IAAI,QAAQ,GAAG,WAAW,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;YAEpE,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACxC,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC","file":"components/Breadcrumb/Breadcrumb.test.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\n\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as ReactTestUtils from 'react-addons-test-utils';\r\n\r\nlet { expect } = chai;\r\n\r\nimport { Breadcrumb } from './Breadcrumb';\r\nimport { IBreadcrumbItem } from './Breadcrumb.Props';\r\n\r\ndescribe('Breadcrumb', () => {\r\n\r\n  it('can call the callback when an item is clicked', () => {\r\n    let callbackValue;\r\n    const clickCallback = (ev: React.MouseEvent<HTMLElement>, item: IBreadcrumbItem) => {\r\n      callbackValue = item.key;\r\n    };\r\n\r\n    const items: IBreadcrumbItem[] = [\r\n      { text: 'TestText', key: 'TestKey', onClick: clickCallback }\r\n    ];\r\n\r\n    let component = ReactTestUtils.renderIntoDocument<Breadcrumb>(\r\n      <Breadcrumb\r\n        items={ items }\r\n        />\r\n    );\r\n\r\n    let renderedDOM = ReactDOM.findDOMNode(component as React.ReactInstance);\r\n    let itemLink = renderedDOM.querySelector('.ms-Breadcrumb-itemLink');\r\n\r\n    ReactTestUtils.Simulate.click(itemLink);\r\n    expect(callbackValue).to.equal('TestKey');\r\n  });\r\n\r\n});\r\n"],"sourceRoot":"..\\..\\..\\src"}