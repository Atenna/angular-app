{"version":3,"sources":["components/Icon/Icon.tsx"],"names":[],"mappings":";;;;;;;;;;IAWa,YAAI,GAAuC,UAAC,KAAiB;QACxE,IAAI,UAAU,GAAG,KAAK,CAAC,QAAQ,KAAK,mBAAQ,CAAC,IAAI,CAAC;QAClD,IAAI,SAAS,GAAG,eAAG,CAAC,SAAS,EAAE,UAAU,GAAG,EAAE,GAAG,CAAC,WAAW,GAAG,mBAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;QAE5G,MAAM,CAAC,qBAAC,CAAC,gBAAM,0BAAc,CAAC,KAAK,EAAE,iCAAqB,CAAC,GAAG,SAAS,EAAG,SAAW,GAAG,CAAC;IAC3F,CAAC,CAAC","file":"components/Icon/Icon.js","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport { IIconProps } from './Icon.Props';\r\nimport { IconName } from './IconName';\r\nimport {\r\n  css,\r\n  getNativeProps,\r\n  htmlElementProperties\r\n} from '../../Utilities';\r\n\r\nexport const Icon: (props: IIconProps) => JSX.Element = (props: IIconProps) => {\r\n  let customIcon = props.iconName === IconName.None;\r\n  let className = css('ms-Icon', customIcon ? '' : ('ms-Icon--' + IconName[props.iconName]), props.className);\r\n\r\n  return <i { ...getNativeProps(props, htmlElementProperties) } className={ className } />;\r\n};"],"sourceRoot":"..\\..\\..\\src"}