{"version":3,"sources":["components/Dialog/Dialog.tsx"],"names":[],"mappings":"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","file":"components/Dialog/Dialog.js","sourcesContent":["import * as React from 'react';\r\nimport { FocusTrapZone } from '../FocusTrapZone/index';\r\nimport { IDialogProps, DialogType } from './Dialog.Props';\r\nimport { Overlay } from '../../Overlay';\r\nimport { Layer } from '../../Layer';\r\nimport { Button, ButtonType } from '../../Button';\r\nimport { DialogFooter } from './DialogFooter';\r\nimport { css } from '../../utilities/css';\r\nimport { Popup } from '../Popup/index';\r\nimport { withResponsiveMode, ResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\r\nimport { getId } from '../../utilities/object';\r\nimport { BaseComponent } from '../../common/BaseComponent';\r\nimport './Dialog.scss';\r\n\r\n// @TODO - need to change this to a panel whenever the breakpoint is under medium (verify the spec)\r\n\r\nexport interface IDialogState {\r\n  isOpen?: boolean;\r\n  isAnimatingOpen?: boolean;\r\n  isAnimatingClose?: boolean;\r\n  id?: string;\r\n}\r\n\r\n@withResponsiveMode\r\nexport class Dialog extends BaseComponent<IDialogProps, IDialogState> {\r\n\r\n  public static defaultProps: IDialogProps = {\r\n    isOpen: false,\r\n    type: DialogType.normal,\r\n    isDarkOverlay: true,\r\n    isBlocking: false,\r\n    className: '',\r\n    containerClassName: '',\r\n    contentClassName: ''\r\n  };\r\n\r\n  constructor(props: IDialogProps) {\r\n    super(props);\r\n\r\n    this._onDialogRef = this._onDialogRef.bind(this);\r\n\r\n    this.state = {\r\n      id: getId('Dialog'),\r\n      isOpen: props.isOpen,\r\n      isAnimatingOpen: props.isOpen,\r\n      isAnimatingClose: false\r\n    };\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IDialogProps) {\r\n    // Opening the dialog\r\n    if (newProps.isOpen && !this.state.isOpen) {\r\n      this.setState({\r\n        isOpen: true,\r\n        isAnimatingOpen: true,\r\n        isAnimatingClose: false\r\n      });\r\n    }\r\n\r\n    // Closing the dialog\r\n    if (!newProps.isOpen && this.state.isOpen) {\r\n      this.setState({\r\n        isAnimatingOpen: false,\r\n        isAnimatingClose: true\r\n      });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let {\r\n      closeButtonAriaLabel,\r\n      elementToFocusOnDismiss,\r\n      firstFocusableSelector,\r\n      forceFocusInsideTrap,\r\n      ignoreExternalFocusing,\r\n      isBlocking,\r\n      isClickableOutsideFocusTrap,\r\n      isDarkOverlay,\r\n      onDismiss,\r\n      onLayerDidMount,\r\n      onLayerMounted,\r\n      responsiveMode,\r\n      subText,\r\n      title,\r\n      type\r\n    } = this.props;\r\n    let { id, isOpen, isAnimatingOpen, isAnimatingClose } = this.state;\r\n    // @TODO - the discussion on whether the Dialog contain a property for rendering itself is still being discussed\r\n    if (!isOpen) {\r\n      return null;\r\n    }\r\n\r\n    let subTextContent;\r\n    const dialogClassName = css('ms-Dialog', this.props.className, {\r\n      'ms-Dialog--lgHeader': type === DialogType.largeHeader,\r\n      'ms-Dialog--close': type === DialogType.close,\r\n      'is-open': isOpen,\r\n      'is-animatingOpen': isAnimatingOpen,\r\n      'is-animatingClose': isAnimatingClose\r\n    });\r\n    let groupings = this._groupChildren();\r\n\r\n    if (subText) {\r\n      subTextContent = <p className='ms-Dialog-subText' id={ id + '-subText' }>{ subText }</p>;\r\n    }\r\n\r\n    // @temp tuatology - Will adjust this to be a panel at certain breakpoints\r\n    if (responsiveMode >= ResponsiveMode.small) {\r\n      return (\r\n        <Layer onLayerDidMount={ onLayerMounted || onLayerDidMount }>\r\n          <Popup\r\n            role='dialog'\r\n            ariaLabelledBy={ title ? id + '-title' : '' }\r\n            ariaDescribedBy={ subText ? id + '-subText' : '' }\r\n            onDismiss={ onDismiss }\r\n            >\r\n            <div\r\n              className={ dialogClassName }\r\n              ref={ this._onDialogRef }>\r\n              <Overlay isDarkThemed={ isDarkOverlay } onClick={ isBlocking ? null : onDismiss } />\r\n              <FocusTrapZone\r\n                className={ css('ms-Dialog-main', this.props.containerClassName) }\r\n                elementToFocusOnDismiss={ elementToFocusOnDismiss }\r\n                isClickableOutsideFocusTrap={ isClickableOutsideFocusTrap ? isClickableOutsideFocusTrap : !isBlocking }\r\n                ignoreExternalFocusing={ ignoreExternalFocusing }\r\n                forceFocusInsideTrap={ forceFocusInsideTrap }\r\n                firstFocusableSelector={ firstFocusableSelector }>\r\n                <div className='ms-Dialog-header'>\r\n                  <p className='ms-Dialog-title' id={ id + '-title' }>{ title }</p>\r\n                  <div className='ms-Dialog-topButton'>\r\n                    <Button\r\n                      className='ms-Dialog-button ms-Dialog-button--close'\r\n                      buttonType={ ButtonType.icon }\r\n                      icon='Cancel'\r\n                      rootProps={ { title: closeButtonAriaLabel } }\r\n                      ariaLabel={ closeButtonAriaLabel }\r\n                      onClick={ onDismiss }\r\n                      />\r\n                  </div>\r\n                </div>\r\n                <div className='ms-Dialog-inner'>\r\n                  <div className={ css('ms-Dialog-content', this.props.contentClassName) }>\r\n                    { subTextContent }\r\n                    { groupings.contents }\r\n                  </div>\r\n                  { groupings.footers }\r\n                </div>\r\n              </FocusTrapZone>\r\n            </div>\r\n          </Popup>\r\n        </Layer>\r\n      );\r\n    }\r\n  }\r\n\r\n  // @TODO - typing the footers as an array of DialogFooter is difficult because\r\n  // casing \"child as DialogFooter\" causes a problem because\r\n  // \"Neither type 'ReactElement<any>' nor type 'DialogFooter' is assignable to the other.\"\r\n  private _groupChildren(): { footers: any[]; contents: any[]; } {\r\n\r\n    let groupings: { footers: any[]; contents: any[]; } = {\r\n      footers: [],\r\n      contents: []\r\n    };\r\n\r\n    React.Children.map(this.props.children, child => {\r\n      if (typeof child === 'object' && child !== null && child.type === DialogFooter) {\r\n        groupings.footers.push(child);\r\n      } else {\r\n        groupings.contents.push(child);\r\n      }\r\n    });\r\n\r\n    return groupings;\r\n  }\r\n\r\n  private _onDialogRef(ref: HTMLDivElement) {\r\n    if (ref) {\r\n      this._events.on(ref, 'animationend', this._onAnimationEnd);\r\n    } else {\r\n      this._events.off();\r\n    }\r\n  }\r\n\r\n  // Watch for completed animations and set the state\r\n  private _onAnimationEnd(ev: AnimationEvent) {\r\n\r\n    // The dialog has just opened (faded in)\r\n    if (ev.animationName.indexOf('fadeIn') > -1) {\r\n      this.setState({\r\n        isOpen: true,\r\n        isAnimatingOpen: false\r\n      });\r\n    }\r\n\r\n    // The dialog has just closed (faded out)\r\n    if (ev.animationName.indexOf('fadeOut') > -1) {\r\n      this.setState({\r\n        isOpen: false,\r\n        isAnimatingClose: false\r\n      });\r\n\r\n      // Call the onDismiss callback\r\n      if (this.props.onDismiss) {\r\n        this.props.onDismiss();\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}